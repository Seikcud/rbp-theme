{"version":3,"sources":["webpack:///../node_modules/@material/menu-surface/constants.js","webpack:///../node_modules/@material/ripple/adapter.js","webpack:///../node_modules/@material/ripple/constants.js","webpack:///../node_modules/@material/ripple/util.js","webpack:///../node_modules/@material/ripple/foundation.js","webpack:///../node_modules/@material/ripple/index.js","webpack:///../node_modules/@material/base/foundation.js","webpack:///../node_modules/@material/base/component.js","webpack:///../node_modules/@material/base/index.js","webpack:///../node_modules/@material/list/constants.js","webpack:///../node_modules/@material/top-app-bar/adapter.js","webpack:///../node_modules/@material/top-app-bar/constants.js","webpack:///../node_modules/@material/top-app-bar/foundation.js","webpack:///../node_modules/@material/top-app-bar/fixed/foundation.js","webpack:///../node_modules/@material/top-app-bar/short/foundation.js","webpack:///../node_modules/@material/top-app-bar/standard/foundation.js","webpack:///../node_modules/@material/top-app-bar/index.js","webpack:///../node_modules/@material/tab-indicator/adapter.js","webpack:///../node_modules/@material/tab-indicator/constants.js","webpack:///../node_modules/@material/tab-indicator/foundation.js","webpack:///../node_modules/@material/tab-indicator/sliding-foundation.js","webpack:///../node_modules/@material/tab-indicator/fading-foundation.js","webpack:///../node_modules/@material/tab-indicator/index.js","webpack:///../node_modules/@material/tab/constants.js","webpack:///../node_modules/@material/tab/foundation.js","webpack:///../node_modules/@material/tab/index.js","webpack:///../node_modules/@material/tab-scroller/constants.js","webpack:///../node_modules/@material/tab-scroller/rtl-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-default-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-negative-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","webpack:///../node_modules/@material/tab-scroller/foundation.js","webpack:///../node_modules/@material/tab-scroller/util.js","webpack:///../node_modules/@material/tab-scroller/index.js","webpack:///../node_modules/@material/tab-bar/constants.js","webpack:///../node_modules/@material/tab-bar/foundation.js","webpack:///../node_modules/@material/tab-bar/index.js","webpack:///../node_modules/@material/menu/constants.js","webpack:///../node_modules/@material/menu-surface/util.js","webpack:///../node_modules/@material/menu-surface/index.js","webpack:///../node_modules/@material/menu/foundation.js","webpack:///../node_modules/@material/menu/index.js","webpack:///../node_modules/@material/menu-surface/foundation.js","webpack:///../node_modules/@material/drawer/adapter.js","webpack:///../node_modules/@material/drawer/constants.js","webpack:///../node_modules/@material/drawer/dismissible/foundation.js","webpack:///../node_modules/@material/drawer/modal/foundation.js","webpack:///../node_modules/@material/drawer/index.js","webpack:///../node_modules/@material/drawer/util.js","webpack:///../node_modules/@material/list/foundation.js","webpack:///../node_modules/@material/drawer/node_modules/focus-trap/index.js","webpack:///../node_modules/@material/dom/ponyfill.js","webpack:///../node_modules/@material/list/index.js","webpack:///../node_modules/@material/drawer/node_modules/tabbable/index.js","webpack:///../node_modules/xtend/immutable.js"],"names":["__webpack_require__","d","__webpack_exports__","cssClasses","strings","numbers","CornerBit","Corner","ANCHOR","ANIMATING_CLOSED","ANIMATING_OPEN","FIXED","OPEN","ROOT","CLOSED_EVENT","OPENED_EVENT","FOCUSABLE_ELEMENTS","TRANSITION_OPEN_DURATION","TRANSITION_CLOSE_DURATION","MARGIN_TO_EDGE","ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO","BOTTOM","CENTER","RIGHT","FLIP_RTL","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_START","TOP_END","BOTTOM_START","BOTTOM_END","UNBOUNDED","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","VAR_LEFT","VAR_TOP","VAR_FG_SIZE","VAR_FG_SCALE","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","PADDING","INITIAL_ORIGIN_SCALE","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","TAP_DELAY_MS","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","foundation_MDCRippleFoundation","foundation","defaultAdapter","browserSupportsCssVars","isUnbounded","isSurfaceActive","isSurfaceDisabled","addClass","removeClass","containsEventTarget","registerInteractionHandler","deregisterInteractionHandler","registerDocumentInteractionHandler","deregisterDocumentInteractionHandler","registerResizeHandler","deregisterResizeHandler","updateCssVariable","computeBoundingRect","getWindowPageOffset","[object Object]","adapter","super","Object","assign","this","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","left","top","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","adapter_","isActivated","hasDeactivationUXRun","wasActivatedByPointer","wasElementMadeActive","activationEvent","isProgrammatic","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","requestAnimationFrame","layoutInternal_","clearTimeout","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","forEach","type","keys","k","indexOf","activationState","previousActivationEvent","length","some","target","resetActivationState_","push","registerDeactivationHandlers_","checkElementMadeActive_","animateActivation_","key","keyCode","event","translateStart","translateEnd","startPoint","endPoint","getFgTranslationCoordinates_","x","y","rmBoundedActivationClasses_","setTimeout","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","changedTouches","pageX","pageY","getNormalizedEventCoords","state","animateDeactivation_","cancelAnimationFrame","maxDim","Math","max","sqrt","pow","getBoundedRadius","floor","updateLayoutCssVars_","round","unbounded","ripple_foundation","ripple_MDCRipple","component","args","disabled","unbounded_","root","ripple","instance","MATCHES","HTMLElementPrototype","matchesMethods","method","i","matchesMethod","getMatchesProperty","HTMLElement","prototype","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","className","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","root_","classList","add","contains","evtType","handler","removeEventListener","documentElement","varName","value","style","setProperty","getBoundingClientRect","pageXOffset","pageYOffset","Boolean","setUnbounded_","foundation_","setUnbounded","activate","deactivate","createAdapter","dataset","RippleCapableSurface","_foundation__WEBPACK_IMPORTED_MODULE_0__","MDCComponent","initialize","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","createEvent","initCustomEvent","dispatchEvent","_component__WEBPACK_IMPORTED_MODULE_1__","LIST_ITEM_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_ACTIVATED_CLASS","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_SELECTED","CHECKBOX_RADIO_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","ENABLED_ITEMS_SELECTOR","FIXED_CLASS","FIXED_SCROLLED_CLASS","SHORT_CLASS","SHORT_HAS_ACTION_ITEM_CLASS","SHORT_COLLAPSED_CLASS","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","MAX_TOP_APP_BAR_HEIGHT","ACTION_ITEM_SELECTOR","NAVIGATION_EVENT","NAVIGATION_ICON_SELECTOR","ROOT_SELECTOR","TITLE_SELECTOR","foundation_MDCTopAppBarBaseFoundation","base_foundation","hasClass","setStyle","getTopAppBarHeight","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","notifyNavigationIconClicked","registerScrollHandler","deregisterScrollHandler","getViewportScrollY","getTotalActionItems","navClickHandler_","scrollHandler_","top_app_bar_foundation","fixed_foundation","wasScrolled_","fixedScrollHandler_","short_foundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","INITIAL_VALUE","standard_foundation","lastScrollPosition_","topAppBarHeight_","wasDocked_","isDockedShowing_","currentAppBarOffsetTop_","isCurrentlyBeingResized_","resizeThrottleId_","resizeDebounceId_","topAppBarScrollHandler_","topAppBarResizeHandler_","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","checkForUpdate_","offset","abs","currentScrollPosition","diff","moveTopAppBar_","throttledResizeHandler_","currentHeight","top_app_bar_MDCTopAppBar","navIcon_","iconRipples_","scrollTarget_","rippleFactory","el","attachTo","querySelector","icons","slice","call","querySelectorAll","map","icon","iconRipple","destroyScrollHandler","initScrollHandler","property","clientHeight","emit","ACTIVE","FADE","NO_TRANSITION","CONTENT_SELECTOR","foundation_MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","previousIndicatorClientRect","tab_indicator_foundation","sliding_foundation","currentClientRect","widthDelta","xPosition","fading_foundation","tab_indicator_MDCTabIndicator","content_","prop","constants_cssClasses","constants_strings","RIPPLE_SELECTOR","TAB_INDICATOR_SELECTOR","TABINDEX","INTERACTED_EVENT","foundation_MDCTabFoundation","setAttr","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getOffsetWidth","getContentOffsetLeft","getContentOffsetWidth","focus","focusOnActivate_","focusOnActivate","isActive","rootWidth","rootLeft","contentWidth","contentLeft","rootRight","contentRight","tab_foundation","tab_MDCTab","ripple_","tabIndicator_","handleClick_","tabIndicatorFactory","rippleSurface","rippleAdapter","rippleFoundation","tabIndicatorElement","handleClick","bind","listen","unlisten","attr","setAttribute","tab","offsetLeft","offsetWidth","active","setFocusOnActivate","computeIndicatorClientRect","computeDimensions","tab_scroller_constants_cssClasses","ANIMATING","SCROLL_TEST","SCROLL_AREA_SCROLL","tab_scroller_constants_strings","AREA_SELECTOR","rtl_scroller","translateX","scrollX","rtl_default_scroller","currentScrollLeft","getScrollAreaScrollLeft","right","calculateScrollEdges_","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","min","rtl_negative_scroller","rtl_reverse_scroller","foundation_MDCTabScrollerFoundation","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","isAnimating_","rtlScrollerInstance_","horizontalScrollbarHeight","isRTL_","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","stopScrollAnimation_","scrollXIncrement","incrementScrollRTL_","incrementScroll_","scrollToRTL_","scrollTo_","rtlScrollerFactory_","transformValue","parts","exec","split","parseFloat","getRTLScroller","getScrollPositionRTL","currentScrollX","getScrollPosition","safeScrollX","animate_","animation","scrollToRTL","targetScrollX","incrementScrollRTL","getAnimatingScrollPosition_","scrollLeft","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","tab_scroller_foundation","horizontalScrollbarHeight_","tab_scroller_MDCTabScroller","area_","handleInteraction_","handleTransitionEnd_","handleInteraction","handleTransitionEnd","evtTarget","selector","filter","p","pop","propName","getPropertyValue","documentObj","shouldCacheResult","offsetHeight","removeChild","incrementScroll","scrollTo","tab_bar_constants_strings","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","EXTRA_SCROLL_AMOUNT","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","ACCEPTABLE_KEYS","Set","KEYCODE_MAP","Map","set","foundation_MDCTabBarFoundation","getScrollContentWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTab","getTabListLength","notifyTabActivated","useAutomaticActivation_","useAutomaticActivation","index","previousActiveIndex","indexIsInRange_","scrollIntoView","getKeyFromEvent_","isActivationKey_","preventDefault","determineTargetFromKey_","focusedTabIndex","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","shouldGoToEnd","shouldDecrement","shouldIncrement","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","leftIncrement","rightIncrement","scrollContentWidth","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","rootDelta","has","get","findAdjacentTabIndexClosestToEdge_","scrollIncrement","calculateScrollIncrement_","scrollWidth","findAdjacentTabIndexClosestToEdgeRTL_","calculateScrollIncrementRTL_","tab_bar_foundation","tab_bar_MDCTabBar","tabList_","tabFactory_","tabScroller_","tabScrollerFactory_","handleTabInteraction_","handleKeyDown_","setUseAutomaticActivation","tabFactory","tabScrollerFactory","getTabElements_","tabScrollerElement","handleTabInteraction","handleKeyDown","activateTab","tabElements","activeElement","tabToFind","MENU_SELECTED_LIST_ITEM","MENU_SELECTION_GROUP","SELECTED_EVENT","ARIA_SELECTED_ATTR","LIST_SELECTOR","CHECKBOX_SELECTOR","storedTransformPropertyName_","menu_surface_MDCMenuSurface","previousFocus_","anchorElement","firstFocusableElement_","lastFocusableElement_","handleKeydown_","handleBodyClick_","registerBodyClickListener_","deregisterBodyClickListener_","parentElement","constants","setFixedPosition","handleKeydown","handleBodyClick","open","isOpen","focusableElements","close","setIsHoisted","isHoisted","element","isFixed","setAbsolutePosition","corner","setAnchorCorner","margin","setAnchorMargin","quickOpen","setQuickOpen","hasAnchor","notifyClose","notifyOpen","isElementInContainer","isRtl","setTransformOrigin","transformPropertyName","getTransformPropertyName","getFocusAdapterMethods_","getDimensionAdapterMethods_","isFocused","saveFocus","restoreFocus","isFirstElementFocused","isLastElementFocused","focusFirstElement","focusLastElement","getInnerDimensions","getAnchorDimensions","getWindowDimensions","innerWidth","innerHeight","getBodyDimensions","clientWidth","getWindowScroll","setPosition","position","bottom","setMaxHeight","maxHeight","ELEMENTS_KEY_ALLOWED_IN","foundation_MDCMenuFoundation","addClassToElementAtIndex","removeClassFromElementAtIndex","addAttributeToElementAtIndex","removeAttributeFromElementAtIndex","elementContainsClass","closeSurface","getElementIndex","getParentElement","getSelectedElementIndex","notifySelected","closeAnimationEndTimerId_","isTab","handleAction_","listItem","getListItem_","handleSelection","preventDefaultEvent_","selectionGroup","getSelectionGroup_","handleSelectionGroup_","menu_surface_foundation","selectedIndex","parent","isGroup","list_foundation","isListItem","tagName","toLowerCase","menu_MDCMenu","menuSurface_","list_","afterOpenedCallback_","menuSurfaceFactory","menu_surface","listFactory","_material_list","list","wrapFocus","handleAfterOpened_","items","listElements","hoistMenuToBody","removeAttribute","item","MDCMenuSurfaceFoundation","_material_base_foundation__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_2__","isOpen_","openAnimationEndTimerId_","animationRequestId_","dimensions_","anchorCorner_","anchorMargin_","measures_","quickOpen_","hoistedElement_","isFixedPosition_","position_","isFixedPosition","typeCheckisFinite_","shiftKey","anchorRect","viewport","bodyDimensions","windowScroll","viewportDistance","anchorHeight","anchorWidth","surfaceHeight","surfaceWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","rightOffset","avoidVerticalOverlap","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuSurfaceHeight","getMenuSurfaceMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","adjustPositionForHoistedElement_","hasOwnProperty","parseInt","autoPosition_","maybeRestoreFocus_","num","isFinite","DISMISSIBLE","MODAL","ANIMATE","OPENING","CLOSING","APP_CONTENT_SELECTOR","SCRIM_SELECTOR","CLOSE_EVENT","OPEN_EVENT","foundation_MDCDismissibleDrawerFoundation","elementHasClass","focusActiveNavigationItem","trapFocus","releaseFocus","animationFrame_","animationTimer_","isOpening","isClosing","runNextAnimationFrame_","Element","closed","opened","callback","dismissible_foundation","modal_foundation","drawer_MDCDrawer","base","focusTrapFactory_","focusTrap_","scrim_","handleScrimClick_","focusTrapFactory","focus_trap_default","a","listEl","handleScrimClick","surfaceEl","clickOutsideDeactivates","initialFocus","escapeDeactivates","returnFocusOnDeactivate","createFocusTrapInstance","previousFocus","activeNavItemEl","MDCListFoundation","getListItemCount","getFocusedElementIndex","setAttributeForElementIndex","removeAttributeForElementIndex","addClassForElementIndex","removeClassForElementIndex","focusItemAtIndex","setTabIndexForListItemChildren","followHref","toggleCheckbox","wrapFocus_","isVertical_","isSingleSelectionList_","selectedIndex_","useActivatedClass_","useActivated","listItemIndex","isRootListItem","arrowLeft","arrowUp","arrowRight","arrowDown","isHome","isEnd","isEnter","isSpace","currentIndex","focusNextElement","focusPrevElement","setSelectedIndex","prevIndex","lastIndex","tabbable","xtend","listeningFocusTrap","delay","fn","module","exports","userOptions","doc","container","config","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","paused","trap","activateOptions","updateTabbableNodes","onActivate","addListeners","pause","removeListeners","unpause","deactivateOptions","onDeactivate","returnFocus","tryFocus","getInitialFocusNode","checkFocusIn","checkPointerDown","checkClick","checkKey","getNodeForOption","optionName","optionValue","isFocusable","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","checkTab","tabbableNodes","select","isSelectableInput","matches","webkitMatchesSelector","msMatchesSelector","list_MDCList","focusInEventListener_","focusOutEventListener_","handleClickEvent_","handleKeydownEvent_","handleFocusInEvent_","handleFocusOutEvent_","initializeListType","direction","getAttribute","vertical","ele","eventTarget","getListItemIndex_","handleFocusIn","handleFocusOut","preselectedElement","setUseActivatedClass","singleSelection","setVerticalOrientation","setWrapFocus","isSingleSelectionList","setSingleSelection","tabIndexValue","href","click","checkboxOrRadioExists","initEvent","checked","candidateSelectors","candidateSelector","join","options","candidate","candidateTabindex","regularTabbables","orderedTabbables","untouchabilityChecker","UntouchabilityChecker","ownerDocument","candidates","includeContainer","Array","apply","unshift","isNodeMatchingSelectorTabbable","getTabindex","documentOrder","tabIndex","sort","sortOrderedTabbables","concat","isNodeMatchingSelectorFocusable","isInput","isRadio","name","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isHiddenInput","isUntouchable","isTabbable","focusableCandidateSelector","tabindexAttr","isNaN","contentEditable","isContentEditable","b","elementDocument","cache","hasDisplayNone","nodeComputedStyle","cached","predicate","find","result","defaultView","display","parentNode","visibility","arguments","source"],"mappings":"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","file":"vendors~about~apply~dashboard~forum~home~roster.js","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface',\n};\n\n/** @enum {string} */\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled=\"true\"]), input:not(:disabled), ' +\n  'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Total duration of menu-surface open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu-surface close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n\n    this.scrollHandler_ = () => {};\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  initScrollHandler() {\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroyScrollHandler() {\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from '../constants';\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarFoundation from '../foundation';\n\n/**\n * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}\n * @final\n */\nclass MDCFixedTopAppBarFoundation extends MDCTopAppBarFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /** State variable for the previous scroll iteration top app bar state */\n    this.wasScrolled_ = false;\n\n    this.scrollHandler_ = () => this.fixedScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  /**\n   * Scroll handler for applying/removing the modifier class\n   * on the fixed top app bar.\n   */\n  fixedScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.wasScrolled_) {\n        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = false;\n      }\n    } else {\n      if (!this.wasScrolled_) {\n        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = true;\n      }\n    }\n  }\n}\n\nexport default MDCFixedTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {numbers} from '../constants';\n\nconst INITIAL_VALUE = 0;\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}\n * @final\n */\nclass MDCTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /**\n     * Used for diffs of current scroll position vs previous scroll position\n     * @private {number}\n     */\n    this.lastScrollPosition_ = this.adapter_.getViewportScrollY();\n\n    /**\n     * Used to verify when the top app bar is completely showing or completely hidden\n     * @private {number}\n     */\n    this.topAppBarHeight_ = this.adapter_.getTopAppBarHeight();\n\n    /**\n     * wasDocked_ is used to indicate if the top app bar was docked in the previous\n     * scroll handler iteration.\n     * @private {boolean}\n     */\n    this.wasDocked_ = true;\n\n    /**\n     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully\n     * shown position.\n     * @private {boolean}\n     */\n    this.isDockedShowing_ = true;\n\n    /**\n     * Variable for current scroll position of the top app bar\n     * @private {number}\n     */\n    this.currentAppBarOffsetTop_ = 0;\n\n    /**\n     * Used to prevent the top app bar from being scrolled out of view during resize events\n     * @private {boolean} */\n    this.isCurrentlyBeingResized_ = false;\n\n    /**\n     * The timeout that's used to throttle the resize events\n     * @private {number}\n     */\n    this.resizeThrottleId_ = INITIAL_VALUE;\n\n    /**\n     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize\n     * @private {number}\n     */\n    this.resizeDebounceId_ = INITIAL_VALUE;\n\n    this.scrollHandler_ = () => this.topAppBarScrollHandler_();\n    this.resizeHandler_ = () => this.topAppBarResizeHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.setStyle('top', '');\n  }\n\n  /**\n   * Function to determine if the DOM needs to update.\n   * @return {boolean}\n   * @private\n   */\n  checkForUpdate_() {\n    const offscreenBoundaryTop = -this.topAppBarHeight_;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked_ = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked_) {\n        this.wasDocked_ = true;\n        return true;\n      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing_ = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  /**\n   * Function to move the top app bar if needed.\n   * @private\n   */\n  moveTopAppBar_() {\n    if (this.checkForUpdate_()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop_;\n      if (Math.abs(offset) >= this.topAppBarHeight_) {\n        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.adapter_.setStyle('top', offset + 'px');\n    }\n  }\n\n  /**\n   * Scroll handler for the default scroll behavior of the top app bar.\n   * @private\n   */\n  topAppBarScrollHandler_() {\n    const currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition_;\n    this.lastScrollPosition_ = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized_) {\n      this.currentAppBarOffsetTop_ -= diff;\n\n      if (this.currentAppBarOffsetTop_ > 0) {\n        this.currentAppBarOffsetTop_ = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {\n        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;\n      }\n\n      this.moveTopAppBar_();\n    }\n  }\n\n  /**\n   * Top app bar resize handler that throttle/debounce functions that execute updates.\n   * @private\n   */\n  topAppBarResizeHandler_() {\n    // Throttle resize events 10 p/s\n    if (!this.resizeThrottleId_) {\n      this.resizeThrottleId_ = setTimeout(() => {\n        this.resizeThrottleId_ = INITIAL_VALUE;\n        this.throttledResizeHandler_();\n      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    }\n\n    this.isCurrentlyBeingResized_ = true;\n\n    if (this.resizeDebounceId_) {\n      clearTimeout(this.resizeDebounceId_);\n    }\n\n    this.resizeDebounceId_ = setTimeout(() => {\n      this.topAppBarScrollHandler_();\n      this.isCurrentlyBeingResized_ = false;\n      this.resizeDebounceId_ = INITIAL_VALUE;\n    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n  }\n\n  /**\n   * Throttled function that updates the top app bar scrolled values if the\n   * top app bar height changes.\n   * @private\n   */\n  throttledResizeHandler_() {\n    const currentHeight = this.adapter_.getTopAppBarHeight();\n    if (this.topAppBarHeight_ !== currentHeight) {\n      this.wasDocked_ = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;\n      this.topAppBarHeight_ = currentHeight;\n    }\n    this.topAppBarScrollHandler_();\n  }\n}\n\nexport default MDCTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCComponent from '@material/base/component';\nimport {MDCRipple} from '@material/ripple/index';\nimport {cssClasses, strings} from './constants';\nimport MDCTopAppBarBaseFoundation from './foundation';\nimport MDCFixedTopAppBarFoundation from './fixed/foundation';\nimport MDCShortTopAppBarFoundation from './short/foundation';\nimport MDCTopAppBarFoundation from './standard/foundation';\n\n/**\n * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}\n * @final\n */\nclass MDCTopAppBar extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @private {?Element} */\n    this.navIcon_;\n    /** @type {?Array<MDCRipple>} */\n    this.iconRipples_;\n    /** @type {Object} */\n    this.scrollTarget_;\n  }\n\n  initialize(\n    rippleFactory = (el) => MDCRipple.attachTo(el)) {\n    this.navIcon_ = this.root_.querySelector(strings.NAVIGATION_ICON_SELECTOR);\n\n    // Get all icons in the toolbar and instantiate the ripples\n    const icons = [].slice.call(this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR));\n    if (this.navIcon_) {\n      icons.push(this.navIcon_);\n    }\n\n    this.iconRipples_ = icons.map((icon) => {\n      const ripple = rippleFactory(icon);\n      ripple.unbounded = true;\n      return ripple;\n    });\n  }\n\n  destroy() {\n    this.iconRipples_.forEach((iconRipple) => iconRipple.destroy());\n    super.destroy();\n  }\n\n  setScrollTarget(target) {\n    this.foundation_.destroyScrollHandler();\n    this.scrollTarget_ = target;\n    this.foundation_.initScrollHandler();\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTopAppBar}\n   */\n  static attachTo(root) {\n    return new MDCTopAppBar(root);\n  }\n\n  /**\n   * @return {!MDCTopAppBarBaseFoundation}\n   */\n  getDefaultFoundation() {\n    /** @type {!MDCTopAppBarAdapter} */\n    const adapter = /** @type {!MDCTopAppBarAdapter} */ (Object.assign({\n      hasClass: (className) => this.root_.classList.contains(className),\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setStyle: (property, value) => this.root_.style.setProperty(property, value),\n      getTopAppBarHeight: () => this.root_.clientHeight,\n      registerNavigationIconInteractionHandler: (evtType, handler) => {\n        if (this.navIcon_) {\n          this.navIcon_.addEventListener(evtType, handler);\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (evtType, handler) => {\n        if (this.navIcon_) {\n          this.navIcon_.removeEventListener(evtType, handler);\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.emit(strings.NAVIGATION_EVENT, {});\n      },\n      registerScrollHandler: (handler) => this.scrollTarget_.addEventListener('scroll', handler),\n      deregisterScrollHandler: (handler) => this.scrollTarget_.removeEventListener('scroll', handler),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      getViewportScrollY: () =>\n        this.scrollTarget_[this.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'],\n      getTotalActionItems: () =>\n        this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length,\n    })\n    );\n\n    this.scrollTarget_ = window;\n\n    /** @type {!MDCTopAppBarBaseFoundation} */\n    let foundation;\n    if (this.root_.classList.contains(cssClasses.SHORT_CLASS)) {\n      foundation = new MDCShortTopAppBarFoundation(adapter);\n    } else if (this.root_.classList.contains(cssClasses.FIXED_CLASS)) {\n      foundation = new MDCFixedTopAppBarFoundation(adapter);\n    } else {\n      foundation = new MDCTopAppBarFoundation(adapter);\n    }\n\n    return foundation;\n  }\n}\n\nexport {MDCTopAppBar, MDCTopAppBarBaseFoundation,\n  MDCTopAppBarFoundation, MDCFixedTopAppBarFoundation,\n  MDCShortTopAppBarFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Tab Indicator.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab Indicator into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabIndicatorAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the client rect of the content element.\n   * @return {!ClientRect}\n   */\n  computeContentClientRect() {}\n\n  /**\n   * Sets a style property of the content element to the passed value\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setContentStyleProperty(propName, value) {}\n}\n\nexport default MDCTabIndicatorAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab-indicator--active',\n  FADE: 'mdc-tab-indicator--fade',\n  NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\n\n/** @enum {string} */\nconst strings = {\n  CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTabIndicatorAdapter from './adapter';\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}\n * @abstract\n */\nclass MDCTabIndicatorFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabIndicatorAdapter for typing information\n   * @return {!MDCTabIndicatorAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabIndicatorAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      computeContentClientRect: () => {},\n      setContentStyleProperty: () => {},\n    });\n  }\n\n  /** @param {!MDCTabIndicatorAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabIndicatorFoundation.defaultAdapter, adapter));\n  }\n\n  /** @return {!ClientRect} */\n  computeContentClientRect() {\n    return this.adapter_.computeContentClientRect();\n  }\n\n  /**\n   * Activates the indicator\n   * @param {!ClientRect=} previousIndicatorClientRect\n   * @abstract\n   */\n  activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars\n\n  /** @abstract */\n  deactivate() {}\n}\n\nexport default MDCTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCSlidingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  /** @param {!ClientRect=} previousIndicatorClientRect */\n  activate(previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    }\n\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = this.computeContentClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    this.computeContentClientRect();\n\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCSlidingTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCFadingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  activate() {\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCFadingTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCTabIndicatorAdapter from './adapter';\nimport MDCTabIndicatorFoundation from './foundation';\n\nimport MDCSlidingTabIndicatorFoundation from './sliding-foundation';\nimport MDCFadingTabIndicatorFoundation from './fading-foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabIndicatorFoundation>}\n * @final\n */\nclass MDCTabIndicator extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabIndicator}\n   */\n  static attachTo(root) {\n    return new MDCTabIndicator(root);\n  }\n\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @type {?Element} */\n    this.content_;\n  }\n\n  initialize() {\n    this.content_ = this.root_.querySelector(MDCTabIndicatorFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  /**\n   * @return {!ClientRect}\n   */\n  computeContentClientRect() {\n    return this.foundation_.computeContentClientRect();\n  }\n\n  /**\n   * @return {!MDCTabIndicatorFoundation}\n   */\n  getDefaultFoundation() {\n    const adapter = /** @type {!MDCTabIndicatorAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      computeContentClientRect: () => this.content_.getBoundingClientRect(),\n      setContentStyleProperty: (prop, value) => this.content_.style.setProperty(prop, value),\n    }));\n\n    if (this.root_.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {\n      return new MDCFadingTabIndicatorFoundation(adapter);\n    }\n\n    // Default to the sliding indicator\n    return new MDCSlidingTabIndicatorFoundation(adapter);\n  }\n\n  /**\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.foundation_.activate(previousIndicatorClientRect);\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n}\n\nexport {MDCTabIndicator, MDCTabIndicatorFoundation, MDCSlidingTabIndicatorFoundation, MDCFadingTabIndicatorFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_SELECTED: 'aria-selected',\n  RIPPLE_SELECTOR: '.mdc-tab__ripple',\n  CONTENT_SELECTOR: '.mdc-tab__content',\n  TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n  TABINDEX: 'tabIndex',\n  INTERACTED_EVENT: 'MDCTab:interacted',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabAdapter>}\n * @final\n */\nclass MDCTabFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabAdapter for typing information\n   * @return {!MDCTabAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      activateIndicator: () => {},\n      deactivateIndicator: () => {},\n      notifyInteracted: () => {},\n      getOffsetLeft: () => {},\n      getOffsetWidth: () => {},\n      getContentOffsetLeft: () => {},\n      getContentOffsetWidth: () => {},\n      focus: () => {},\n    });\n  }\n\n  /** @param {!MDCTabAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.focusOnActivate_ = true;\n  }\n\n  /**\n   * Handles the \"click\" event\n   */\n  handleClick() {\n    // It's up to the parent component to keep track of the active Tab and\n    // ensure we don't activate a Tab that's already active.\n    this.adapter_.notifyInteracted();\n  }\n\n  /**\n   * Returns the Tab's active state\n   * @return {boolean}\n   */\n  isActive() {\n    return this.adapter_.hasClass(cssClasses.ACTIVE);\n  }\n\n  /**\n   * Sets whether the tab should focus itself when activated\n   * @param {boolean} focusOnActivate\n   */\n  setFocusOnActivate(focusOnActivate) {\n    this.focusOnActivate_ = focusOnActivate;\n  }\n\n  /**\n   * Activates the Tab\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.adapter_.addClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'true');\n    this.adapter_.setAttr(strings.TABINDEX, '0');\n    this.adapter_.activateIndicator(previousIndicatorClientRect);\n    if (this.focusOnActivate_) {\n      this.adapter_.focus();\n    }\n  }\n\n  /**\n   * Deactivates the Tab\n   */\n  deactivate() {\n    // Early exit\n    if (!this.isActive()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'false');\n    this.adapter_.setAttr(strings.TABINDEX, '-1');\n    this.adapter_.deactivateIndicator();\n  }\n\n  /**\n   * Returns the dimensions of the Tab\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    const rootWidth = this.adapter_.getOffsetWidth();\n    const rootLeft = this.adapter_.getOffsetLeft();\n    const contentWidth = this.adapter_.getContentOffsetWidth();\n    const contentLeft = this.adapter_.getContentOffsetLeft();\n\n    return {\n      rootLeft,\n      rootRight: rootLeft + rootWidth,\n      contentLeft: rootLeft + contentLeft,\n      contentRight: rootLeft + contentLeft + contentWidth,\n    };\n  }\n}\n\nexport default MDCTabFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\n/* eslint-disable no-unused-vars */\nimport {MDCRipple, MDCRippleFoundation, RippleCapableSurface} from '@material/ripple/index';\nimport {MDCTabIndicator, MDCTabIndicatorFoundation} from '@material/tab-indicator/index';\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport MDCTabFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabFoundation>}\n * @final\n */\nclass MDCTab extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @private {?MDCRipple} */\n    this.ripple_;\n    /** @private {?MDCTabIndicator} */\n    this.tabIndicator_;\n    /** @private {?Element} */\n    this.content_;\n\n    /** @private {?Function} */\n    this.handleClick_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTab}\n   */\n  static attachTo(root) {\n    return new MDCTab(root);\n  }\n\n  initialize(\n    rippleFactory = (el, foundation) => new MDCRipple(el, foundation),\n    tabIndicatorFactory = (el) => new MDCTabIndicator(el)) {\n    const rippleSurface = this.root_.querySelector(MDCTabFoundation.strings.RIPPLE_SELECTOR);\n    const rippleAdapter = Object.assign(MDCRipple.createAdapter(/** @type {!RippleCapableSurface} */ (this)), {\n      addClass: (className) => rippleSurface.classList.add(className),\n      removeClass: (className) => rippleSurface.classList.remove(className),\n      updateCssVariable: (varName, value) => rippleSurface.style.setProperty(varName, value),\n    });\n    const rippleFoundation = new MDCRippleFoundation(rippleAdapter);\n    this.ripple_ = rippleFactory(this.root_, rippleFoundation);\n\n    const tabIndicatorElement = this.root_.querySelector(MDCTabFoundation.strings.TAB_INDICATOR_SELECTOR);\n    this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);\n\n    this.content_ = this.root_.querySelector(MDCTabFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);\n    this.listen('click', this.handleClick_);\n  }\n\n  destroy() {\n    this.unlisten('click', /** @type {!Function} */ (this.handleClick_));\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /**\n   * @return {!MDCTabFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTabFoundation(\n      /** @type {!MDCTabAdapter} */ ({\n        setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        activateIndicator: (previousIndicatorClientRect) => this.tabIndicator_.activate(previousIndicatorClientRect),\n        deactivateIndicator: () => this.tabIndicator_.deactivate(),\n        notifyInteracted: () => this.emit(MDCTabFoundation.strings.INTERACTED_EVENT, {tab: this}, true /* bubble */),\n        getOffsetLeft: () => this.root_.offsetLeft,\n        getOffsetWidth: () => this.root_.offsetWidth,\n        getContentOffsetLeft: () => this.content_.offsetLeft,\n        getContentOffsetWidth: () => this.content_.offsetWidth,\n        focus: () => this.root_.focus(),\n      }));\n  }\n\n  /**\n   * Getter for the active state of the tab\n   * @return {boolean}\n   */\n  get active() {\n    return this.foundation_.isActive();\n  }\n\n  set focusOnActivate(focusOnActivate) {\n    this.foundation_.setFocusOnActivate(focusOnActivate);\n  }\n\n  /**\n   * Activates the tab\n   * @param {!ClientRect=} computeIndicatorClientRect\n   */\n  activate(computeIndicatorClientRect) {\n    this.foundation_.activate(computeIndicatorClientRect);\n  }\n\n  /**\n   * Deactivates the tab\n   */\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  /**\n   * Returns the indicator's client rect\n   * @return {!ClientRect}\n   */\n  computeIndicatorClientRect() {\n    return this.tabIndicator_.computeContentClientRect();\n  }\n\n  /**\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    return this.foundation_.computeDimensions();\n  }\n\n  /**\n   * Focuses the tab\n   */\n  focus() {\n    this.root_.focus();\n  }\n}\n\nexport {MDCTab, MDCTabFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport {MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends {MDCComponent<!MDCTabScrollerFoundation>}\n * @final\n */\nclass MDCTabScroller extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabScroller}\n   */\n  static attachTo(root) {\n    return new MDCTabScroller(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {?Element} */\n    this.content_;\n\n    /** @private {?Element} */\n    this.area_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleInteraction_;\n\n    /** @private {?function(!Event): undefined} */\n    this.handleTransitionEnd_;\n  }\n\n  initialize() {\n    this.area_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.AREA_SELECTOR);\n    this.content_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  initialSyncWithDOM() {\n    this.handleInteraction_ = () => this.foundation_.handleInteraction();\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.area_.addEventListener('wheel', this.handleInteraction_);\n    this.area_.addEventListener('touchstart', this.handleInteraction_);\n    this.area_.addEventListener('pointerdown', this.handleInteraction_);\n    this.area_.addEventListener('mousedown', this.handleInteraction_);\n    this.area_.addEventListener('keydown', this.handleInteraction_);\n    this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.area_.removeEventListener('wheel', this.handleInteraction_);\n    this.area_.removeEventListener('touchstart', this.handleInteraction_);\n    this.area_.removeEventListener('pointerdown', this.handleInteraction_);\n    this.area_.removeEventListener('mousedown', this.handleInteraction_);\n    this.area_.removeEventListener('keydown', this.handleInteraction_);\n    this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  /**\n   * @return {!MDCTabScrollerFoundation}\n   */\n  getDefaultFoundation() {\n    const adapter = /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n        return evtTarget[MATCHES](selector);\n      },\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      addScrollAreaClass: (className) => this.area_.classList.add(className),\n      setScrollAreaStyleProperty: (prop, value) => this.area_.style.setProperty(prop, value),\n      setScrollContentStyleProperty: (prop, value) => this.content_.style.setProperty(prop, value),\n      getScrollContentStyleValue: (propName) => window.getComputedStyle(this.content_).getPropertyValue(propName),\n      setScrollAreaScrollLeft: (scrollX) => this.area_.scrollLeft = scrollX,\n      getScrollAreaScrollLeft: () => this.area_.scrollLeft,\n      getScrollContentOffsetWidth: () => this.content_.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.area_.offsetWidth,\n      computeScrollAreaClientRect: () => this.area_.getBoundingClientRect(),\n      computeScrollContentClientRect: () => this.content_.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () => util.computeHorizontalScrollbarHeight(document),\n    });\n\n    return new MDCTabScrollerFoundation(adapter);\n  }\n\n  /**\n   * Returns the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    return this.foundation_.getScrollPosition();\n  }\n\n  /**\n   * Returns the width of the scroll content\n   * @return {number}\n   */\n  getScrollContentWidth() {\n    return this.content_.offsetWidth;\n  }\n\n  /**\n   * Increments the scroll value by the given amount\n   * @param {number} scrollXIncrement The pixel value by which to increment the scroll value\n   */\n  incrementScroll(scrollXIncrement) {\n    this.foundation_.incrementScroll(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given pixel position\n   * @param {number} scrollX The pixel value to scroll to\n   */\n  scrollTo(scrollX) {\n    this.foundation_.scrollTo(scrollX);\n  }\n}\n\nexport {MDCTabScroller, MDCTabScrollerFoundation, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n  TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n  TAB_SELECTOR: '.mdc-tab',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  END_KEY: 'End',\n  HOME_KEY: 'Home',\n  ENTER_KEY: 'Enter',\n  SPACE_KEY: 'Space',\n};\n\n/** @enum {number} */\nconst numbers = {\n  EXTRA_SCROLL_AMOUNT: 20,\n  ARROW_LEFT_KEYCODE: 37,\n  ARROW_RIGHT_KEYCODE: 39,\n  END_KEYCODE: 35,\n  HOME_KEYCODE: 36,\n  ENTER_KEYCODE: 13,\n  SPACE_KEYCODE: 32,\n};\n\nexport {\n  numbers,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\nimport {strings, numbers} from './constants';\nimport MDCTabBarAdapter from './adapter';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @type {Set<string>}\n */\nconst ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\n\n/**\n * @type {Map<number, string>}\n */\nconst KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\n\n/**\n * @extends {MDCFoundation<!MDCTabBarAdapter>}\n * @final\n */\nclass MDCTabBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @see MDCTabBarAdapter for typing information\n   * @return {!MDCTabBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabBarAdapter} */ ({\n      scrollTo: () => {},\n      incrementScroll: () => {},\n      getScrollPosition: () => {},\n      getScrollContentWidth: () => {},\n      getOffsetWidth: () => {},\n      isRTL: () => {},\n      setActiveTab: () => {},\n      activateTabAtIndex: () => {},\n      deactivateTabAtIndex: () => {},\n      focusTabAtIndex: () => {},\n      getTabIndicatorClientRectAtIndex: () => {},\n      getTabDimensionsAtIndex: () => {},\n      getPreviousActiveTabIndex: () => {},\n      getFocusedTabIndex: () => {},\n      getIndexOfTab: () => {},\n      getTabListLength: () => {},\n      notifyTabActivated: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTabBarAdapter} adapter\n   * */\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.useAutomaticActivation_ = false;\n  }\n\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   * @param {boolean} useAutomaticActivation\n   */\n  setUseAutomaticActivation(useAutomaticActivation) {\n    this.useAutomaticActivation_ = useAutomaticActivation;\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index\n   */\n  activateTab(index) {\n    const previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n      return;\n    }\n\n    this.adapter_.deactivateTabAtIndex(previousActiveIndex);\n    this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));\n    this.scrollIntoView(index);\n\n    this.adapter_.notifyTabActivated(index);\n  }\n\n  /**\n   * Handles the keydown event\n   * @param {!Event} evt\n   */\n  handleKeyDown(evt) {\n    // Get the key from the event\n    const key = this.getKeyFromEvent_(evt);\n\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey_(key)) {\n      evt.preventDefault();\n    }\n\n    if (this.useAutomaticActivation_) {\n      if (this.isActivationKey_(key)) {\n        return;\n      }\n\n      const index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);\n      this.adapter_.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      const focusedTabIndex = this.adapter_.getFocusedTabIndex();\n      if (this.isActivationKey_(key)) {\n        this.adapter_.setActiveTab(focusedTabIndex);\n      } else {\n        const index = this.determineTargetFromKey_(focusedTabIndex, key);\n        this.adapter_.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  }\n\n  /**\n   * Handles the MDCTab:interacted event\n   * @param {!Event} evt\n   */\n  handleTabInteraction(evt) {\n    this.adapter_.setActiveTab(this.adapter_.getIndexOfTab(evt.detail.tab));\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index The tab index to make visible\n   */\n  scrollIntoView(index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange_(index)) {\n      return;\n    }\n\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      return this.adapter_.scrollTo(0);\n    }\n\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter_.getTabListLength() - 1) {\n      return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());\n    }\n\n    if (this.isRTL_()) {\n      return this.scrollIntoViewRTL_(index);\n    }\n\n    this.scrollIntoView_(index);\n  }\n\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param {number} origin The original index from which to determine the destination\n   * @param {string} key The name of the key\n   * @return {number}\n   * @private\n   */\n  determineTargetFromKey_(origin, key) {\n    const isRTL = this.isRTL_();\n    const maxIndex = this.adapter_.getTabListLength() - 1;\n    const shouldGoToEnd = key === strings.END_KEY;\n    const shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    const shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    let index = origin;\n\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    const relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    const leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n\n    return Math.max(rightIncrement, 0);\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @param {number} scrollContentWidth The width of the scroll content\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    const relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    const leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n\n    return Math.min(rightIncrement, 0);\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    const relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    const relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    const relativeRootDelta = relativeRootLeft + relativeRootRight;\n    const leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    const rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @param {number} scrollContentWidth The width of the scroller content\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    const rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    const rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    const rootDelta = rootLeft + rootRight;\n    const leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    const rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Returns the key associated with a keydown event\n   * @param {!Event} evt The keydown event\n   * @return {string}\n   * @private\n   */\n  getKeyFromEvent_(evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n\n    return KEYCODE_MAP.get(evt.keyCode);\n  }\n\n  isActivationKey_(key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  }\n\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param {number} index The index to test\n   * @private\n   */\n  indexIsInRange_(index) {\n    return index >= 0 && index < this.adapter_.getTabListLength();\n  }\n\n  /**\n   * Returns the view's RTL property\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.isRTL();\n  }\n\n  /**\n   * Scrolls the tab at the given index into view for left-to-right useragents\n   * @param {number} index The index of the tab to scroll into view\n   * @private\n   */\n  scrollIntoView_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param {number} index The tab index to make visible\n   * @private\n   */\n  scrollIntoViewRTL_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const scrollWidth = this.adapter_.getScrollContentWidth();\n    const nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(\n      index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n}\n\nexport default MDCTabBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport {MDCTab, MDCTabFoundation} from '@material/tab/index';\nimport {MDCTabScroller} from '@material/tab-scroller/index';\n\nimport MDCTabBarAdapter from './adapter';\nimport MDCTabBarFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabBarFoundation>}\n * @final\n */\nclass MDCTabBar extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Array<!MDCTab>} */\n    this.tabList_;\n\n    /** @type {(function(!Element): !MDCTab)} */\n    this.tabFactory_;\n\n    /** @private {?MDCTabScroller} */\n    this.tabScroller_;\n\n    /** @type {(function(!Element): !MDCTabScroller)} */\n    this.tabScrollerFactory_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleTabInteraction_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleKeyDown_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabBar}\n   */\n  static attachTo(root) {\n    return new MDCTabBar(root);\n  }\n\n  set focusOnActivate(focusOnActivate) {\n    this.tabList_.forEach((tab) => tab.focusOnActivate = focusOnActivate);\n  }\n\n  set useAutomaticActivation(useAutomaticActivation) {\n    this.foundation_.setUseAutomaticActivation(useAutomaticActivation);\n  }\n\n  /**\n   * @param {(function(!Element): !MDCTab)=} tabFactory A function which creates a new MDCTab\n   * @param {(function(!Element): !MDCTabScroller)=} tabScrollerFactory A function which creates a new MDCTabScroller\n   */\n  initialize(\n    tabFactory = (el) => new MDCTab(el),\n    tabScrollerFactory = (el) => new MDCTabScroller(el)) {\n    this.tabFactory_ = tabFactory;\n    this.tabScrollerFactory_ = tabScrollerFactory;\n\n    this.tabList_ = this.getTabElements_().map((el) => this.tabFactory_(el));\n\n    const tabScrollerElement = this.root_.querySelector(MDCTabBarFoundation.strings.TAB_SCROLLER_SELECTOR);\n    if (tabScrollerElement) {\n      this.tabScroller_ = this.tabScrollerFactory_(tabScrollerElement);\n    }\n  }\n\n  initialSyncWithDOM() {\n    this.handleTabInteraction_ = (evt) => this.foundation_.handleTabInteraction(evt);\n    this.handleKeyDown_ = (evt) => this.foundation_.handleKeyDown(evt);\n\n    this.root_.addEventListener(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.root_.addEventListener('keydown', this.handleKeyDown_);\n\n    for (let i = 0; i < this.tabList_.length; i++) {\n      if (this.tabList_[i].active) {\n        this.scrollIntoView(i);\n        break;\n      }\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.root_.removeEventListener(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.root_.removeEventListener('keydown', this.handleKeyDown_);\n    this.tabList_.forEach((tab) => tab.destroy());\n    this.tabScroller_.destroy();\n  }\n\n  /**\n   * @return {!MDCTabBarFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTabBarFoundation(\n      /** @type {!MDCTabBarAdapter} */ ({\n        scrollTo: (scrollX) => this.tabScroller_.scrollTo(scrollX),\n        incrementScroll: (scrollXIncrement) => this.tabScroller_.incrementScroll(scrollXIncrement),\n        getScrollPosition: () => this.tabScroller_.getScrollPosition(),\n        getScrollContentWidth: () => this.tabScroller_.getScrollContentWidth(),\n        getOffsetWidth: () => this.root_.offsetWidth,\n        isRTL: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n        setActiveTab: (index) => this.foundation_.activateTab(index),\n        activateTabAtIndex: (index, clientRect) => this.tabList_[index].activate(clientRect),\n        deactivateTabAtIndex: (index) => this.tabList_[index].deactivate(),\n        focusTabAtIndex: (index) => this.tabList_[index].focus(),\n        getTabIndicatorClientRectAtIndex: (index) => this.tabList_[index].computeIndicatorClientRect(),\n        getTabDimensionsAtIndex: (index) => this.tabList_[index].computeDimensions(),\n        getPreviousActiveTabIndex: () => {\n          for (let i = 0; i < this.tabList_.length; i++) {\n            if (this.tabList_[i].active) {\n              return i;\n            }\n          }\n          return -1;\n        },\n        getFocusedTabIndex: () => {\n          const tabElements = this.getTabElements_();\n          const activeElement = document.activeElement;\n          return tabElements.indexOf(activeElement);\n        },\n        getIndexOfTab: (tabToFind) => this.tabList_.indexOf(tabToFind),\n        getTabListLength: () => this.tabList_.length,\n        notifyTabActivated: (index) => this.emit(MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT, {index}, true),\n      })\n    );\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index The index of the tab\n   */\n  activateTab(index) {\n    this.foundation_.activateTab(index);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index THe index of the tab\n   */\n  scrollIntoView(index) {\n    this.foundation_.scrollIntoView(index);\n  }\n\n  getTabElements_() {\n    return [].slice.call(this.root_.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR));\n  }\n}\n\nexport {MDCTabBar, MDCTabBarFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',\n  MENU_SELECTION_GROUP: 'mdc-menu__selection-group',\n};\n\n/** @enum {string} */\nconst strings = {\n  SELECTED_EVENT: 'MDCMenu:selected',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n  LIST_SELECTOR: '.mdc-list',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\nexport {getTransformPropertyName};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport * as util from './util';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from './foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {Corner, CornerBit, strings, cssClasses} from './constants';\n\n/**\n * @extends MDCComponent<!MDCMenuSurfaceFoundation>\n */\nclass MDCMenuSurface extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n    /** @private {!Element} */\n    this.anchorElement;\n    /** @private {Element} */\n    this.firstFocusableElement_;\n    /** @private {Element} */\n    this.lastFocusableElement_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleBodyClick_;\n    /** @private {!Function} */\n    this.registerBodyClickListener_;\n    /** @private {!Function} */\n    this.deregisterBodyClickListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCMenuSurface}\n   */\n  static attachTo(root) {\n    return new MDCMenuSurface(root);\n  }\n\n  initialSyncWithDOM() {\n    if (this.root_.parentElement && this.root_.parentElement.classList.contains(cssClasses.ANCHOR)) {\n      this.anchorElement = this.root_.parentElement;\n    }\n\n    if (this.root_.classList.contains(cssClasses.FIXED)) {\n      this.setFixedPosition(true);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleBodyClick_ = (evt) => this.foundation_.handleBodyClick(evt);\n\n    this.registerBodyClickListener_ = () => document.body.addEventListener('click', this.handleBodyClick_);\n    this.deregisterBodyClickListener_ = () => document.body.removeEventListener('click', this.handleBodyClick_);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.addEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.removeEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    if (value) {\n      const focusableElements = this.root_.querySelectorAll(strings.FOCUSABLE_ELEMENTS);\n      this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;\n      this.lastFocusableElement_ = focusableElements.length > 0 ?\n        focusableElements[focusableElements.length - 1] : null;\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  /**\n   * Removes the menu-surface from it's current location and appends it to the\n   * body to overcome any overflow:hidden issues.\n   */\n  hoistMenuToBody() {\n    document.body.appendChild(this.root_.parentElement.removeChild(this.root_));\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * Sets the foundation to use page offsets for an positioning when the menu\n   * is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.foundation_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!Element} element\n   */\n  setMenuSurfaceAnchorElement(element) {\n    this.anchorElement = element;\n  }\n\n  /**\n   * Sets the menu-surface to position: fixed.\n   * @param {boolean} isFixed\n   */\n  setFixedPosition(isFixed) {\n    if (isFixed) {\n      this.root_.classList.add(cssClasses.FIXED);\n    } else {\n      this.root_.classList.remove(cssClasses.FIXED);\n    }\n\n    this.foundation_.setFixedPosition(isFixed);\n  }\n\n  /**\n   * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.foundation_.setAbsolutePosition(x, y);\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.foundation_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.foundation_.setAnchorMargin(margin);\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.foundation_.setQuickOpen(quickOpen);\n  }\n\n  /** @return {!MDCMenuSurfaceFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuSurfaceFoundation(\n      /** @type {!MDCMenuSurfaceAdapter} */ (Object.assign({\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        hasAnchor: () => !!this.anchorElement,\n        notifyClose: () => this.emit(MDCMenuSurfaceFoundation.strings.CLOSED_EVENT, {}),\n        notifyOpen: () => this.emit(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, {}),\n        isElementInContainer: (el) => this.root_ === el || this.root_.contains(el),\n        isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n        setTransformOrigin: (origin) => {\n          this.root_.style[`${util.getTransformPropertyName(window)}-origin`] = origin;\n        },\n      },\n      this.getFocusAdapterMethods_(),\n      this.getDimensionAdapterMethods_())\n      ));\n  }\n\n  /**\n   * @return {!{\n   * isFocused: function(): boolean,\n   * saveFocus: function(),\n   * restoreFocus: function(),\n   * isFirstElementFocused: function(): boolean,\n   * isLastElementFocused: function(): boolean,\n   * focusFirstElement: function(),\n   * focusLastElement: function(),\n   * }}\n   * @private\n   */\n  getFocusAdapterMethods_() {\n    return {\n      isFocused: () => document.activeElement === this.root_,\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this.root_.contains(document.activeElement)) {\n          if (this.previousFocus_ && this.previousFocus_.focus) {\n            this.previousFocus_.focus();\n          }\n        }\n      },\n      isFirstElementFocused: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_ === document.activeElement,\n      isLastElementFocused: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_ === document.activeElement,\n      focusFirstElement: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_.focus && this.firstFocusableElement_.focus(),\n      focusLastElement: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_.focus && this.lastFocusableElement_.focus(),\n    };\n  }\n\n  /**\n   * @return {!{\n   * getInnerDimensions: function(),\n   * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),\n   * getWindowDimensions: function(),\n   * setPosition: function(*),\n   * setMaxHeight: function(string)}}\n   * @private\n   */\n  getDimensionAdapterMethods_() {\n    return {\n      getInnerDimensions: () => {\n        return {width: this.root_.offsetWidth, height: this.root_.offsetHeight};\n      },\n      getAnchorDimensions: () => this.anchorElement && this.anchorElement.getBoundingClientRect(),\n      getWindowDimensions: () => {\n        return {width: window.innerWidth, height: window.innerHeight};\n      },\n      getBodyDimensions: () => {\n        return {width: document.body.clientWidth, height: document.body.clientHeight};\n      },\n      getWindowScroll: () => {\n        return {x: window.pageXOffset, y: window.pageYOffset};\n      },\n      setPosition: (position) => {\n        this.root_.style.left = 'left' in position ? position.left : null;\n        this.root_.style.right = 'right' in position ? position.right : null;\n        this.root_.style.top = 'top' in position ? position.top : null;\n        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;\n      },\n      setMaxHeight: (height) => {\n        this.root_.style.maxHeight = height;\n      },\n    };\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, MDCMenuSurface, AnchorMargin, Corner, CornerBit, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuSurfaceFoundation} from '@material/menu-surface/foundation';\nimport MDCListFoundation from '@material/list/foundation';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClassToElementAtIndex: () => {},\n      removeClassFromElementAtIndex: () => {},\n      addAttributeToElementAtIndex: () => {},\n      removeAttributeFromElementAtIndex: () => {},\n      elementContainsClass: () => {},\n      closeSurface: () => {},\n      getElementIndex: () => {},\n      getParentElement: () => {},\n      getSelectedElementIndex: () => {},\n      notifySelected: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @type {number} */\n    this.closeAnimationEndTimerId_ = 0;\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter_.closeSurface();\n  }\n\n  /**\n   * Handler function for the keydown events.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {key, keyCode} = evt;\n\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isSpace || isEnter) {\n      this.handleAction_(evt);\n    } else if (isTab) {\n      this.adapter_.closeSurface();\n    }\n  }\n\n  /**\n   * Handler function for the click events.\n   * @param {!Event} evt\n   */\n  handleClick(evt) {\n    this.handleAction_(evt);\n  }\n\n  /**\n   * Combined action handling for click/keypress events.\n   * @param {!Event} evt\n   * @private\n   */\n  handleAction_(evt) {\n    const listItem = this.getListItem_(/** @type {HTMLElement} */ (evt.target));\n    if (listItem) {\n      this.handleSelection(listItem);\n      this.preventDefaultEvent_(evt);\n    }\n  }\n\n  /**\n   * Handler for a selected list item.\n   * @param {?HTMLElement} listItem\n   */\n  handleSelection(listItem) {\n    const index = this.adapter_.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter_.notifySelected({index});\n    this.adapter_.closeSurface();\n\n    // Wait for the menu to close before adding/removing classes that affect styles.\n    this.closeAnimationEndTimerId_ = setTimeout(() => {\n      const selectionGroup = this.getSelectionGroup_(listItem);\n\n      if (selectionGroup !== null) {\n        this.handleSelectionGroup_(/** @type {!HTMLElement} */ (selectionGroup), index);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /**\n   * Handles toggling the selected classes in a selection group when a\n   * selection is made.\n   * @param {!HTMLElement} selectionGroup\n   * @param {number} index The selected index value\n   * @private\n   */\n  handleSelectionGroup_(selectionGroup, index) {\n    // De-select the previous selection in this group.\n    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);\n    if (selectedIndex >= 0) {\n      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, strings.ARIA_SELECTED_ATTR);\n      this.adapter_.removeClassFromElementAtIndex(selectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n    // Select the new list item in this group.\n    this.adapter_.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter_.addAttributeToElementAtIndex(index, strings.ARIA_SELECTED_ATTR, 'true');\n  }\n\n  /**\n   * Returns the parent selection group of an element if one exists.\n   * @param listItem\n   * @return {?HTMLElement} parent selection group element or null.\n   * @private\n   */\n  getSelectionGroup_(listItem) {\n    let parent = this.adapter_.getParentElement(listItem);\n    let isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n\n    // Iterate through ancestors until we find the group or get to the list.\n    while (!isGroup && !this.adapter_.elementContainsClass(parent, MDCListFoundation.cssClasses.ROOT)) {\n      parent = this.adapter_.getParentElement(parent);\n      isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n    }\n\n    if (isGroup) {\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Find the first ancestor with the mdc-list-item class.\n   * @param {?HTMLElement} target\n   * @return {?HTMLElement}\n   * @private\n   */\n  getListItem_(target) {\n    let isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n\n    while (!isListItem) {\n      target = this.adapter_.getParentElement(target);\n      if (target) {\n        isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n      } else { // target has no parent element.\n        return null;\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {!Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const target = /** @type {!HTMLElement} */ (evt.target);\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n}\n\nexport {MDCMenuFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {MDCMenuFoundation} from './foundation';\nimport {strings, cssClasses} from './constants';\nimport {MDCMenuSurface, Corner} from '@material/menu-surface/index';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from '@material/menu-surface/foundation';\nimport {MDCList} from '@material/list/index';\n\n/**\n * @extends MDCComponent<!MDCMenuFoundation>\n */\nclass MDCMenu extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!MDCMenuSurface} */\n    this.menuSurface_;\n    /** @private {!MDCList} */\n    this.list_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.afterOpenedCallback_;\n  }\n\n  /**\n   * @param {!HTMLElement} root\n   * @return {!MDCMenu}\n   */\n  static attachTo(root) {\n    return new MDCMenu(root);\n  }\n\n  initialize(\n    menuSurfaceFactory = (el) => new MDCMenuSurface(el),\n    listFactory = (el) => new MDCList(el)) {\n    this.menuSurface_ = menuSurfaceFactory(this.root_);\n\n    const list = this.root_.querySelector(strings.LIST_SELECTOR);\n    if (list) {\n      this.list_ = listFactory(list);\n      this.list_.wrapFocus = true;\n    }\n  }\n\n  initialSyncWithDOM() {\n    this.afterOpenedCallback_ = () => this.handleAfterOpened_();\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleClick_ = (evt) => this.foundation_.handleClick(evt);\n\n    this.menuSurface_.listen(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.listen('keydown', this.handleKeydown_);\n    this.listen('click', this.handleClick_);\n  }\n\n  destroy() {\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    this.menuSurface_.destroy();\n    this.menuSurface_.unlisten(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.unlisten('keydown', this.handleKeydown_);\n    this.unlisten('click', this.handleClick_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.menuSurface_.open;\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    this.menuSurface_.open = value;\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.menuSurface_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.menuSurface_.setAnchorMargin(margin);\n  }\n\n  /**\n   * Return the items within the menu. Note that this only contains the set of elements within\n   * the items container that are proper list items, and not supplemental / presentational DOM\n   * elements.\n   * @return {!Array<!HTMLElement>}\n   */\n  get items() {\n    return this.list_.listElements;\n  }\n\n  /**\n   * Return the item within the menu at the index specified.\n   * @param {number} index\n   * @return {?HTMLElement}\n   */\n  getOptionByIndex(index) {\n    const items = this.items;\n\n    if (index < items.length) {\n      return this.items[index];\n    } else {\n      return null;\n    }\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.menuSurface_.quickOpen = quickOpen;\n  }\n\n  /** @param {boolean} isFixed */\n  setFixedPosition(isFixed) {\n    this.menuSurface_.setFixedPosition(isFixed);\n  }\n\n  hoistMenuToBody() {\n    this.menuSurface_.hoistMenuToBody();\n  }\n\n  /** @param {boolean} isHoisted */\n  setIsHoisted(isHoisted) {\n    this.menuSurface_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.menuSurface_.setAbsolutePosition(x, y);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!HTMLElement} element\n   */\n  setAnchorElement(element) {\n    this.menuSurface_.anchorElement = element;\n  }\n\n  handleAfterOpened_() {\n    const list = this.items;\n    if (list.length > 0) {\n      list[0].focus();\n    }\n  }\n\n  /** @return {!MDCMenuFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuFoundation({\n      addClassToElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.add(className);\n      },\n      removeClassFromElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.remove(className);\n      },\n      addAttributeToElementAtIndex: (index, attr, value) => {\n        const list = this.items;\n        list[index].setAttribute(attr, value);\n      },\n      removeAttributeFromElementAtIndex: (index, attr) => {\n        const list = this.items;\n        list[index].removeAttribute(attr);\n      },\n      elementContainsClass: (element, className) => element.classList.contains(className),\n      closeSurface: () => this.open = false,\n      getElementIndex: (element) => this.items.indexOf(element),\n      getParentElement: (element) => element.parentElement,\n      getSelectedElementIndex: (selectionGroup) => {\n        return this.items.indexOf(selectionGroup.querySelector(`.${cssClasses.MENU_SELECTED_LIST_ITEM}`));\n      },\n      notifySelected: (evtData) => this.emit(strings.SELECTED_EVENT, {\n        index: evtData.index,\n        item: this.items[evtData.index],\n      }),\n    });\n  }\n}\n\nexport {MDCMenuFoundation, MDCMenu, AnchorMargin, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   surfaceHeight: number,\n *   surfaceWidth: number,\n *   bodyDimensions,\n *   windowScroll,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}\n */\nclass MDCMenuSurfaceFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuSurfaceAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuSurfaceAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasAnchor: () => false,\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      isElementInContainer: () => false,\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      isFocused: () => false,\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFirstElementFocused: () => {},\n      isLastElementFocused: () => {},\n      focusFirstElement: () => {},\n      focusLastElement: () => {},\n      getInnerDimensions: () => ({}),\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getBodyDimensions: () => ({}),\n      getWindowScroll: () => ({}),\n      setPosition: () => {},\n      setMaxHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuSurfaceAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {!Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {!AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n    /** @private {boolean} */\n    this.hoistedElement_ = false;\n    /** @private {boolean} */\n    this.isFixedPosition_ = false;\n    /** @private {!{x: number, y: number}} */\n    this.position_ = {x: 0, y: 0};\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuSurfaceFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin set of margin values from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /**\n   * Used to indicate if the menu-surface is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.hoistedElement_ = isHoisted;\n  }\n\n  /**\n   * Used to set the menu-surface calculations based on a fixed position menu.\n   * @param {boolean} isFixedPosition\n   */\n  setFixedPosition(isFixedPosition) {\n    this.isFixedPosition_ = isFixedPosition;\n  }\n\n  /**\n   * Sets the menu-surface position on the page.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;\n    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * Handle clicks and close if not within menu-surface element.\n   * @param {!Event} evt\n   */\n  handleBodyClick(evt) {\n    const el = evt.target;\n\n    if (this.adapter_.isElementInContainer(el)) {\n      return;\n    }\n\n    this.close();\n  };\n\n  /**\n   * Handle keys that close the surface.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key, shiftKey} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) {\n      this.close();\n    } else if (isTab) {\n      if (this.adapter_.isLastElementFocused() && !shiftKey) {\n        this.adapter_.focusFirstElement();\n        evt.preventDefault();\n      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {\n        this.adapter_.focusLastElement();\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.\n   */\n  getAutoLayoutMeasurements_() {\n    let anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n    const bodyDimensions = this.adapter_.getBodyDimensions();\n    const windowScroll = this.adapter_.getWindowScroll();\n\n    if (!anchorRect) {\n      anchorRect = /** @type {ClientRect} */ ({\n        x: this.position_.x,\n        y: this.position_.y,\n        top: this.position_.y,\n        bottom: this.position_.y,\n        left: this.position_.x,\n        right: this.position_.x,\n        height: 0,\n        width: 0,\n      });\n    }\n\n    return {\n      viewport,\n      bodyDimensions,\n      windowScroll,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      surfaceHeight: this.dimensions_.height,\n      surfaceWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu surface.\n   * @return {!Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, surfaceHeight, surfaceWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = surfaceHeight - availableTop;\n    const bottomOverflow = surfaceHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = surfaceWidth - availableLeft;\n    const rightOverflow = surfaceWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return /** @type {Corner} */ (corner);\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    // isRightAligned corresponds to using the 'right' property on the surface.\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n\n      // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so\n      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,\n      // the right property is correct.\n      if (this.hoistedElement_ || this.isFixedPosition_) {\n        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);\n      }\n\n      return rightOffset;\n    }\n\n    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {anchorHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n    }\n    return y;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuSurfaceMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuSurfaceFoundation.numbers;\n\n    // When maximum height is not specified, it is handled from css.\n    if (isBottomAligned) {\n      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;\n      if (!(this.anchorCorner_ & CornerBit.BOTTOM)) {\n        maxHeight += this.measures_.anchorHeight;\n      }\n    } else {\n      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;\n      if (this.anchorCorner_ & CornerBit.BOTTOM) {\n        maxHeight -= this.measures_.anchorHeight;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);\n    const verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    let position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset : '0',\n    };\n    const {anchorWidth, surfaceWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.\n    if (anchorWidth / surfaceWidth > numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element\n    if (this.hoistedElement_ || this.isFixedPosition_) {\n      position = this.adjustPositionForHoistedElement_(position);\n    }\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop) && position[prop] !== '0') {\n        position[prop] = `${parseInt(position[prop], 10)}px`;\n      }\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Calculates the offsets for positioning the menu-surface when the menu-surface has been\n   * hoisted to the body.\n   * @param {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @return {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @private\n   */\n  adjustPositionForHoistedElement_(position) {\n    const {windowScroll, viewportDistance} = this.measures_;\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop)) {\n        // Hoisted surfaces need to have the anchor elements location on the page added to the\n        // position properties for proper alignment on the body.\n        if (viewportDistance.hasOwnProperty(prop)) {\n          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];\n        }\n\n        // Surfaces that are absolutely positioned need to have additional calculations for scroll\n        // and bottom positioning.\n        if (!this.isFixedPosition_) {\n          if (prop === 'top') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.y;\n          } else if (prop === 'bottom') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.y;\n          } else if (prop === 'left') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.x;\n          } else if (prop === 'right') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.x;\n          }\n        }\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Open the menu surface.\n   */\n  open() {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      if (this.quickOpen_) {\n        this.adapter_.notifyOpen();\n      } else {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n          this.adapter_.notifyOpen();\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu surface.\n   */\n  close() {\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      if (this.quickOpen_) {\n        this.adapter_.notifyClose();\n      } else {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n          this.adapter_.notifyClose();\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n\n    this.isOpen_ = false;\n    this.maybeRestoreFocus_();\n  }\n\n  /**\n   * The last focused element when the menu surface was opened should regain focus, if the user is\n   * focused on or within the menu surface when it is closed.\n   * @private\n   */\n  maybeRestoreFocus_() {\n    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {\n      this.adapter_.restoreFocus();\n    }\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * isFinite that doesn't force conversion to number type.\n   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.\n   * @param {number} num\n   * @return {boolean}\n   * @private\n   */\n  typeCheckisFinite_(num) {\n    return typeof num === 'number' && isFinite(num);\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, AnchorMargin};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Drawer\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Drawer into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCDrawerAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * @param {!Element} element target element to verify class name\n   * @param {string} className class name\n   */\n  elementHasClass(element, className) {}\n\n  /**\n   * Saves the focus of currently active element.\n   */\n  saveFocus() {}\n\n  /**\n   * Restores focus to element previously saved with 'saveFocus'.\n   */\n  restoreFocus() {}\n\n  /**\n   * Focuses the active / selected navigation item.\n   */\n  focusActiveNavigationItem() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:closed\" denoting the drawer has closed.\n   */\n  notifyClose() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:opened\" denoting the drawer has opened.\n   */\n  notifyOpen() {}\n\n  /**\n   * Traps focus on root element and focuses the active navigation element.\n   */\n  trapFocus() {}\n\n  /**\n   * Releases focus trap from root element which was set by `trapFocus`\n   * and restores focus to where it was prior to calling `trapFocus`.\n   */\n  releaseFocus() {}\n}\n\nexport default MDCDrawerAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-drawer',\n  DISMISSIBLE: 'mdc-drawer--dismissible',\n  MODAL: 'mdc-drawer--modal',\n  OPEN: 'mdc-drawer--open',\n  ANIMATE: 'mdc-drawer--animate',\n  OPENING: 'mdc-drawer--opening',\n  CLOSING: 'mdc-drawer--closing',\n};\n\n/** @enum {string} */\nconst strings = {\n  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n  SCRIM_SELECTOR: '.mdc-drawer-scrim',\n  CLOSE_EVENT: 'MDCDrawer:closed',\n  OPEN_EVENT: 'MDCDrawer:opened',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from '../constants';\n\n/**\n * @extends {MDCFoundation<!MDCDrawerAdapter>}\n */\nclass MDCDismissibleDrawerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get defaultAdapter() {\n    return /** @type {!MDCDrawerAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      elementHasClass: (/* element: !Element, className: string */) => {},\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      focusActiveNavigationItem: () => {},\n      trapFocus: () => {},\n      releaseFocus: () => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDismissibleDrawerFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n  }\n\n  destroy() {\n    if (this.animationFrame_) {\n      cancelAnimationFrame(this.animationFrame_);\n    }\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n    }\n  }\n\n  /**\n   * Function to open the drawer.\n   */\n  open() {\n    if (this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.OPEN);\n    this.adapter_.addClass(cssClasses.ANIMATE);\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(cssClasses.OPENING);\n    });\n\n    this.adapter_.saveFocus();\n  }\n\n  /**\n   * Function to close the drawer.\n   */\n  close() {\n    if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Extension point for when drawer finishes open animation.\n   * @protected\n   */\n  opened() {}\n\n  /**\n   * Extension point for when drawer finishes close animation.\n   * @protected\n   */\n  closed() {}\n\n  /**\n   * Returns true if drawer is in open state.\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.adapter_.hasClass(cssClasses.OPEN);\n  }\n\n  /**\n   * Returns true if drawer is animating open.\n   * @return {boolean}\n   */\n  isOpening() {\n    return this.adapter_.hasClass(cssClasses.OPENING);\n  }\n\n  /**\n   * Returns true if drawer is animating closed.\n   * @return {boolean}\n   */\n  isClosing() {\n    return this.adapter_.hasClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Keydown handler to close drawer when key is escape.\n   * @param evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    if (isEscape) {\n      this.close();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    const {OPENING, CLOSING, OPEN, ANIMATE, ROOT} = cssClasses;\n\n    // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n    const isElement = evt.target instanceof Element;\n    if (!isElement || !this.adapter_.elementHasClass(/** @type {!Element} */ (evt.target), ROOT)) {\n      return;\n    }\n\n    if (this.isClosing()) {\n      this.adapter_.removeClass(OPEN);\n      this.adapter_.restoreFocus();\n      this.closed();\n      this.adapter_.notifyClose();\n    } else {\n      this.adapter_.focusActiveNavigationItem();\n      this.opened();\n      this.adapter_.notifyOpen();\n    }\n\n    this.adapter_.removeClass(ANIMATE);\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCDismissibleDrawerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCDismissibleDrawerFoundation from '../dismissible/foundation';\n\n/**\n * @extends {MDCDismissibleDrawerFoundation}\n */\nclass MDCModalDrawerFoundation extends MDCDismissibleDrawerFoundation {\n  /**\n   * Called when drawer finishes open animation.\n   * @override\n   */\n  opened() {\n    this.adapter_.trapFocus();\n  }\n\n  /**\n   * Called when drawer finishes close animation.\n   * @override\n   */\n  closed() {\n    this.adapter_.releaseFocus();\n  }\n\n  /**\n   * Handles click event on scrim.\n   */\n  handleScrimClick() {\n    this.close();\n  }\n}\n\nexport default MDCModalDrawerFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport {MDCComponent} from '@material/base/index';\nimport MDCDismissibleDrawerFoundation from './dismissible/foundation';\nimport MDCModalDrawerFoundation from './modal/foundation';\nimport MDCDrawerAdapter from './adapter';\nimport {MDCList} from '@material/list/index';\nimport MDCListFoundation from '@material/list/foundation';\nimport {strings} from './constants';\nimport * as util from './util';\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}\n * @final\n */\nclass MDCDrawer extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n\n    /** @private {!Function} */\n    this.handleKeydown_;\n\n    /** @private {!Function} */\n    this.handleTransitionEnd_;\n\n    /** @private {!Function} */\n    this.focusTrapFactory_;\n\n    /** @private {!FocusTrapInstance} */\n    this.focusTrap_;\n\n    /** @private {?Element} */\n    this.scrim_;\n\n    /** @private {?Function} */\n    this.handleScrimClick_;\n\n    /** @private {?MDCList} */\n    this.list_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCDrawer}\n   */\n  static attachTo(root) {\n    return new MDCDrawer(root);\n  }\n\n  /**\n   * Returns true if drawer is in the open position.\n   * @return {boolean}\n   */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /**\n   * Toggles the drawer open and closed.\n   * @param {boolean} isOpen\n   */\n  set open(isOpen) {\n    if (isOpen) {\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  initialize(\n    focusTrapFactory = createFocusTrap,\n    listFactory = (el) => new MDCList(el)) {\n    const listEl = /** @type {!Element} */ (this.root_.querySelector(`.${MDCListFoundation.cssClasses.ROOT}`));\n    if (listEl) {\n      this.list_ = listFactory(listEl);\n      this.list_.wrapFocus = true;\n    }\n    this.focusTrapFactory_ = focusTrapFactory;\n  }\n\n  initialSyncWithDOM() {\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n\n    if (this.root_.classList.contains(MODAL)) {\n      const {SCRIM_SELECTOR} = MDCDismissibleDrawerFoundation.strings;\n      this.scrim_ = /** @type {!Element} */ (this.root_.parentElement.querySelector(SCRIM_SELECTOR));\n      this.handleScrimClick_ = () => /** @type {!MDCModalDrawerFoundation} */ (this.foundation_).handleScrimClick();\n      this.scrim_.addEventListener('click', this.handleScrimClick_);\n      this.focusTrap_ = util.createFocusTrapInstance(this.root_, this.focusTrapFactory_);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);\n\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(MODAL)) {\n      this.scrim_.removeEventListener('click', /** @type {!Function} */ (this.handleScrimClick_));\n      // Ensure drawer is closed to hide scrim and release focus\n      this.open = false;\n    }\n  }\n\n  getDefaultFoundation() {\n    /** @type {!MDCDrawerAdapter} */\n    const adapter = /** @type {!MDCDrawerAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      elementHasClass: (element, className) => element.classList.contains(className),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this.previousFocus_ && this.previousFocus_.focus;\n        if (this.root_.contains(document.activeElement) && previousFocus) {\n          this.previousFocus_.focus();\n        }\n      },\n      focusActiveNavigationItem: () => {\n        const activeNavItemEl = this.root_.querySelector(`.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}`);\n        if (activeNavItemEl) {\n          activeNavItemEl.focus();\n        }\n      },\n      notifyClose: () => this.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */),\n      notifyOpen: () => this.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */),\n      trapFocus: () => this.focusTrap_.activate(),\n      releaseFocus: () => this.focusTrap_.deactivate(),\n    }));\n\n    const {DISMISSIBLE, MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(DISMISSIBLE)) {\n      return new MDCDismissibleDrawerFoundation(adapter);\n    } else if (this.root_.classList.contains(MODAL)) {\n      return new MDCModalDrawerFoundation(adapter);\n    } else {\n      throw new Error(\n        `MDCDrawer: Failed to instantiate component. Supported variants are ${DISMISSIBLE} and ${MODAL}.`);\n    }\n  }\n}\n\nexport {MDCDrawer, MDCDismissibleDrawerFoundation, MDCModalDrawerFoundation, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @param {!Element} surfaceEl\n * @param {!Function} focusTrapFactory\n * @return {!FocusTrapInstance}\n */\nfunction createFocusTrapInstance(surfaceEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    clickOutsideDeactivates: true,\n    initialFocus: false, // Navigation drawer handles focusing on active nav item.\n    escapeDeactivates: false, // Navigation drawer handles ESC.\n    returnFocusOnDeactivate: false, // Navigation drawer handles restore focus.\n  });\n}\n\nexport {createFocusTrapInstance};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      followHref: () => {},\n      toggleCheckbox: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** {boolean} */\n    this.wrapFocus_ = false;\n    /** {boolean} */\n    this.isVertical_ = true;\n    /** {boolean} */\n    this.isSingleSelectionList_ = false;\n    /** {number} */\n    this.selectedIndex_ = -1;\n    /** {boolean} */\n    this.useActivatedClass_ = false;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @param {number} index */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const className = this.useActivatedClass_\n      ? cssClasses.LIST_ITEM_ACTIVATED_CLASS : cssClasses.LIST_ITEM_SELECTED_CLASS;\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.removeAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED);\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, className);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);\n    }\n\n    if (index >= 0 && this.adapter_.getListItemCount() > index) {\n      this.selectedIndex_ = index;\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, true);\n      this.adapter_.addClassForElementIndex(this.selectedIndex_, className);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', 0);\n\n      if (this.selectedIndex_ !== 0) {\n        this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n      }\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        if (this.isSingleSelectionList_) {\n          // Check if the space key was pressed on the list item or a child element.\n          this.setSelectedIndex(currentIndex);\n          this.preventDefaultEvent_(evt);\n        }\n\n        // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n        this.adapter_.followHref(currentIndex);\n      }\n\n      const checkboxFound = this.adapter_.toggleCheckbox(listItemIndex);\n\n      if (checkboxFound) {\n        this.preventDefaultEvent_(evt);\n      }\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (toggleCheckbox) {\n      this.adapter_.toggleCheckbox(index);\n    }\n\n    if (this.isSingleSelectionList_) {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n  }\n\n  focusFirstElement() {\n    if (this.adapter_.getListItemCount() > 0) {\n      this.adapter_.focusItemAtIndex(0);\n    }\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    if (lastIndex >= 0) {\n      this.adapter_.focusItemAtIndex(lastIndex);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active || listeningFocusTrap !== trap) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCListFoundation from './foundation';\nimport MDCListAdapter from './adapter';\nimport {matches} from '@material/dom/ponyfill';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends MDCComponent<!MDCListFoundation>\n */\nclass MDCList extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.focusInEventListener_;\n    /** @private {!Function} */\n    this.focusOutEventListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCList}\n   */\n  static attachTo(root) {\n    return new MDCList(root);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('click', this.handleClick_);\n    this.root_.removeEventListener('focusin', this.focusInEventListener_);\n    this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.handleClickEvent_.bind(this);\n    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('focusin', this.focusInEventListener_);\n    this.root_.addEventListener('focusout', this.focusOutEventListener_);\n    this.root_.addEventListener('click', this.handleClick_);\n    this.layout();\n    this.initializeListType();\n  }\n\n  layout() {\n    const direction = this.root_.getAttribute(strings.ARIA_ORIENTATION);\n    this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n\n    // List items need to have at least tabindex=-1 to be focusable.\n    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))\n      .forEach((ele) => {\n        ele.setAttribute('tabindex', -1);\n      });\n\n    // Child button/a elements are not tabbable until the list item is focused.\n    [].slice.call(this.root_.querySelectorAll(strings.FOCUSABLE_CHILD_ELEMENTS))\n      .forEach((ele) => ele.setAttribute('tabindex', -1));\n  }\n\n  /**\n   * Used to figure out which list item this event is targetting. Or returns -1 if\n   * there is no list item\n   * @param {Event} evt\n   * @private\n   */\n  getListItemIndex_(evt) {\n    let eventTarget = /** @type {HTMLElement} */ (evt.target);\n    let index = -1;\n\n    // Find the first ancestor that is a list item or the list.\n    while (!eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)\n    && !eventTarget.classList.contains(cssClasses.ROOT)) {\n      eventTarget = eventTarget.parentElement;\n    }\n\n    // Get the index of the element if it is a list item.\n    if (eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)) {\n      index = this.listElements.indexOf(eventTarget);\n    }\n\n    return index;\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusInEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusIn(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusOutEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusOut(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was focused when keydown event occurred before sending the event to the\n   * foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleKeydownEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    if (index >= 0) {\n      this.foundation_.handleKeydown(evt, evt.target.classList.contains(cssClasses.LIST_ITEM_CLASS), index);\n    }\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleClickEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n    const toggleCheckbox = !matches(/** @type {!Element} */ (evt.target), strings.CHECKBOX_RADIO_SELECTOR);\n    this.foundation_.handleClick(index, toggleCheckbox);\n  }\n\n  initializeListType() {\n    // Automatically set single selection if selected/activated classes are present.\n    const preselectedElement =\n      this.root_.querySelector(`.${cssClasses.LIST_ITEM_ACTIVATED_CLASS}, .${cssClasses.LIST_ITEM_SELECTED_CLASS}`);\n\n    if (preselectedElement) {\n      if (preselectedElement.classList.contains(cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n        this.foundation_.setUseActivatedClass(true);\n      }\n\n      this.singleSelection = true;\n      this.selectedIndex = this.listElements.indexOf(preselectedElement);\n    }\n  }\n\n  /** @param {boolean} value */\n  set vertical(value) {\n    this.foundation_.setVerticalOrientation(value);\n  }\n\n  /** @return Array<!Element>*/\n  get listElements() {\n    return [].slice.call(this.root_.querySelectorAll(strings.ENABLED_ITEMS_SELECTOR));\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.foundation_.setWrapFocus(value);\n  }\n\n  /** @param {boolean} isSingleSelectionList */\n  set singleSelection(isSingleSelectionList) {\n    this.foundation_.setSingleSelection(isSingleSelectionList);\n  }\n\n  /** @param {number} index */\n  set selectedIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {!MDCListFoundation} */\n  getDefaultFoundation() {\n    return new MDCListFoundation(/** @type {!MDCListAdapter} */ (Object.assign({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.setAttribute(attr, value);\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.removeAttribute(attr);\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.add(className);\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.remove(className);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex];\n        const listItemChildren = [].slice.call(element.querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n        listItemChildren.forEach((ele) => ele.setAttribute('tabindex', tabIndexValue));\n      },\n      followHref: (index) => {\n        const listItem = this.listElements[index];\n        if (listItem && listItem.href) {\n          listItem.click();\n        }\n      },\n      toggleCheckbox: (index) => {\n        let checkboxOrRadioExists = false;\n        const listItem = this.listElements[index];\n        const elementsToToggle =\n          [].slice.call(listItem.querySelectorAll(strings.CHECKBOX_RADIO_SELECTOR));\n        elementsToToggle.forEach((element) => {\n          const event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n\n          if (!element.checked || element.type !== 'radio') {\n            element.checked = !element.checked;\n            element.dispatchEvent(event);\n          }\n          checkboxOrRadioExists = true;\n        });\n        return checkboxOrRadioExists;\n      },\n    })));\n  }\n}\n\nexport {MDCList, MDCListFoundation};\n","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node === this.doc.documentElement) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"sourceRoot":""}