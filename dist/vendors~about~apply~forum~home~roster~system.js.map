{"version":3,"sources":["webpack:///../node_modules/@material/menu-surface/constants.js","webpack:///../node_modules/@material/ripple/adapter.js","webpack:///../node_modules/@material/ripple/constants.js","webpack:///../node_modules/@material/ripple/util.js","webpack:///../node_modules/@material/ripple/foundation.js","webpack:///../node_modules/@material/ripple/index.js","webpack:///../node_modules/@material/base/foundation.js","webpack:///../node_modules/@material/base/component.js","webpack:///../node_modules/@material/list/constants.js","webpack:///../node_modules/@material/base/index.js","webpack:///../node_modules/@material/top-app-bar/adapter.js","webpack:///../node_modules/@material/top-app-bar/constants.js","webpack:///../node_modules/@material/top-app-bar/foundation.js","webpack:///../node_modules/@material/top-app-bar/fixed/foundation.js","webpack:///../node_modules/@material/top-app-bar/short/foundation.js","webpack:///../node_modules/@material/top-app-bar/standard/foundation.js","webpack:///../node_modules/@material/top-app-bar/index.js","webpack:///../node_modules/@material/tab-indicator/adapter.js","webpack:///../node_modules/@material/tab-indicator/constants.js","webpack:///../node_modules/@material/tab-indicator/foundation.js","webpack:///../node_modules/@material/tab-indicator/sliding-foundation.js","webpack:///../node_modules/@material/tab-indicator/fading-foundation.js","webpack:///../node_modules/@material/tab-indicator/index.js","webpack:///../node_modules/@material/tab/constants.js","webpack:///../node_modules/@material/tab/foundation.js","webpack:///../node_modules/@material/tab/index.js","webpack:///../node_modules/@material/tab-scroller/constants.js","webpack:///../node_modules/@material/tab-scroller/rtl-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-default-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-negative-scroller.js","webpack:///../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","webpack:///../node_modules/@material/tab-scroller/foundation.js","webpack:///../node_modules/@material/tab-scroller/util.js","webpack:///../node_modules/@material/tab-scroller/index.js","webpack:///../node_modules/@material/tab-bar/constants.js","webpack:///../node_modules/@material/tab-bar/foundation.js","webpack:///../node_modules/@material/tab-bar/index.js","webpack:///../node_modules/@material/menu/constants.js","webpack:///../node_modules/@material/menu-surface/util.js","webpack:///../node_modules/@material/menu-surface/index.js","webpack:///../node_modules/@material/menu/foundation.js","webpack:///../node_modules/@material/menu/index.js","webpack:///../node_modules/@material/menu-surface/foundation.js","webpack:///../node_modules/@material/drawer/adapter.js","webpack:///../node_modules/@material/drawer/constants.js","webpack:///../node_modules/@material/drawer/dismissible/foundation.js","webpack:///../node_modules/@material/drawer/modal/foundation.js","webpack:///../node_modules/@material/drawer/index.js","webpack:///../node_modules/@material/drawer/util.js","webpack:///../node_modules/@material/list/foundation.js","webpack:///../node_modules/@material/drawer/node_modules/focus-trap/index.js","webpack:///../node_modules/@material/dom/ponyfill.js","webpack:///../node_modules/@material/list/index.js","webpack:///../node_modules/@material/drawer/node_modules/tabbable/index.js","webpack:///../node_modules/xtend/immutable.js"],"names":["__webpack_require__","d","__webpack_exports__","cssClasses","strings","numbers","CornerBit","Corner","ANCHOR","ANIMATING_CLOSED","ANIMATING_OPEN","FIXED","OPEN","ROOT","CLOSED_EVENT","OPENED_EVENT","FOCUSABLE_ELEMENTS","TRANSITION_OPEN_DURATION","TRANSITION_CLOSE_DURATION","MARGIN_TO_EDGE","ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO","BOTTOM","CENTER","RIGHT","FLIP_RTL","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_START","TOP_END","BOTTOM_START","BOTTOM_END","UNBOUNDED","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","VAR_LEFT","VAR_TOP","VAR_FG_SIZE","VAR_FG_SCALE","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","PADDING","INITIAL_ORIGIN_SCALE","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","TAP_DELAY_MS","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","foundation_MDCRippleFoundation","foundation","defaultAdapter","browserSupportsCssVars","isUnbounded","isSurfaceActive","isSurfaceDisabled","addClass","removeClass","containsEventTarget","registerInteractionHandler","deregisterInteractionHandler","registerDocumentInteractionHandler","deregisterDocumentInteractionHandler","registerResizeHandler","deregisterResizeHandler","updateCssVariable","computeBoundingRect","getWindowPageOffset","[object Object]","adapter","super","Object","assign","this","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","left","top","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","adapter_","isActivated","hasDeactivationUXRun","wasActivatedByPointer","wasElementMadeActive","activationEvent","isProgrammatic","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","requestAnimationFrame","layoutInternal_","clearTimeout","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","forEach","type","keys","k","indexOf","activationState","previousActivationEvent","length","some","target","resetActivationState_","push","registerDeactivationHandlers_","checkElementMadeActive_","animateActivation_","key","keyCode","event","translateStart","translateEnd","startPoint","endPoint","getFgTranslationCoordinates_","x","y","rmBoundedActivationClasses_","setTimeout","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","changedTouches","pageX","pageY","getNormalizedEventCoords","state","animateDeactivation_","cancelAnimationFrame","maxDim","Math","max","sqrt","pow","getBoundedRadius","floor","updateLayoutCssVars_","round","unbounded","ripple_foundation","ripple_MDCRipple","component","args","disabled","unbounded_","root","ripple","instance","MATCHES","HTMLElementPrototype","matchesMethods","method","i","matchesMethod","getMatchesProperty","HTMLElement","prototype","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","className","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","root_","classList","add","contains","evtType","handler","removeEventListener","documentElement","varName","value","style","setProperty","getBoundingClientRect","pageXOffset","pageYOffset","Boolean","setUnbounded_","foundation_","setUnbounded","activate","deactivate","createAdapter","dataset","RippleCapableSurface","_foundation__WEBPACK_IMPORTED_MODULE_0__","MDCComponent","initialize","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","createEvent","initCustomEvent","dispatchEvent","LIST_ITEM_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_ACTIVATED_CLASS","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_SELECTED","ARIA_CHECKED","ARIA_CHECKED_RADIO_SELECTOR","RADIO_SELECTOR","CHECKBOX_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","ENABLED_ITEMS_SELECTOR","_component__WEBPACK_IMPORTED_MODULE_1__","FIXED_CLASS","FIXED_SCROLLED_CLASS","SHORT_CLASS","SHORT_HAS_ACTION_ITEM_CLASS","SHORT_COLLAPSED_CLASS","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","MAX_TOP_APP_BAR_HEIGHT","ACTION_ITEM_SELECTOR","NAVIGATION_EVENT","NAVIGATION_ICON_SELECTOR","ROOT_SELECTOR","TITLE_SELECTOR","foundation_MDCTopAppBarBaseFoundation","base_foundation","hasClass","setStyle","getTopAppBarHeight","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","notifyNavigationIconClicked","registerScrollHandler","deregisterScrollHandler","getViewportScrollY","getTotalActionItems","navClickHandler_","scrollHandler_","top_app_bar_foundation","fixed_foundation","wasScrolled_","fixedScrollHandler_","short_foundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","INITIAL_VALUE","standard_foundation","lastScrollPosition_","topAppBarHeight_","wasDocked_","isDockedShowing_","currentAppBarOffsetTop_","isCurrentlyBeingResized_","resizeThrottleId_","resizeDebounceId_","topAppBarScrollHandler_","topAppBarResizeHandler_","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","checkForUpdate_","offset","abs","currentScrollPosition","diff","moveTopAppBar_","throttledResizeHandler_","currentHeight","top_app_bar_MDCTopAppBar","navIcon_","iconRipples_","scrollTarget_","rippleFactory","el","attachTo","querySelector","icons","slice","call","querySelectorAll","map","icon","iconRipple","destroyScrollHandler","initScrollHandler","property","clientHeight","emit","ACTIVE","FADE","NO_TRANSITION","CONTENT_SELECTOR","foundation_MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","previousIndicatorClientRect","tab_indicator_foundation","sliding_foundation","currentClientRect","widthDelta","xPosition","fading_foundation","tab_indicator_MDCTabIndicator","content_","prop","constants_cssClasses","constants_strings","RIPPLE_SELECTOR","TAB_INDICATOR_SELECTOR","TABINDEX","INTERACTED_EVENT","foundation_MDCTabFoundation","setAttr","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getOffsetWidth","getContentOffsetLeft","getContentOffsetWidth","focus","focusOnActivate_","focusOnActivate","isActive","rootWidth","rootLeft","contentWidth","contentLeft","rootRight","contentRight","tab_foundation","tab_MDCTab","ripple_","tabIndicator_","handleClick_","tabIndicatorFactory","rippleSurface","rippleAdapter","rippleFoundation","tabIndicatorElement","handleClick","bind","listen","unlisten","attr","setAttribute","tab","offsetLeft","offsetWidth","active","setFocusOnActivate","computeIndicatorClientRect","computeDimensions","tab_scroller_constants_cssClasses","ANIMATING","SCROLL_TEST","SCROLL_AREA_SCROLL","tab_scroller_constants_strings","AREA_SELECTOR","rtl_scroller","translateX","scrollX","rtl_default_scroller","currentScrollLeft","getScrollAreaScrollLeft","right","calculateScrollEdges_","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","min","rtl_negative_scroller","rtl_reverse_scroller","foundation_MDCTabScrollerFoundation","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","isAnimating_","rtlScrollerInstance_","horizontalScrollbarHeight","isRTL_","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","stopScrollAnimation_","scrollXIncrement","incrementScrollRTL_","incrementScroll_","scrollToRTL_","scrollTo_","rtlScrollerFactory_","transformValue","parts","exec","split","parseFloat","getRTLScroller","getScrollPositionRTL","currentScrollX","getScrollPosition","safeScrollX","animate_","animation","scrollToRTL","targetScrollX","incrementScrollRTL","getAnimatingScrollPosition_","scrollLeft","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","tab_scroller_foundation","horizontalScrollbarHeight_","tab_scroller_MDCTabScroller","area_","handleInteraction_","handleTransitionEnd_","handleInteraction","handleTransitionEnd","evtTarget","selector","filter","p","pop","propName","getPropertyValue","documentObj","shouldCacheResult","offsetHeight","removeChild","incrementScroll","scrollTo","tab_bar_constants_strings","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","EXTRA_SCROLL_AMOUNT","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","ACCEPTABLE_KEYS","Set","KEYCODE_MAP","Map","set","foundation_MDCTabBarFoundation","getScrollContentWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTab","getTabListLength","notifyTabActivated","useAutomaticActivation_","useAutomaticActivation","index","previousActiveIndex","indexIsInRange_","scrollIntoView","getKeyFromEvent_","isActivationKey_","preventDefault","determineTargetFromKey_","focusedTabIndex","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","shouldGoToEnd","shouldDecrement","shouldIncrement","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","leftIncrement","rightIncrement","scrollContentWidth","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","rootDelta","has","get","findAdjacentTabIndexClosestToEdge_","scrollIncrement","calculateScrollIncrement_","scrollWidth","findAdjacentTabIndexClosestToEdgeRTL_","calculateScrollIncrementRTL_","tab_bar_foundation","tab_bar_MDCTabBar","tabList_","tabFactory_","tabScroller_","tabScrollerFactory_","handleTabInteraction_","handleKeyDown_","setUseAutomaticActivation","tabFactory","tabScrollerFactory","getTabElements_","tabScrollerElement","handleTabInteraction","handleKeyDown","activateTab","tabElements","activeElement","tabToFind","MENU_SELECTED_LIST_ITEM","MENU_SELECTION_GROUP","SELECTED_EVENT","ARIA_SELECTED_ATTR","LIST_SELECTOR","storedTransformPropertyName_","menu_surface_MDCMenuSurface","previousFocus_","anchorElement","firstFocusableElement_","lastFocusableElement_","handleKeydown_","handleBodyClick_","registerBodyClickListener_","deregisterBodyClickListener_","parentElement","constants","setFixedPosition","handleKeydown","handleBodyClick","open","isOpen","focusableElements","close","setIsHoisted","isHoisted","element","isFixed","setAbsolutePosition","corner","setAnchorCorner","margin","setAnchorMargin","quickOpen","setQuickOpen","hasAnchor","notifyClose","notifyOpen","isElementInContainer","isRtl","setTransformOrigin","transformPropertyName","getTransformPropertyName","getFocusAdapterMethods_","getDimensionAdapterMethods_","isFocused","saveFocus","restoreFocus","isFirstElementFocused","isLastElementFocused","focusFirstElement","focusLastElement","getInnerDimensions","getAnchorDimensions","getWindowDimensions","innerWidth","innerHeight","getBodyDimensions","clientWidth","getWindowScroll","setPosition","position","bottom","setMaxHeight","maxHeight","ELEMENTS_KEY_ALLOWED_IN","foundation_MDCMenuFoundation","addClassToElementAtIndex","removeClassFromElementAtIndex","addAttributeToElementAtIndex","removeAttributeFromElementAtIndex","elementContainsClass","closeSurface","getElementIndex","getParentElement","getSelectedElementIndex","notifySelected","closeAnimationEndTimerId_","isTab","handleAction_","listItem","getListItem_","handleSelection","preventDefaultEvent_","selectionGroup","getSelectionGroup_","handleSelectionGroup_","menu_surface_foundation","selectedIndex","parent","isGroup","list_foundation","isListItem","tagName","toLowerCase","menu_MDCMenu","menuSurface_","list_","afterOpenedCallback_","menuSurfaceFactory","menu_surface","listFactory","_material_list","list","wrapFocus","handleAfterOpened_","items","listElements","hoistMenuToBody","removeAttribute","item","MDCMenuSurfaceFoundation","_material_base_foundation__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_2__","isOpen_","openAnimationEndTimerId_","animationRequestId_","dimensions_","anchorCorner_","anchorMargin_","measures_","quickOpen_","hoistedElement_","isFixedPosition_","position_","isFixedPosition","typeCheckisFinite_","shiftKey","anchorRect","viewport","bodyDimensions","windowScroll","viewportDistance","anchorHeight","anchorWidth","surfaceHeight","surfaceWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","rightOffset","avoidVerticalOverlap","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuSurfaceHeight","getMenuSurfaceMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","adjustPositionForHoistedElement_","hasOwnProperty","parseInt","autoPosition_","maybeRestoreFocus_","num","isFinite","DISMISSIBLE","MODAL","ANIMATE","OPENING","CLOSING","APP_CONTENT_SELECTOR","SCRIM_SELECTOR","CLOSE_EVENT","OPEN_EVENT","foundation_MDCDismissibleDrawerFoundation","elementHasClass","focusActiveNavigationItem","trapFocus","releaseFocus","animationFrame_","animationTimer_","isOpening","isClosing","runNextAnimationFrame_","Element","closed","opened","callback","dismissible_foundation","modal_foundation","drawer_MDCDrawer","base","focusTrapFactory_","focusTrap_","scrim_","handleScrimClick_","focusTrapFactory","focus_trap_default","a","listEl","handleScrimClick","surfaceEl","clickOutsideDeactivates","initialFocus","escapeDeactivates","returnFocusOnDeactivate","createFocusTrapInstance","previousFocus","activeNavItemEl","MDCListFoundation","getListItemCount","getFocusedElementIndex","setAttributeForElementIndex","removeAttributeForElementIndex","addClassForElementIndex","removeClassForElementIndex","focusItemAtIndex","setTabIndexForListItemChildren","followHref","hasRadioAtIndex","hasCheckboxAtIndex","isCheckboxCheckedAtIndex","setCheckedCheckboxOrRadioAtIndex","wrapFocus_","isVertical_","isSingleSelectionList_","selectedIndex_","useActivatedClass_","useActivated","setAriaAttributesForCheckbox_","setAriaAttributesForRadio_","setAriaAttributesForSingleSelect_","setClassNamesForSingleSelect_","ariaAttributeValue","selectedClassName","listItemIndex","isRootListItem","arrowLeft","arrowUp","arrowRight","arrowDown","isHome","isEnd","isEnter","isSpace","currentIndex","focusNextElement","focusPrevElement","hasCheckboxOrRadio","hasCheckboxOrRadioAtIndex_","toggleCheckboxOrRadioAtIndex_","setSelectedIndex","toggleCheckbox","prevIndex","lastIndex","isChecked","tabbable","xtend","listeningFocusTrap","delay","fn","module","exports","userOptions","doc","container","config","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","paused","trap","activateOptions","updateTabbableNodes","onActivate","addListeners","pause","removeListeners","unpause","deactivateOptions","onDeactivate","returnFocus","tryFocus","getInitialFocusNode","checkFocusIn","checkPointerDown","checkClick","checkKey","getNodeForOption","optionName","optionValue","isFocusable","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","checkTab","tabbableNodes","select","isSelectableInput","matches","webkitMatchesSelector","msMatchesSelector","list_MDCList","focusInEventListener_","focusOutEventListener_","handleClickEvent_","handleKeydownEvent_","handleFocusInEvent_","handleFocusOutEvent_","initializeListType","direction","getAttribute","vertical","ele","eventTarget","getListItemIndex_","handleFocusIn","handleFocusOut","preselectedElement","setUseActivatedClass","singleSelection","setVerticalOrientation","setWrapFocus","isSingleSelectionList","setSingleSelection","tabIndexValue","href","click","checked","toggleEl","initEvent","candidateSelectors","candidateSelector","join","options","candidate","candidateTabindex","regularTabbables","orderedTabbables","untouchabilityChecker","UntouchabilityChecker","ownerDocument","candidates","includeContainer","Array","apply","unshift","isNodeMatchingSelectorTabbable","getTabindex","documentOrder","tabIndex","sort","sortOrderedTabbables","concat","isNodeMatchingSelectorFocusable","isInput","isRadio","name","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isHiddenInput","isUntouchable","isTabbable","focusableCandidateSelector","tabindexAttr","isNaN","contentEditable","isContentEditable","b","elementDocument","cache","hasDisplayNone","nodeComputedStyle","cached","predicate","find","result","defaultView","display","parentNode","visibility","arguments","source"],"mappings":"sFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAwBA,MAAAJ,EAAA,CACAK,OAAA,2BACAC,iBAAA,qCACAC,eAAA,mCACAC,MAAA,0BACAC,KAAA,yBACAC,KAAA,oBAIAT,EAAA,CACAU,aAAA,wBACAC,aAAA,wBACAC,mBAAA,gMAKAX,EAAA,CAEAY,yBAAA,IAEAC,0BAAA,GAEAC,eAAA,GAEAC,mCAAA,KAOAd,EAAA,CACAe,OAAA,EACAC,OAAA,EACAC,MAAA,EACAC,SAAA,GAYAjB,EAAA,CACAkB,SAAA,EACAC,UAAApB,EAAAiB,MACAI,YAAArB,EAAAe,OACAO,aAAAtB,EAAAe,OAAAf,EAAAiB,MACAM,UAAAvB,EAAAkB,SACAM,QAAAxB,EAAAkB,SAAAlB,EAAAiB,MACAQ,aAAAzB,EAAAe,OAAAf,EAAAkB,SACAQ,WAAA1B,EAAAe,OAAAf,EAAAiB,MAAAjB,EAAAkB,qDCkCe,WC5Ff,MAAArB,EAAA,CAIAU,KAAA,sBACAoB,UAAA,iCACAC,WAAA,0CACAC,cAAA,6CACAC,gBAAA,gDAGAhC,EAAA,CACAiC,SAAA,oBACAC,QAAA,mBACAC,YAAA,uBACAC,aAAA,wBACAC,uBAAA,kCACAC,qBAAA,iCAGArC,EAAA,CACAsC,QAAA,GACAC,qBAAA,GACAC,wBAAA,IACAC,mBAAA,IACAC,aAAA,KCrBA,IAAAC,EAMAC,EAoEA,SAAAC,EAAAC,EAAAC,OAAAC,GAAA,GACA,QAAAC,IAAAL,GAAAI,EAAA,CACA,IAAAE,GAAA,EACA,IACAJ,EAAAK,SAAAC,iBAAA,aAAyDC,cAEzD,OADAH,GAAA,KAGK,MAAAI,IAELV,EAAAM,EAGA,QAAAN,GACuC,CAAMS,SAAA,GC9C7C,MAAAE,EAAA,mDAGAC,EAAA,iDAIA,IAAAC,EAAA,GAKA,MAAMC,UAA4BC,EAAA,EAClC7D,wBACA,OAAWA,EAGXC,qBACA,OAAWA,EAGXC,qBACA,OAAWA,EAGX4D,4BACA,OACAC,uBAAA,OACAC,YAAA,OACAC,gBAAA,OACAC,kBAAA,OACAC,SAAA,OACAC,YAAA,OACAC,oBAAA,OACAC,2BAAA,OACAC,6BAAA,OACAC,mCAAA,OACAC,qCAAA,OACAC,sBAAA,OACAC,wBAAA,OACAC,kBAAA,OACAC,oBAAA,OACAC,oBAAA,QAIAC,YAAAC,GACAC,MAAAC,OAAAC,OAAwBvB,EAAmBE,eAAAkB,IAG3CI,KAAAC,aAAA,EAGAD,KAAAE,OAAyC,CAAMC,MAAA,EAAAC,OAAA,GAG/CJ,KAAAK,iBAAAL,KAAAM,0BAGAN,KAAAO,aAAA,EAGAP,KAAAQ,WAAA,EAGAR,KAAAS,iBAAA,CAAArC,GAAA4B,KAAAU,UAAAtC,IAGA4B,KAAAW,mBAAA,KAAAX,KAAAY,eAGAZ,KAAAa,cAAA,KAAAb,KAAAc,eAGAd,KAAAe,aAAA,KAAAf,KAAAgB,cAGAhB,KAAAiB,eAAA,KAAAjB,KAAAkB,UAGAlB,KAAAmB,iBAAA,CACAC,KAAA,EACAC,IAAA,GAIArB,KAAAsB,SAAA,EAGAtB,KAAAuB,iBAAA,EAGAvB,KAAAwB,4BAAA,EAGAxB,KAAAyB,8BAAA,EAGAzB,KAAA0B,yBAAA,MACA1B,KAAAyB,8BAAA,EACAzB,KAAA2B,mCAIA3B,KAAA4B,yBAWAjC,uBACA,OAAAK,KAAA6B,SAAAlD,yBAMAgB,0BACA,OACAmC,aAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,sBAAA,EACAC,qBAAAnE,EACAoE,gBAAA,GAKAxC,OACA,MAAAyC,EAAApC,KAAAqC,uBAIA,GAFArC,KAAAsC,sBAAAF,GAEAA,EAAA,CACA,MAAA9G,KAAaA,EAAAoB,aAAmB8B,EAAmB5D,WACnD2H,sBAAA,KACAvC,KAAA6B,SAAA9C,SAAAzD,GACA0E,KAAA6B,SAAAjD,gBACAoB,KAAA6B,SAAA9C,SAAArC,GAEAsD,KAAAwC,sBAOA7C,UACA,GAAAK,KAAAqC,uBAAA,CACArC,KAAAuB,mBACAkB,aAAAzC,KAAAuB,kBACAvB,KAAAuB,iBAAA,EACAvB,KAAA6B,SAAA7C,YAAkCR,EAAmB5D,WAAAgC,gBAGrDoD,KAAAwB,8BACAiB,aAAAzC,KAAAwB,6BACAxB,KAAAwB,4BAAA,EACAxB,KAAA6B,SAAA7C,YAAkCR,EAAmB5D,WAAAiC,kBAGrD,MAAAvB,KAAaA,EAAAoB,aAAmB8B,EAAmB5D,WACnD2H,sBAAA,KACAvC,KAAA6B,SAAA7C,YAAA1D,GACA0E,KAAA6B,SAAA7C,YAAAtC,GACAsD,KAAA0C,mBAIA1C,KAAA2C,0BACA3C,KAAA4C,kCAOAjD,sBAAAyC,GACAA,IACA/D,EAAAwE,QAAAC,IACA9C,KAAA6B,SAAA3C,2BAAA4D,EAAA9C,KAAAS,oBAEAT,KAAA6B,SAAAjD,eACAoB,KAAA6B,SAAAvC,sBAAAU,KAAAiB,iBAIAjB,KAAA6B,SAAA3C,2BAAA,QAAAc,KAAAa,eACAb,KAAA6B,SAAA3C,2BAAA,OAAAc,KAAAe,cAOApB,8BAAAvB,GACA,YAAAA,EAAA0E,KACA9C,KAAA6B,SAAA3C,2BAAA,QAAAc,KAAAW,oBAEArC,EAAAuE,QAAAC,IACA9C,KAAA6B,SAAAzC,mCAAA0D,EAAA9C,KAAAW,sBAMAhB,0BACAtB,EAAAwE,QAAAC,IACA9C,KAAA6B,SAAA1C,6BAAA2D,EAAA9C,KAAAS,oBAEAT,KAAA6B,SAAA1C,6BAAA,QAAAa,KAAAa,eACAb,KAAA6B,SAAA1C,6BAAA,OAAAa,KAAAe,cAEAf,KAAA6B,SAAAjD,eACAoB,KAAA6B,SAAAtC,wBAAAS,KAAAiB,gBAKAtB,kCACAK,KAAA6B,SAAA1C,6BAAA,QAAAa,KAAAW,oBACArC,EAAAuE,QAAAC,IACA9C,KAAA6B,SAAAxC,qCAAAyD,EAAA9C,KAAAW,sBAKAhB,iBACA,MAAA9E,QAAWA,GAAW2D,EACtBsB,OAAAiD,KAAAlI,GAAAgI,QAAAG,IACA,IAAAA,EAAAC,QAAA,SACAjD,KAAA6B,SAAArC,kBAAA3E,EAAAmI,GAAA,QASArD,UAAAvB,GACA,GAAA4B,KAAA6B,SAAA/C,oBACA,OAGA,MAAAoE,EAAAlD,KAAAK,iBACA,GAAA6C,EAAApB,YACA,OAIA,MAAAqB,EAAAnD,KAAA4B,yBACAuB,QAAApF,IAAAK,GAAA+E,EAAAL,OAAA1E,EAAA0E,OAKAI,EAAApB,aAAA,EACAoB,EAAAf,oBAAApE,IAAAK,EACA8E,EAAAhB,gBAAA9D,EACA8E,EAAAlB,uBAAAkB,EAAAf,sBAAApE,IAAAK,IACA,cAAAA,EAAA0E,MAAA,eAAA1E,EAAA0E,MAAA,gBAAA1E,EAAA0E,YAGA/E,IAAAK,GAAAG,EAAA6E,OAAA,GAAA7E,EAAA8E,KACAC,GAAAtD,KAAA6B,SAAA5C,oBAAAqE,IAGAtD,KAAAuD,8BAIAxF,IAAAK,IACAG,EAAAiF,KAAoDpF,EAAA,QACpD4B,KAAAyD,8BAAArF,IAGA8E,EAAAjB,qBAAAjC,KAAA0D,wBAAAtF,GACA8E,EAAAjB,sBACAjC,KAAA2D,qBAGApB,sBAAA,KAEAhE,EAAA,GAEA2E,EAAAjB,2BAAAlE,IAAAK,GAAA,MAAAA,EAAAwF,KAAA,KAAAxF,EAAAyF,UAOAX,EAAAjB,qBAAAjC,KAAA0D,wBAAAtF,GACA8E,EAAAjB,sBACAjC,KAAA2D,sBAIAT,EAAAjB,uBAEAjC,KAAAK,iBAAAL,KAAAM,+BASAX,wBAAAvB,GACA,YAAAL,IAAAK,GAAA,YAAAA,EAAA0E,MAAA9C,KAAA6B,SAAAhD,kBAMAc,SAAAmE,GACA9D,KAAAU,UAAAoD,GAIAnE,qBACA,MAAAzC,uBAAWA,EAAAC,wBAAgDqB,EAAmB3D,SAC9EgC,gBAAWA,EAAAD,iBAAkC4B,EAAmB5D,YAChE0C,wBAAWA,GAA2BkB,EAAmB1D,QAEzDkF,KAAAwC,kBAEA,IAAAuB,EAAA,GACAC,EAAA,GAEA,IAAAhE,KAAA6B,SAAAjD,cAAA,CACA,MAAAqF,WAAaA,EAAAC,YAAqBlE,KAAAmE,+BAClCJ,KAA0BE,EAAAG,QAAmBH,EAAAI,MAC7CL,KAAwBE,EAAAE,QAAiBF,EAAAG,MAGzCrE,KAAA6B,SAAArC,kBAAAtC,EAAA6G,GACA/D,KAAA6B,SAAArC,kBAAArC,EAAA6G,GAEAvB,aAAAzC,KAAAuB,kBACAkB,aAAAzC,KAAAwB,6BACAxB,KAAAsE,8BACAtE,KAAA6B,SAAA7C,YAAAnC,GAGAmD,KAAA6B,SAAApC,sBACAO,KAAA6B,SAAA9C,SAAAnC,GACAoD,KAAAuB,iBAAAgD,WAAA,IAAAvE,KAAA0B,2BAAApE,GAOAqC,+BACA,MAAAuC,gBAAWA,EAAAF,yBAAuChC,KAAAK,iBAElD,IAAA4D,EAuBA,OAAYA,WAVZA,EAAA,CACAG,GAZAH,EADAjC,EDhSA,SAAAwC,EAAAC,EAAAC,GACA,MAAAN,EAASA,EAAAC,KAAKI,EACdE,EAAAP,EAAAM,EAAAtD,KACAwD,EAAAP,EAAAK,EAAArD,IAEA,IAAAwD,EACAC,EAYA,MAVA,eAAAN,EAAA1B,MAEA+B,GADAL,EAAgC,GAChCO,eAAA,GAAAC,MAAAL,EACAG,EAAAN,EAAAO,eAAA,GAAAE,MAAAL,IAGAC,GADAL,EAAgC,GAChCQ,MAAAL,EACAG,EAAAN,EAAAS,MAAAL,GAGA,CAAUR,EAAAS,EAAAR,EAAAS,GC+QSI,CACO,EAC1BlF,KAAA6B,SAAAnC,sBAAAM,KAAA6B,SAAApC,uBAGA,CACA2E,EAAApE,KAAAE,OAAAC,MAAA,EACAkE,EAAArE,KAAAE,OAAAE,OAAA,IAKAgE,EAAApE,KAAAO,aAAA,EACA8D,EAAAJ,EAAAI,EAAArE,KAAAO,aAAA,GAQY2D,SALZ,CACAE,EAAApE,KAAAE,OAAAC,MAAA,EAAAH,KAAAO,aAAA,EACA8D,EAAArE,KAAAE,OAAAE,OAAA,EAAAJ,KAAAO,aAAA,IAOAZ,iCAGA,MAAA9C,gBAAWA,GAAmB2B,EAAmB5D,YACjDmH,qBAAWA,EAAAD,eAAkC9B,KAAAK,kBAC7C0B,IAAAD,IAEA9B,KAAAyB,+BACAzB,KAAAsE,8BACAtE,KAAA6B,SAAA9C,SAAAlC,GACAmD,KAAAwB,4BAAA+C,WAAA,KACAvE,KAAA6B,SAAA7C,YAAAnC,IACS/B,EAAOyC,qBAKhBoC,8BACA,MAAA/C,cAAWA,GAAiB4B,EAAmB5D,WAC/CoF,KAAA6B,SAAA7C,YAAApC,GACAoD,KAAAyB,8BAAA,EACAzB,KAAA6B,SAAApC,sBAGAE,wBACAK,KAAA4B,yBAAA5B,KAAAK,iBAAA6B,gBACAlC,KAAAK,iBAAAL,KAAAM,0BAGAiE,WAAA,IAAAvE,KAAA4B,8BAAA7D,EAAgES,EAAmB1D,QAAA0C,cAMnFmC,cACA,MAAAuD,EAAAlD,KAAAK,iBAEA,IAAA6C,EAAApB,YACA,OAGA,MAAAqD,EAAkDrF,OAAAC,OAAA,GAAqBmD,GAEvEA,EAAAf,gBACAI,sBAAA,IAAAvC,KAAAoF,qBAAAD,IACAnF,KAAAuD,0BAEAvD,KAAA4C,kCACAL,sBAAA,KACAvC,KAAAK,iBAAA0B,sBAAA,EACA/B,KAAAoF,qBAAAD,GACAnF,KAAAuD,2BAKA5D,aACAK,KAAAY,cAOAjB,sBAAAqC,sBAAwBA,EAAAC,0BACxBD,GAAAC,IACAjC,KAAA2B,iCAIAhC,SACAK,KAAAC,cACAoF,qBAAArF,KAAAC,cAEAD,KAAAC,aAAAsC,sBAAA,KACAvC,KAAAwC,kBACAxC,KAAAC,aAAA,IAKAN,kBACAK,KAAAE,OAAAF,KAAA6B,SAAApC,sBACA,MAAA6F,EAAAC,KAAAC,IAAAxF,KAAAE,OAAAE,OAAAJ,KAAAE,OAAAC,OAaAH,KAAAQ,WAAAR,KAAA6B,SAAAjD,cAAA0G,EALA,MAEA,OADAC,KAAAE,KAAAF,KAAAG,IAAA1F,KAAAE,OAAAC,MAAA,GAAAoF,KAAAG,IAAA1F,KAAAE,OAAAE,OAAA,IAC0B5B,EAAmB1D,QAAAsC,SAG7CuI,GAGA3F,KAAAO,aAAAgF,KAAAK,MAAAN,EAA4C9G,EAAmB1D,QAAAuC,sBAC/D2C,KAAAsB,SAAAtB,KAAAQ,WAAAR,KAAAO,aAEAP,KAAA6F,uBAIAlG,uBACA,MAAA3C,YACAA,EAAAF,WAAAC,UAAAE,gBACQuB,EAAmB3D,QAE3BmF,KAAA6B,SAAArC,kBAAAxC,KAAoDgD,KAAAO,kBACpDP,KAAA6B,SAAArC,kBAAAvC,EAAA+C,KAAAsB,UAEAtB,KAAA6B,SAAAjD,gBACAoB,KAAAmB,iBAAA,CACAC,KAAAmE,KAAAO,MAAA9F,KAAAE,OAAAC,MAAA,EAAAH,KAAAO,aAAA,GACAc,IAAAkE,KAAAO,MAAA9F,KAAAE,OAAAE,OAAA,EAAAJ,KAAAO,aAAA,IAGAP,KAAA6B,SAAArC,kBAAA1C,KAAmDkD,KAAAmB,iBAAAC,UACnDpB,KAAA6B,SAAArC,kBAAAzC,KAAkDiD,KAAAmB,iBAAAE,UAKlD1B,aAAAoG,GACA,MAAArJ,UAAWA,GAAa8B,EAAmB5D,WAC3CmL,EACA/F,KAAA6B,SAAA9C,SAAArC,GAEAsD,KAAA6B,SAAA7C,YAAAtC,GAIAiD,cACA4C,sBAAA,IACAvC,KAAA6B,SAAA9C,SAA6BP,EAAmB5D,WAAA+B,aAGhDgD,aACA4C,sBAAA,IACAvC,KAAA6B,SAAA7C,YAAgCR,EAAmB5D,WAAA+B,cAIpC,IAAAqJ,EAAA,EChmBfvL,EAAAC,EAAAC,EAAA,sBAAAsL,IAAAxL,EAAAC,EAAAC,EAAA,sBAAAqL,IA+BA,MAAMC,UAAkBC,EAAA,EAExBvG,eAAAwG,GACAtG,SAAAsG,GAGAnG,KAAAoG,UAAA,EAGApG,KAAAqG,WAQA1G,gBAAA2G,GAAA1H,YAAyBA,GAAwB,IACjD,MAAA2H,EAAA,IAAuBN,EAASK,GAKhC,YAHAvI,IAAAa,IACA2H,EAAAR,UAA4C,GAE5CQ,EAOA5G,qBAAA6G,GACA,MAAAC,EF6DA,SAAAC,GAKA,MAAAC,EAAA,wDACA,IAAAC,EAAA,UACA,QAAAC,EAAA,EAAiBA,EAAAF,EAAAvD,OAA2ByD,IAAA,CAC5C,MAAAC,EAAAH,EAAAE,GACA,GAAAC,KAAAJ,EAAA,CACAE,EAAAE,EACA,OAIA,OAAAF,EE5EoBG,CAAuBC,YAAAC,WAE3C,OACAtI,uBAAA,KFFA,SAAAuI,EAAApJ,GAAA,GACA,IAAAqJ,EAAA1J,EACA,qBAAAA,IAAAK,EACA,OAAAqJ,EAIA,IADAD,EAAAE,KAAA,mBAAAF,EAAAE,IAAAC,SAEA,OAGA,MAAAC,EAAAJ,EAAAE,IAAAC,SAAA,oBAGAE,EACAL,EAAAE,IAAAC,SAAA,sBACAH,EAAAE,IAAAC,SAAA,qBAYA,OARAF,KADAG,IAAAC,GA3CA,SAAAL,GAGA,MAAAjJ,EAAAiJ,EAAAjJ,SACAuJ,EAAAvJ,EAAAwJ,cAAA,OACAD,EAAAE,UAAA,wCACAzJ,EAAA0J,KAAAC,YAAAJ,GAMA,MAAAK,EAAAX,EAAAY,iBAAAN,GACAO,EAAA,OAAAF,GAAA,UAAAA,EAAAG,eAEA,OADAR,EAAAS,SACAF,EA6BAG,CAAAhB,IAKApJ,IACAL,EAAA0J,GAEAA,GE1BoCA,CAAyBtJ,QAC7De,YAAA,IAAA4H,EAAAT,UACAlH,gBAAA,IAAA2H,EAAA2B,MAAA1B,GAAA,WACA3H,kBAAA,IAAA0H,EAAAJ,SACArH,SAAA2I,GAAAlB,EAAA2B,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAAlB,EAAA2B,MAAAC,UAAAH,OAAAP,GACAzI,oBAAAqE,GAAAkD,EAAA2B,MAAAG,SAAAhF,GACApE,2BAAA,CAAAqJ,EAAAC,IACAhC,EAAA2B,MAAAjK,iBAAAqK,EAAAC,EAA0D7K,KAC1DwB,6BAAA,CAAAoJ,EAAAC,IACAhC,EAAA2B,MAAAM,oBAAAF,EAAAC,EAA6D7K,KAC7DyB,mCAAA,CAAAmJ,EAAAC,IACAvK,SAAAyK,gBAAAxK,iBAAAqK,EAAAC,EAAoE7K,KACpE0B,qCAAA,CAAAkJ,EAAAC,IACAvK,SAAAyK,gBAAAD,oBAAAF,EAAAC,EAAuE7K,KACvE2B,sBAAAkJ,GAAA3K,OAAAK,iBAAA,SAAAsK,GACAjJ,wBAAAiJ,GAAA3K,OAAA4K,oBAAA,SAAAD,GACAhJ,kBAAA,CAAAmJ,EAAAC,IAAApC,EAAA2B,MAAAU,MAAAC,YAAAH,EAAAC,GACAnJ,oBAAA,IAAA+G,EAAA2B,MAAAY,wBACArJ,oBAAA,MAAmC0E,EAAAvG,OAAAmL,YAAA3E,EAAAxG,OAAAoL,eAKnClD,gBACA,OAAA/F,KAAAqG,WAIAN,iBACA/F,KAAAqG,WAAA6C,QAAAnD,GACA/F,KAAAmJ,gBAUAxJ,gBACAK,KAAAoJ,YAAAC,aAAArJ,KAAAqG,YAGA1G,WACAK,KAAAoJ,YAAAE,WAGA3J,aACAK,KAAAoJ,YAAAG,aAGA5J,SACAK,KAAAoJ,YAAAlI,SAOAvB,uBACA,WAAeqG,EAAoBC,EAASuD,cAAAxJ,OAI5CL,qBACAK,KAAA+F,UAAA,yBAAA/F,KAAAmI,MAAAsB,SASA,MAAAC,GAGAA,EAAAzC,UAAAkB,MAMAuB,EAAAzC,UAAAlB,UAMA2D,EAAAzC,UAAAb,uCCnFezL,EAAA,EA/Cf,MAEAC,wBAGA,SAIAC,qBAGA,SAIAC,qBAGA,SAIA4D,4BAIA,SAMAiB,YAAAC,EAAA,IAEAI,KAAA6B,SAAAjC,EAGAD,QAIAA,2CCpEA,IAAAgK,EAAAlP,EAAA,GA4BA,MAAAmP,EAKAjK,gBAAA2G,GAKA,WAAAsD,EAAAtD,EAAA,IAAsCqD,EAAA,GAQtChK,YAAA2G,EAAA7H,KAAA0H,GAEAnG,KAAAmI,MAAA7B,EACAtG,KAAA6J,cAAA1D,GAIAnG,KAAAoJ,iBAAArL,IAAAU,EAAAuB,KAAA8J,uBAAArL,EACAuB,KAAAoJ,YAAAW,OACA/J,KAAAgK,qBAGArK,cASAA,uBAGA,UAAAsK,MAAA,kGAIAtK,sBAOAA,UAGAK,KAAAoJ,YAAAc,UASAvK,OAAA4I,EAAAC,GACAxI,KAAAmI,MAAAjK,iBAAAqK,EAAAC,GASA7I,SAAA4I,EAAAC,GACAxI,KAAAmI,MAAAM,oBAAAF,EAAAC,GAUA7I,KAAA4I,EAAA4B,EAAAC,GAAA,GACA,IAAAC,EACA,mBAAAC,YACAD,EAAA,IAAAC,YAAA/B,EAAA,CACAgC,OAAAJ,EACAK,QAAAJ,KAGAC,EAAApM,SAAAwM,YAAA,gBACAC,gBAAAnC,EAAA6B,GAAA,EAAAD,GAGAnK,KAAAmI,MAAAwC,cAAAN,IAIe1P,EAAA,kCClIfF,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAC,IAwBA,MAAAA,EAAA,CACAU,KAAA,WACAsP,gBAAA,gBACAC,yBAAA,0BACAC,0BAAA,4BAIAjQ,EAAA,CACAkQ,iBAAA,mBACAC,4BAAA,aACAC,cAAA,gBACAC,aAAA,eACAC,4BAAA,sCACAC,eAAA,qCACAC,kBAAA,wCACAC,wBAAA,4EACAC,sCAAyC3Q,EAAAgQ,8CACpChQ,EAAAgQ,oBACLY,6BAAgC5Q,EAAAgQ,2CAAsDhQ,EAAAgQ,0BACjFhQ,EAAAgQ,2DACAhQ,EAAAgQ,wDACLa,uBAAA,8EC9CA,IAAA9B,EAAAlP,EAAA,GAAAA,EAAAC,EAAAC,EAAA,sBAAAgP,EAAA,QAAA+B,EAAAjR,EAAA,GAAAA,EAAAC,EAAAC,EAAA,sBAAA+Q,EAAA,kCC0Ge,kBClFf,MAAA9Q,EAAA,CACA+Q,YAAA,yBACAC,qBAAA,kCACAC,YAAA,yBACAC,4BAAA,yCACAC,sBAAA,oCAIAjR,EAAA,CACAkR,iCAAA,IACAC,uBAAA,KAIApR,EAAA,CACAqR,qBAAA,gCACAC,iBAAA,mBACAC,yBAAA,oCACAC,cAAA,mBACAC,eAAA,sCCdA,MAAMC,UAAmCC,EAAA,EAEzC3R,qBACA,OAAWA,EAIXD,wBACA,OAAWA,EAIXE,qBACA,OAAWA,EAQX4D,4BACA,MAA2C,CAC3C+N,SAAA,OACA1N,SAAA,OACAC,YAAA,OACA0N,SAAA,OACAC,mBAAA,OACAC,yCAAA,OACAC,2CAAA,OACAC,4BAAA,OACAC,sBAAA,OACAC,wBAAA,OACA1N,sBAAA,OACAC,wBAAA,OACA0N,mBAAA,MACAC,oBAAA,OAOAvN,YAA8CC,GAC9CC,MAAAC,OAAAC,OAAwBwM,EAA0B7N,eAAAkB,IAElDI,KAAAmN,iBAAA,KAAAnN,KAAA6B,SAAAiL,+BAEA9M,KAAAoN,eAAA,SAGAzN,OACAK,KAAA6B,SAAA+K,yCAAA,QAAA5M,KAAAmN,kBAGAxN,UACAK,KAAA6B,SAAAgL,2CAAA,QAAA7M,KAAAmN,kBAGAxN,oBACAK,KAAA6B,SAAAkL,sBAAA/M,KAAAoN,gBAGAzN,uBACAK,KAAA6B,SAAAmL,wBAAAhN,KAAAoN,iBAIe,IAAAC,EAAA,ECxBA,IAAAC,EA3Cf,cAA0CD,EAI1C1N,YAAAC,GACAC,MAAAD,GAEAI,KAAAuN,cAAA,EAEAvN,KAAAoN,eAAA,KAAApN,KAAAwN,uBAGA7N,OACAE,MAAAkK,OACA/J,KAAA6B,SAAAkL,sBAAA/M,KAAAoN,gBAGAzN,UACAE,MAAAqK,UACAlK,KAAA6B,SAAAmL,wBAAAhN,KAAAoN,gBAOAzN,sBACAK,KAAA6B,SAAAoL,sBAEA,EACAjN,KAAAuN,eACAvN,KAAA6B,SAAA7C,YAAkCpE,EAAUgR,sBAC5C5L,KAAAuN,cAAA,GAGAvN,KAAAuN,eACAvN,KAAA6B,SAAA9C,SAA+BnE,EAAUgR,sBACzC5L,KAAAuN,cAAA,KCiBe,IAAAE,EAtDf,cAA0CJ,EAI1C1N,YAAAC,GACAC,MAAAD,GAEAI,KAAA0N,aAAA,EAEA1N,KAAAoN,eAAA,KAAApN,KAAA2N,6BAGAhO,OACAE,MAAAkK,OACA,MAAA6D,EAAA5N,KAAA6B,SAAA4K,SAAqD7R,EAAUmR,uBAE/D/L,KAAA6B,SAAAqL,sBAAA,GACAlN,KAAA6B,SAAA9C,SAA6BnE,EAAUkR,6BAGvC8B,IACA5N,KAAA6B,SAAAkL,sBAAA/M,KAAAoN,gBACApN,KAAA2N,6BAIAhO,UACAE,MAAAqK,UACAlK,KAAA6B,SAAAmL,wBAAAhN,KAAAoN,gBASAzN,4BACAK,KAAA6B,SAAAoL,sBAEA,EACAjN,KAAA0N,cACA1N,KAAA6B,SAAA7C,YAAkCpE,EAAUmR,uBAC5C/L,KAAA0N,aAAA,GAGA1N,KAAA0N,cACA1N,KAAA6B,SAAA9C,SAA+BnE,EAAUmR,uBACzC/L,KAAA0N,aAAA,KCpDA,MAAAG,EAAA,EAgMe,IAAAC,EA3Lf,cAAqCT,EAIrC1N,YAAAC,GACAC,MAAAD,GAKAI,KAAA+N,oBAAA/N,KAAA6B,SAAAoL,qBAMAjN,KAAAgO,iBAAAhO,KAAA6B,SAAA8K,qBAOA3M,KAAAiO,YAAA,EAOAjO,KAAAkO,kBAAA,EAMAlO,KAAAmO,wBAAA,EAKAnO,KAAAoO,0BAAA,EAMApO,KAAAqO,kBAAAR,EAMA7N,KAAAsO,kBAAAT,EAEA7N,KAAAoN,eAAA,KAAApN,KAAAuO,2BACAvO,KAAAiB,eAAA,KAAAjB,KAAAwO,2BAGA7O,OACAE,MAAAkK,OACA/J,KAAA6B,SAAAkL,sBAAA/M,KAAAoN,gBACApN,KAAA6B,SAAAvC,sBAAAU,KAAAiB,gBAGAtB,UACAE,MAAAqK,UACAlK,KAAA6B,SAAAmL,wBAAAhN,KAAAoN,gBACApN,KAAA6B,SAAAtC,wBAAAS,KAAAiB,gBACAjB,KAAA6B,SAAA6K,SAAA,UAQA/M,kBACA,MAAA8O,GAAAzO,KAAAgO,iBACAU,EAAA1O,KAAAmO,wBAAA,EACAQ,EAAA3O,KAAAmO,wBAAAM,EACAG,EAAAF,GAAAC,EAGA,GAAAC,EACA5O,KAAAiO,YAAA,MACK,CAEL,IAAAjO,KAAAiO,WAEA,OADAjO,KAAAiO,YAAA,GACA,EACO,GAAAjO,KAAAkO,mBAAAS,EAEP,OADA3O,KAAAkO,iBAAAS,GACA,EAIA,OAAAC,EAOAjP,iBACA,GAAAK,KAAA6O,kBAAA,CAGA,IAAAC,EAAA9O,KAAAmO,wBACA5I,KAAAwJ,IAAAD,IAAA9O,KAAAgO,mBACAc,GAAkBhU,EAAOmR,wBAGzBjM,KAAA6B,SAAA6K,SAAA,MAAAoC,EAAA,OAQAnP,0BACA,MAAAqP,EAAAzJ,KAAAC,IAAAxF,KAAA6B,SAAAoL,qBAAA,GACAgC,EAAAD,EAAAhP,KAAA+N,oBACA/N,KAAA+N,oBAAAiB,EAIAhP,KAAAoO,2BACApO,KAAAmO,yBAAAc,EAEAjP,KAAAmO,wBAAA,EACAnO,KAAAmO,wBAAA,EACO5I,KAAAwJ,IAAA/O,KAAAmO,yBAAAnO,KAAAgO,mBACPhO,KAAAmO,yBAAAnO,KAAAgO,kBAGAhO,KAAAkP,kBAQAvP,0BAEAK,KAAAqO,oBACArO,KAAAqO,kBAAA9J,WAAA,KACAvE,KAAAqO,kBAAAR,EACA7N,KAAAmP,2BACSrU,EAAOkR,mCAGhBhM,KAAAoO,0BAAA,EAEApO,KAAAsO,mBACA7L,aAAAzC,KAAAsO,mBAGAtO,KAAAsO,kBAAA/J,WAAA,KACAvE,KAAAuO,0BACAvO,KAAAoO,0BAAA,EACApO,KAAAsO,kBAAAT,GACO/S,EAAOkR,kCAQdrM,0BACA,MAAAyP,EAAApP,KAAA6B,SAAA8K,qBACA3M,KAAAgO,mBAAAoB,IACApP,KAAAiO,YAAA,EAKAjO,KAAAmO,yBAAAnO,KAAAgO,iBAAAoB,EACApP,KAAAgO,iBAAAoB,GAEApP,KAAAuO,4BCvNA9T,EAAAC,EAAAC,EAAA,sBAAA0U,IAoCA,MAAMA,UAAqBnJ,EAAA,EAI3BvG,eAAAwG,GACAtG,SAAAsG,GAEAnG,KAAAsP,SAEAtP,KAAAuP,aAEAvP,KAAAwP,cAGA7P,WACA8P,EAAA,CAAAC,GAA4BnJ,EAAA,EAASoJ,SAAAD,KACrC1P,KAAAsP,SAAAtP,KAAAmI,MAAAyH,cAA6C/U,EAAOuR,0BAGpD,MAAAyD,EAAA,GAAAC,MAAAC,KAAA/P,KAAAmI,MAAA6H,iBAA4DnV,EAAOqR,uBACnElM,KAAAsP,UACAO,EAAArM,KAAAxD,KAAAsP,UAGAtP,KAAAuP,aAAAM,EAAAI,IAAAC,IACA,MAAA3J,EAAAkJ,EAAAS,GAEA,OADA3J,EAAAR,WAAA,EACAQ,IAGAvG,KAAAwP,cAAA3R,OAGA8B,UACAK,KAAAuP,aAAA1M,QAAAsN,KAAAjG,WACArK,MAAAqK,UAGAvK,gBAAA2D,GACAtD,KAAAoJ,YAAAgH,uBACApQ,KAAAwP,cAAAlM,EACAtD,KAAAoJ,YAAAiH,oBAOA1Q,gBAAA2G,GACA,WAAe+I,EAAY/I,GAM3B3G,uBAEA,MAAAC,EAAoDE,OAAAC,OAAA,CACpD0M,SAAA/E,GAAA1H,KAAAmI,MAAAC,UAAAE,SAAAZ,GACA3I,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACAgF,SAAA,CAAA4D,EAAA1H,IAAA5I,KAAAmI,MAAAU,MAAAC,YAAAwH,EAAA1H,GACA+D,mBAAA,IAAA3M,KAAAmI,MAAAoI,aACA3D,yCAAA,CAAArE,EAAAC,KACAxI,KAAAsP,UACAtP,KAAAsP,SAAApR,iBAAAqK,EAAAC,IAGAqE,2CAAA,CAAAtE,EAAAC,KACAxI,KAAAsP,UACAtP,KAAAsP,SAAA7G,oBAAAF,EAAAC,IAGAsE,4BAAA,KACA9M,KAAAwQ,KAAkB3V,EAAOsR,iBAAA,KAEzBY,sBAAAvE,GAAAxI,KAAAwP,cAAAtR,iBAAA,SAAAsK,GACAwE,wBAAAxE,GAAAxI,KAAAwP,cAAA/G,oBAAA,SAAAD,GACAlJ,sBAAAkJ,GAAA3K,OAAAK,iBAAA,SAAAsK,GACAjJ,wBAAAiJ,GAAA3K,OAAA4K,oBAAA,SAAAD,GACAyE,mBAAA,IACAjN,KAAAwP,cAAAxP,KAAAwP,gBAAA3R,OAAA,2BACAqP,oBAAA,IACAlN,KAAAmI,MAAA6H,iBAAoCnV,EAAOqR,sBAAA9I,SAK3C,IAAA3E,EASA,OAPAA,EADAuB,KAAAmI,MAAAC,UAAAE,SAAsC1N,EAAUiR,aAChD,IAAuB4B,EAA2B7N,GAC7CI,KAAAmI,MAAAC,UAAAE,SAAwC1N,EAAU+Q,aACvD,IAAuB2B,EAA2B1N,GAElD,IAAuBkO,EAAsBlO,sDCpE9B,WCtCf,MAAAhF,EAAA,CACA6V,OAAA,4BACAC,KAAA,0BACAC,cAAA,oCAIA9V,EAAA,CACA+V,iBAAA,+BCEA,MAAMC,UAAkCrE,EAAA,EAExC5R,wBACA,OAAWA,EAIXC,qBACA,OAAWA,EAOX6D,4BACA,MAA8C,CAC9CK,SAAA,OACAC,YAAA,OACA8R,yBAAA,OACAC,wBAAA,QAKApR,YAAAC,GACAC,MAAAC,OAAAC,OAAwB8Q,EAAyBnS,eAAAkB,IAIjDD,2BACA,OAAAK,KAAA6B,SAAAiP,2BAQAnR,SAAAqR,IAGArR,eAGe,IAAAsR,EAAA,ECjBA,IAAAC,EAjCf,cAA+CD,EAE/CtR,SAAAqR,GAGA,IAAAA,EAEA,YADAhR,KAAA6B,SAAA9C,SAA6BkS,EAAyBrW,WAAA6V,QAQtD,MAAAU,EAAAnR,KAAA8Q,2BACAM,EAAAJ,EAAA7Q,MAAAgR,EAAAhR,MACAkR,EAAAL,EAAA5P,KAAA+P,EAAA/P,KACApB,KAAA6B,SAAA9C,SAA2BkS,EAAyBrW,WAAA+V,eACpD3Q,KAAA6B,SAAAkP,wBAAA,0BAAqEM,eAAuBD,MAG5FpR,KAAA8Q,2BAEA9Q,KAAA6B,SAAA7C,YAA8BiS,EAAyBrW,WAAA+V,eACvD3Q,KAAA6B,SAAA9C,SAA2BkS,EAAyBrW,WAAA6V,QACpDzQ,KAAA6B,SAAAkP,wBAAA,gBAGApR,aACAK,KAAA6B,SAAA7C,YAA8BiS,EAAyBrW,WAAA6V,UCnBxC,IAAAa,EAVf,cAA8CL,EAC9CtR,WACAK,KAAA6B,SAAA9C,SAA2BkS,EAAyBrW,WAAA6V,QAGpD9Q,aACAK,KAAA6B,SAAA7C,YAA8BiS,EAAyBrW,WAAA6V,UCAvD,MAAMc,UAAwBrL,EAAA,EAK9BvG,gBAAA2G,GACA,WAAeiL,EAAejL,GAM9B3G,eAAAwG,GACAtG,SAAAsG,GAEAnG,KAAAwR,SAGA7R,aACAK,KAAAwR,SAAAxR,KAAAmI,MAAAyH,cAA6CqB,EAAyBpW,QAAA+V,kBAMtEjR,2BACA,OAAAK,KAAAoJ,YAAA0H,2BAMAnR,uBACA,MAAAC,EAAuDE,OAAAC,OAAA,CACvDhB,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACAoJ,yBAAA,IAAA9Q,KAAAwR,SAAAzI,wBACAgI,wBAAA,CAAAU,EAAA7I,IAAA5I,KAAAwR,SAAA3I,MAAAC,YAAA2I,EAAA7I,KAGA,OAAA5I,KAAAmI,MAAAC,UAAAE,SAAsC2I,EAAyBrW,WAAA8V,MAC/D,IAAiBY,EAA+B1R,GAIhD,IAAesR,EAAgCtR,GAM/CD,SAAAqR,GACAhR,KAAAoJ,YAAAE,SAAA0H,GAGArR,aACAK,KAAAoJ,YAAAG,cCnEA,MAAMmI,EAAU,CAChBjB,OAAA,mBAIMkB,EAAO,CACb1G,cAAA,gBACA2G,gBAAA,mBACAhB,iBAAA,oBACAiB,uBAAA,qBACAC,SAAA,WACAC,iBAAA,qBCGA,MAAMC,UAAyBxF,EAAA,EAE/B5R,wBACA,OAAW8W,EAIX7W,qBACA,OAAW8W,EAOXjT,4BACA,MAAqC,CACrCK,SAAA,OACAC,YAAA,OACAyN,SAAA,OACAwF,QAAA,OACAC,kBAAA,OACAC,oBAAA,OACAC,iBAAA,OACAC,cAAA,OACAC,eAAA,OACAC,qBAAA,OACAC,sBAAA,OACAC,MAAA,QAKA9S,YAAAC,GACAC,MAAAC,OAAAC,OAAwBiS,EAAgBtT,eAAAkB,IAGxCI,KAAA0S,kBAAA,EAMA/S,cAGAK,KAAA6B,SAAAuQ,mBAOAzS,WACA,OAAAK,KAAA6B,SAAA4K,SAAkCiF,EAAUjB,QAO5C9Q,mBAAAgT,GACA3S,KAAA0S,iBAAAC,EAOAhT,SAAAqR,GACAhR,KAAA6B,SAAA9C,SAA2B2S,EAAUjB,QACrCzQ,KAAA6B,SAAAoQ,QAA0BN,EAAO1G,cAAA,QACjCjL,KAAA6B,SAAAoQ,QAA0BN,EAAOG,SAAA,KACjC9R,KAAA6B,SAAAqQ,kBAAAlB,GACAhR,KAAA0S,kBACA1S,KAAA6B,SAAA4Q,QAOA9S,aAEAK,KAAA4S,aAIA5S,KAAA6B,SAAA7C,YAA8B0S,EAAUjB,QACxCzQ,KAAA6B,SAAAoQ,QAA0BN,EAAO1G,cAAA,SACjCjL,KAAA6B,SAAAoQ,QAA0BN,EAAOG,SAAA,MACjC9R,KAAA6B,SAAAsQ,uBAOAxS,oBACA,MAAAkT,EAAA7S,KAAA6B,SAAAyQ,iBACAQ,EAAA9S,KAAA6B,SAAAwQ,gBACAU,EAAA/S,KAAA6B,SAAA2Q,wBACAQ,EAAAhT,KAAA6B,SAAA0Q,uBAEA,OACAO,WACAG,UAAAH,EAAAD,EACAG,YAAAF,EAAAE,EACAE,aAAAJ,EAAAE,EAAAD,IAKe,IAAAI,EAAA,EClHf,MAAMC,UAAelN,EAAA,EAIrBvG,eAAAwG,GACAtG,SAAAsG,GAEAnG,KAAAqT,QAEArT,KAAAsT,cAEAtT,KAAAwR,SAGAxR,KAAAuT,aAOA5T,gBAAA2G,GACA,WAAe8M,EAAM9M,GAGrB3G,WACA8P,EAAA,EAAAC,EAAAjR,IAAA,IAA4C8H,EAAA,EAASmJ,EAAAjR,IACrD+U,EAAA,CAAA9D,GAAA,IAAsC6B,EAAe7B,KACrD,MAAA+D,EAAAzT,KAAAmI,MAAAyH,cAAmDuD,EAAgBtY,QAAA+W,iBACnE8B,EAAA5T,OAAAC,OAAwCwG,EAAA,EAASiD,cAAgD,OACjGzK,SAAA2I,GAAA+L,EAAArL,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA+L,EAAArL,UAAAH,OAAAP,GACAlI,kBAAA,CAAAmJ,EAAAC,IAAA6K,EAAA5K,MAAAC,YAAAH,EAAAC,KAEA+K,EAAA,IAAiCpN,EAAA,EAAmBmN,GACpD1T,KAAAqT,QAAA5D,EAAAzP,KAAAmI,MAAAwL,GAEA,MAAAC,EAAA5T,KAAAmI,MAAAyH,cAAyDuD,EAAgBtY,QAAAgX,wBACzE7R,KAAAsT,cAAAE,EAAAI,GAEA5T,KAAAwR,SAAAxR,KAAAmI,MAAAyH,cAA6CuD,EAAgBtY,QAAA+V,kBAG7DjR,qBACAK,KAAAuT,aAAAvT,KAAAoJ,YAAAyK,YAAAC,KAAA9T,KAAAoJ,aACApJ,KAAA+T,OAAA,QAAA/T,KAAAuT,cAGA5T,UACAK,KAAAgU,SAAA,QAAgDhU,KAAA,cAChDA,KAAAqT,QAAAnJ,UACArK,MAAAqK,UAMAvK,uBACA,WAAewT,EACiB,CAChClB,QAAA,CAAAgC,EAAArL,IAAA5I,KAAAmI,MAAA+L,aAAAD,EAAArL,GACA7J,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACA+E,SAAA/E,GAAA1H,KAAAmI,MAAAC,UAAAE,SAAAZ,GACAwK,kBAAAlB,GAAAhR,KAAAsT,cAAAhK,SAAA0H,GACAmB,oBAAA,IAAAnS,KAAAsT,cAAA/J,aACA6I,iBAAA,IAAApS,KAAAwQ,KAA0C2C,EAAgBtY,QAAAkX,iBAAA,CAA4BoC,IAAAnU,OAAU,GAChGqS,cAAA,IAAArS,KAAAmI,MAAAiM,WACA9B,eAAA,IAAAtS,KAAAmI,MAAAkM,YACA9B,qBAAA,IAAAvS,KAAAwR,SAAA4C,WACA5B,sBAAA,IAAAxS,KAAAwR,SAAA6C,YACA5B,MAAA,IAAAzS,KAAAmI,MAAAsK,UAQA6B,aACA,OAAAtU,KAAAoJ,YAAAwJ,WAGAD,uBACA3S,KAAAoJ,YAAAmL,mBAAA5B,GAOAhT,SAAA6U,GACAxU,KAAAoJ,YAAAE,SAAAkL,GAMA7U,aACAK,KAAAoJ,YAAAG,aAOA5J,6BACA,OAAAK,KAAAsT,cAAAxC,2BAMAnR,oBACA,OAAAK,KAAAoJ,YAAAqL,oBAMA9U,QACAK,KAAAmI,MAAAsK,SCtIA,MAAMiC,EAAU,CAChBC,UAAA,8BACAC,YAAA,yBACAC,mBAAA,yCAIMC,EAAO,CACbC,cAAA,iCACAnE,iBAAA,qCCoCe,IAAAoE,EArCf,MAEArV,YAAAC,GAEAI,KAAA6B,SAAAjC,EAQAD,qBAAAsV,IAOAtV,YAAAuV,IAOAvV,mBAAAuV,IAQAvV,2BAAAuV,EAAAD,MCqCe,IAAAE,EAtEf,cAAuCH,EAIvCrV,uBACA,MAAAyV,EAAApV,KAAA6B,SAAAwT,2BACAC,MAAWA,GAAMtV,KAAAuV,wBAEjB,OAAAhQ,KAAAO,MAAAwP,EAAAF,GAOAzV,YAAAuV,GACA,MAAAM,EAAAxV,KAAAuV,wBACAH,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,kBAAAF,EAAAF,MAAAJ,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAH,EAAAL,GAQAzV,mBAAAuV,GACA,MAAAE,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,kBAAAN,EAAAF,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAH,EAAAL,GAQAzV,2BAAAuV,GACA,OAAAA,EAOAvV,wBAGA,MAAqD,CACrDyB,KAAA,EACAkU,MAJAtV,KAAA6B,SAAAgU,8BACA7V,KAAA6B,SAAAiU,4BAYAnW,kBAAAuV,GACA,MAAAM,EAAAxV,KAAAuV,wBACA,OAAAhQ,KAAAwQ,IAAAxQ,KAAAC,IAAAgQ,EAAApU,KAAA8T,GAAAM,EAAAF,SCGe,IAAAU,EArEf,cAAwChB,EAKxCrV,qBAAAsV,GACA,MAAAG,EAAApV,KAAA6B,SAAAwT,0BACA,OAAA9P,KAAAO,MAAAmP,EAAAG,GAOAzV,YAAAuV,GACA,MAAAE,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,mBAAAR,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAH,EAAAL,GAQAzV,mBAAAuV,GACA,MAAAE,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,kBAAAN,EAAAF,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAH,EAAAL,GASAzV,2BAAAuV,EAAAD,GACA,OAAAC,EAAAD,EAOAtV,wBACA,MAAAoT,EAAA/S,KAAA6B,SAAAgU,8BAEA,MAAqD,CACrDzU,KAFApB,KAAA6B,SAAAiU,2BAEA/C,EACAuC,MAAA,GASA3V,kBAAAuV,GACA,MAAAM,EAAAxV,KAAAuV,wBACA,OAAAhQ,KAAAC,IAAAD,KAAAwQ,IAAAP,EAAAF,MAAAJ,GAAAM,EAAApU,QCIe,IAAA6U,EArEf,cAAuCjB,EAKvCrV,qBAAAsV,GACA,MAAAG,EAAApV,KAAA6B,SAAAwT,0BAEA,OAAA9P,KAAAO,MAAAsP,EAAAH,GAOAtV,YAAAuV,GACA,MAAAE,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,kBAAAR,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAR,EAAAK,GAQA9V,mBAAAuV,GACA,MAAAE,EAAApV,KAAA6B,SAAAwT,0BACAI,EAAAzV,KAAA0V,kBAAAN,EAAAF,GACA,MAA+C,CAC/CS,oBAAAF,EACAG,YAAAR,EAAAK,GAQA9V,2BAAAuV,EAAAD,GACA,OAAAC,EAAAD,EAOAtV,wBAGA,MAAqD,CACrDyB,KAHApB,KAAA6B,SAAAgU,8BACA7V,KAAA6B,SAAAiU,2BAGAR,MAAA,GASA3V,kBAAAuV,GACA,MAAAM,EAAAxV,KAAAuV,wBACA,OAAAhQ,KAAAwQ,IAAAxQ,KAAAC,IAAAgQ,EAAAF,MAAAJ,GAAAM,EAAApU,QC7DA,MAAM8U,UAAiC1J,EAAA,EAEvC5R,wBACA,OAAW8Z,EAIX7Z,qBACA,OAAWia,EAOXpW,4BACA,MAA6C,CAC7CyX,2BAAA,OACApX,SAAA,OACAC,YAAA,OACAoX,mBAAA,OACAC,2BAAA,OACAC,8BAAA,OACAC,2BAAA,OACAC,wBAAA,OACAnB,wBAAA,OACAQ,4BAAA,OACAC,yBAAA,OACAW,4BAAA,OACAC,+BAAA,OACAC,iCAAA,QAKAhX,YAAAC,GACAC,MAAAC,OAAAC,OAAwBmW,EAAwBxX,eAAAkB,IAMhDI,KAAA4W,cAAA,EAOA5W,KAAA6W,qBAGAlX,OAGA,MAAAmX,EAAA9W,KAAA6B,SAAA8U,mCACA3W,KAAA6B,SAAAwU,2BAAA,iBAAAS,EAAA,MACA9W,KAAA6B,SAAAuU,mBAAqCF,EAAwBtb,WAAAia,oBAO7DlV,oBACA,GAAAK,KAAA+W,SACA,OAAA/W,KAAAgX,mCAGA,MAAAC,EAAAjX,KAAAkX,8BAEA,OADAlX,KAAA6B,SAAAwT,0BACA4B,EAMAtX,oBAEAK,KAAA4W,cAKA5W,KAAAmX,uBAOAxX,oBAAA0K,GAEArK,KAAA4W,cACA5W,KAAA6B,SAAAsU,2BAAA9L,EAAA/G,OAA+D4S,EAAwBrb,QAAA+V,oBAIvF5Q,KAAA4W,cAAA,EACA5W,KAAA6B,SAAA7C,YAA8BkX,EAAwBtb,WAAA+Z,YAOtDhV,gBAAAyX,GAEA,OAAAA,EAIA,OAAApX,KAAA+W,SACA/W,KAAAqX,oBAAAD,QAGApX,KAAAsX,iBAAAF,GAOAzX,SAAAuV,GACA,GAAAlV,KAAA+W,SACA,OAAA/W,KAAAuX,aAAArC,GAGAlV,KAAAwX,UAAAtC,GAOAvV,iBAKA,OAJAK,KAAA6W,uBACA7W,KAAA6W,qBAAA7W,KAAAyX,uBAGAzX,KAAA6W,qBAQAlX,8BACA,MAAA+X,EAAA1X,KAAA6B,SAAA0U,2BAAA,aAEA,YAAAmB,EACA,SAOA,MACAC,EADA,WAAAC,KAAAF,GAAA,GACAG,MAAA,KACA,OAAAC,WAAAH,EAAA,IASAhY,kBAAAuV,GACA,MAAAM,EAAAxV,KAAAuV,wBACA,OAAAhQ,KAAAwQ,IAAAxQ,KAAAC,IAAAgQ,EAAApU,KAAA8T,GAAAM,EAAAF,OAOA3V,mCACA,MAAAsV,EAAAjV,KAAAkX,8BACA,OAAAlX,KAAA+X,iBAAAC,qBAAA/C,GAOAtV,wBAGA,MAAqD,CACrDyB,KAAA,EACAkU,MAJAtV,KAAA6B,SAAAgU,8BACA7V,KAAA6B,SAAAiU,4BAYAnW,UAAAuV,GACA,MAAA+C,EAAAjY,KAAAkY,oBACAC,EAAAnY,KAAA0V,kBAAAR,GACAU,EAAAuC,EAAAF,EACAjY,KAAAoY,SAAsD,CACtDzC,oBAAAwC,EACAvC,gBASAjW,aAAAuV,GACA,MAAAmD,EAAArY,KAAA+X,iBAAAO,YAAApD,GACAlV,KAAAoY,SAAAC,GAQA1Y,iBAAAuV,GACA,MAAA+C,EAAAjY,KAAAkY,oBACAK,EAAArD,EAAA+C,EACAE,EAAAnY,KAAA0V,kBAAA6C,GACA3C,EAAAuC,EAAAF,EACAjY,KAAAoY,SAAsD,CACtDzC,oBAAAwC,EACAvC,gBASAjW,oBAAAuV,GACA,MAAAmD,EAAArY,KAAA+X,iBAAAS,mBAAAtD,GACAlV,KAAAoY,SAAAC,GAQA1Y,SAAA0Y,GAEA,IAAAA,EAAAzC,cAIA5V,KAAAmX,uBAGAnX,KAAA6B,SAAA2U,wBAAA6B,EAAA1C,qBACA3V,KAAA6B,SAAAyU,8BAAA,0BAA2E+B,EAAAzC,kBAE3E5V,KAAA6B,SAAA4U,8BAEAlU,sBAAA,KACAvC,KAAA6B,SAAA9C,SAA6BmX,EAAwBtb,WAAA+Z,WACrD3U,KAAA6B,SAAAyU,8BAAA,sBAGAtW,KAAA4W,cAAA,GAOAjX,uBACAK,KAAA4W,cAAA,EACA,MAAA5H,EAAAhP,KAAAyY,8BACAzY,KAAA6B,SAAA7C,YAA8BkX,EAAwBtb,WAAA+Z,WACtD3U,KAAA6B,SAAAyU,8BAAA,+BACAtW,KAAA6B,SAAA2U,wBAAAxH,GAQArP,8BACA,MAAAsX,EAAAjX,KAAAkX,8BACAwB,EAAA1Y,KAAA6B,SAAAwT,0BACA,OAAArV,KAAA+W,SACA/W,KAAA+X,iBAAAY,2BAAAD,EAAAzB,GAGAyB,EAAAzB,EAQAtX,sBAmBA,MAAAiZ,EAAA5Y,KAAA6B,SAAAwT,0BACArV,KAAA6B,SAAA2U,wBAAAoC,EAAA,GACA,MAAAC,EAAA7Y,KAAA6B,SAAAwT,0BAKA,GAAAwD,EAAA,EAGA,OADA7Y,KAAA6B,SAAA2U,wBAAAoC,GACA,IAAiB5C,EAAyBhW,KAAA6B,UAG1C,MAAAiX,EAAA9Y,KAAA6B,SAAA4U,8BACAsC,EAAA/Y,KAAA6B,SAAA6U,iCACAsC,EAAAzT,KAAAO,MAAAiT,EAAAzD,MAAAwD,EAAAxD,OAOA,OALAtV,KAAA6B,SAAA2U,wBAAAoC,GAKAI,IAAAH,EACA,IAAiB5C,EAAwBjW,KAAA6B,UAGzC,IAAesT,EAAwBnV,KAAA6B,UAOvClC,SACA,cAAAK,KAAA6B,SAAA0U,2BAAA,cAIe,IAAA0C,EAAA,ECpXf,IAAAC,ECIA,MAAMC,UAAuBjT,EAAA,EAK7BvG,gBAAA2G,GACA,WAAe6S,EAAc7S,GAG7B3G,eAAAwG,GACAtG,SAAAsG,GAGAnG,KAAAwR,SAGAxR,KAAAoZ,MAGApZ,KAAAqZ,mBAGArZ,KAAAsZ,qBAGA3Z,aACAK,KAAAoZ,MAAApZ,KAAAmI,MAAAyH,cAA0CqJ,EAAwBpe,QAAAka,eAClE/U,KAAAwR,SAAAxR,KAAAmI,MAAAyH,cAA6CqJ,EAAwBpe,QAAA+V,kBAGrEjR,qBACAK,KAAAqZ,mBAAA,KAAArZ,KAAAoJ,YAAAmQ,qBACAvZ,KAAAsZ,qBAAA,CAAAjP,GAAArK,KAAAoJ,YAAAoQ,oBAAAnP,IAEArK,KAAAoZ,MAAAlb,iBAAA,QAAA8B,KAAAqZ,oBACArZ,KAAAoZ,MAAAlb,iBAAA,aAAA8B,KAAAqZ,oBACArZ,KAAAoZ,MAAAlb,iBAAA,cAAA8B,KAAAqZ,oBACArZ,KAAAoZ,MAAAlb,iBAAA,YAAA8B,KAAAqZ,oBACArZ,KAAAoZ,MAAAlb,iBAAA,UAAA8B,KAAAqZ,oBACArZ,KAAAwR,SAAAtT,iBAAA,gBAAA8B,KAAAsZ,sBAGA3Z,UACAE,MAAAqK,UAEAlK,KAAAoZ,MAAA3Q,oBAAA,QAAAzI,KAAAqZ,oBACArZ,KAAAoZ,MAAA3Q,oBAAA,aAAAzI,KAAAqZ,oBACArZ,KAAAoZ,MAAA3Q,oBAAA,cAAAzI,KAAAqZ,oBACArZ,KAAAoZ,MAAA3Q,oBAAA,YAAAzI,KAAAqZ,oBACArZ,KAAAoZ,MAAA3Q,oBAAA,UAAAzI,KAAAqZ,oBACArZ,KAAAwR,SAAA/I,oBAAA,gBAAAzI,KAAAsZ,sBAMA3Z,uBAqBA,WAAesZ,EApBuC,CACtD9C,2BAAA,CAAAsD,EAAAC,KAEA,OAAAD,EDjCA,SAAA/S,GACA,OACA,+BACAiT,OAAAC,QAAAlT,GAAAmT,MC6BwB9S,CAAuBC,YAAAC,YAC/CyS,IAEA3a,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACA0O,mBAAA1O,GAAA1H,KAAAoZ,MAAAhR,UAAAC,IAAAX,GACA2O,2BAAA,CAAA5E,EAAA7I,IAAA5I,KAAAoZ,MAAAvQ,MAAAC,YAAA2I,EAAA7I,GACA0N,8BAAA,CAAA7E,EAAA7I,IAAA5I,KAAAwR,SAAA3I,MAAAC,YAAA2I,EAAA7I,GACA2N,2BAAAuD,GAAAjc,OAAAiK,iBAAA9H,KAAAwR,UAAAuI,iBAAAD,GACAtD,wBAAAtB,GAAAlV,KAAAoZ,MAAAV,WAAAxD,EACAG,wBAAA,IAAArV,KAAAoZ,MAAAV,WACA7C,4BAAA,IAAA7V,KAAAwR,SAAA6C,YACAyB,yBAAA,IAAA9V,KAAAoZ,MAAA/E,YACAoC,4BAAA,IAAAzW,KAAAoZ,MAAArQ,wBACA2N,+BAAA,IAAA1W,KAAAwR,SAAAzI,wBACA4N,iCAAA,KDrEA,SAAAqD,EAAAC,GAAA,GACA,GAAAA,QAAA,IAAAf,EACA,OAAAA,EAGA,MAAAxJ,EAAAsK,EAAAvS,cAAA,OACAiI,EAAAtH,UAAAC,IAAmBqM,EAAUE,aAC7BoF,EAAArS,KAAAC,YAAA8H,GAEA,MAAAoH,EAAApH,EAAAwK,aAAAxK,EAAAa,aAMA,OALAyJ,EAAArS,KAAAwS,YAAAzK,GAEAuK,IACAf,EAAApC,GAEAA,GCsD8CH,CAAqC1Y,YAUnF0B,oBACA,OAAAK,KAAAoJ,YAAA8O,oBAOAvY,wBACA,OAAAK,KAAAwR,SAAA6C,YAOA1U,gBAAAyX,GACApX,KAAAoJ,YAAAgR,gBAAAhD,GAOAzX,SAAAuV,GACAlV,KAAAoJ,YAAAiR,SAAAnF,ICtHA,MAAMoF,EAAO,CACbC,oBAAA,sBACAC,sBAAA,oBACAC,aAAA,WACAC,eAAA,YACAC,gBAAA,aACAC,QAAA,MACAC,SAAA,OACAC,UAAA,QACAC,UAAA,SAIAjgB,EAAA,CACAkgB,oBAAA,GACAC,mBAAA,GACAC,oBAAA,GACAC,YAAA,GACAC,aAAA,GACAC,cAAA,GACAC,cAAA,ICTAC,EAAA,IAAAC,IAEAD,EAAAlT,IAAoBiS,EAAOI,gBAC3Ba,EAAAlT,IAAoBiS,EAAOK,iBAC3BY,EAAAlT,IAAoBiS,EAAOM,SAC3BW,EAAAlT,IAAoBiS,EAAOO,UAC3BU,EAAAlT,IAAoBiS,EAAOQ,WAC3BS,EAAAlT,IAAoBiS,EAAOS,WAK3B,MAAAU,EAAA,IAAAC,IAEAD,EAAAE,IAAgB7gB,EAAOmgB,mBAAqBX,EAAOI,gBACnDe,EAAAE,IAAgB7gB,EAAOogB,oBAAsBZ,EAAOK,iBACpDc,EAAAE,IAAgB7gB,EAAOqgB,YAAcb,EAAOM,SAC5Ca,EAAAE,IAAgB7gB,EAAOsgB,aAAed,EAAOO,UAC7CY,EAAAE,IAAgB7gB,EAAOugB,cAAgBf,EAAOQ,WAC9CW,EAAAE,IAAgB7gB,EAAOwgB,cAAgBhB,EAAOS,WAM9C,MAAMa,UAA4BpP,EAAA,EAElC3R,qBACA,OAAWyf,EAIXxf,qBACA,OAAWA,EAOX4D,4BACA,MAAwC,CACxC2b,SAAA,OACAD,gBAAA,OACAlC,kBAAA,OACA2D,sBAAA,OACAvJ,eAAA,OACAwJ,MAAA,OACAC,aAAA,OACAC,mBAAA,OACAC,qBAAA,OACAC,gBAAA,OACAC,iCAAA,OACAC,wBAAA,OACAC,0BAAA,OACAC,mBAAA,OACAC,cAAA,OACAC,iBAAA,OACAC,mBAAA,QAOA9c,YAAAC,GACAC,MAAAC,OAAAC,OAAwB6b,EAAmBld,eAAAkB,IAG3CI,KAAA0c,yBAAA,EAQA/c,0BAAAgd,GACA3c,KAAA0c,wBAAAC,EAOAhd,YAAAid,GACA,MAAAC,EAAA7c,KAAA6B,SAAAwa,4BACArc,KAAA8c,gBAAAF,QAAAC,IAIA7c,KAAA6B,SAAAoa,qBAAAY,GACA7c,KAAA6B,SAAAma,mBAAAY,EAAA5c,KAAA6B,SAAAsa,iCAAAU,IACA7c,KAAA+c,eAAAH,GAEA5c,KAAA6B,SAAA4a,mBAAAG,IAOAjd,cAAA0K,GAEA,MAAAzG,EAAA5D,KAAAgd,iBAAA3S,GAGA,QAAAtM,IAAA6F,EASA,GAJA5D,KAAAid,iBAAArZ,IACAyG,EAAA6S,iBAGAld,KAAA0c,wBAAA,CACA,GAAA1c,KAAAid,iBAAArZ,GACA,OAGA,MAAAgZ,EAAA5c,KAAAmd,wBAAAnd,KAAA6B,SAAAwa,4BAAAzY,GACA5D,KAAA6B,SAAAka,aAAAa,GACA5c,KAAA+c,eAAAH,OACK,CACL,MAAAQ,EAAApd,KAAA6B,SAAAya,qBACA,GAAAtc,KAAAid,iBAAArZ,GACA5D,KAAA6B,SAAAka,aAAAqB,OACO,CACP,MAAAR,EAAA5c,KAAAmd,wBAAAC,EAAAxZ,GACA5D,KAAA6B,SAAAqa,gBAAAU,GACA5c,KAAA+c,eAAAH,KASAjd,qBAAA0K,GACArK,KAAA6B,SAAAka,aAAA/b,KAAA6B,SAAA0a,cAAAlS,EAAAE,OAAA4J,MAOAxU,eAAAid,GAEA,GAAA5c,KAAA8c,gBAAAF,GAKA,WAAAA,EACA5c,KAAA6B,SAAAwY,SAAA,GAKAuC,IAAA5c,KAAA6B,SAAA2a,mBAAA,EACAxc,KAAA6B,SAAAwY,SAAAra,KAAA6B,SAAAga,yBAGA7b,KAAA+W,SACA/W,KAAAqd,mBAAAT,QAGA5c,KAAAsd,gBAAAV,GAUAjd,wBAAA4d,EAAA3Z,GACA,MAAAkY,EAAA9b,KAAA+W,SACAyG,EAAAxd,KAAA6B,SAAA2a,mBAAA,EACAiB,EAAA7Z,IAAkC0W,EAAOM,QACzC8C,EAAA9Z,IAAoC0W,EAAOI,iBAAAoB,GAAAlY,IAAqC0W,EAAOK,iBAAAmB,EACvF6B,EAAA/Z,IAAoC0W,EAAOK,kBAAAmB,GAAAlY,IAAsC0W,EAAOI,gBAAAoB,EACxF,IAAAc,EAAAW,EAkBA,OAhBAE,EACAb,EAAAY,EACKE,EACLd,GAAA,EACKe,EACLf,GAAA,EAEAA,EAAA,EAGAA,EAAA,EACAA,EAAAY,EACKZ,EAAAY,IACLZ,EAAA,GAGAA,EAYAjd,0BAAAid,EAAAgB,EAAAC,EAAAC,GACA,MAAAC,EAAA/d,KAAA6B,SAAAua,wBAAAwB,GACAI,EAAAD,EAAA/K,YAAA6K,EAAAC,EAEAG,EADAF,EAAA7K,aAAA2K,EACiD/iB,EAAOkgB,oBACxDkD,EAAAF,EAAiDljB,EAAOkgB,oBAExD,OAAA4C,EAAAhB,EACArX,KAAAwQ,IAAAkI,EAAA,GAGA1Y,KAAAC,IAAA0Y,EAAA,GAaAve,6BAAAid,EAAAgB,EAAAC,EAAAC,EAAAK,GACA,MAAAJ,EAAA/d,KAAA6B,SAAAua,wBAAAwB,GACAI,EAAAG,EAAAJ,EAAA/K,YAAA6K,EAEAI,EADAE,EAAAJ,EAAA7K,aAAA2K,EAAAC,EACiDhjB,EAAOkgB,oBACxDkD,EAAAF,EAAiDljB,EAAOkgB,oBAExD,OAAA4C,EAAAhB,EACArX,KAAAC,IAAAyY,EAAA,GAGA1Y,KAAAwQ,IAAAmI,EAAA,GAYAve,mCAAAid,EAAAwB,EAAAP,EAAAC,GAyBA,MAAAO,EAAAD,EAAAtL,SAAA+K,EACAS,EAAAF,EAAAnL,UAAA4K,EAAAC,EACAS,EAAAF,EAAAC,EAIA,OAHAD,EAAA,GAAAE,EAAA,EAIA3B,EAAA,EAHA0B,EAAA,GAAAC,EAAA,EAOA3B,EAAA,GAGA,EAaAjd,sCAAAid,EAAAwB,EAAAP,EAAAC,EAAAK,GACA,MAAArL,EAAAqL,EAAAC,EAAAtL,SAAAgL,EAAAD,EACA5K,EAAAkL,EAAAC,EAAAnL,UAAA4K,EACAW,EAAA1L,EAAAG,EAIA,OAHAH,EAAA,GAAA0L,EAAA,EAIA5B,EAAA,EAHA3J,EAAA,GAAAuL,EAAA,EAOA5B,EAAA,GAGA,EASAjd,iBAAA0K,GACA,OAAAkR,EAAAkD,IAAApU,EAAAzG,KACAyG,EAAAzG,IAGA6X,EAAAiD,IAAArU,EAAAxG,SAGAlE,iBAAAiE,GACA,OAAAA,IAAmB0W,EAAOS,WAAAnX,IAAsB0W,EAAOQ,UAQvDnb,gBAAAid,GACA,OAAAA,GAAA,GAAAA,EAAA5c,KAAA6B,SAAA2a,mBAQA7c,SACA,OAAAK,KAAA6B,SAAAia,QAQAnc,gBAAAid,GACA,MAAAiB,EAAA7d,KAAA6B,SAAAqW,oBACA4F,EAAA9d,KAAA6B,SAAAyQ,iBACA8L,EAAApe,KAAA6B,SAAAua,wBAAAQ,GACAgB,EAAA5d,KAAA2e,mCAAA/B,EAAAwB,EAAAP,EAAAC,GAEA,IAAA9d,KAAA8c,gBAAAc,GACA,OAGA,MAAAgB,EAAA5e,KAAA6e,0BAAAjC,EAAAgB,EAAAC,EAAAC,GACA9d,KAAA6B,SAAAuY,gBAAAwE,GAQAjf,mBAAAid,GACA,MAAAiB,EAAA7d,KAAA6B,SAAAqW,oBACA4F,EAAA9d,KAAA6B,SAAAyQ,iBACA8L,EAAApe,KAAA6B,SAAAua,wBAAAQ,GACAkC,EAAA9e,KAAA6B,SAAAga,wBACA+B,EAAA5d,KAAA+e,sCACAnC,EAAAwB,EAAAP,EAAAC,EAAAgB,GAEA,IAAA9e,KAAA8c,gBAAAc,GACA,OAGA,MAAAgB,EAAA5e,KAAAgf,6BAAApC,EAAAgB,EAAAC,EAAAC,EAAAgB,GACA9e,KAAA6B,SAAAuY,gBAAAwE,IAIe,IAAAK,EAAA,EC5bfxkB,EAAAC,EAAAC,EAAA,sBAAAukB,IAmCA,MAAMA,UAAkBhZ,EAAA,EAIxBvG,eAAAwG,GACAtG,SAAAsG,GAGAnG,KAAAmf,SAGAnf,KAAAof,YAGApf,KAAAqf,aAGArf,KAAAsf,oBAGAtf,KAAAuf,sBAGAvf,KAAAwf,eAOA7f,gBAAA2G,GACA,WAAe4Y,EAAS5Y,GAGxBqM,uBACA3S,KAAAmf,SAAAtc,QAAAsR,KAAAxB,mBAGAgK,8BACA3c,KAAAoJ,YAAAqW,0BAAA9C,GAOAhd,WACA+f,EAAA,CAAAhQ,GAAA,IAA6B0D,EAAM1D,IACnCiQ,EAAA,CAAAjQ,GAAA,IAAqCyJ,EAAczJ,KACnD1P,KAAAof,YAAAM,EACA1f,KAAAsf,oBAAAK,EAEA3f,KAAAmf,SAAAnf,KAAA4f,kBAAA3P,IAAAP,GAAA1P,KAAAof,YAAA1P,IAEA,MAAAmQ,EAAA7f,KAAAmI,MAAAyH,cAAwDqP,EAAmBpkB,QAAA2f,uBAC3EqF,IACA7f,KAAAqf,aAAArf,KAAAsf,oBAAAO,IAIAlgB,qBACAK,KAAAuf,sBAAA,CAAAlV,GAAArK,KAAAoJ,YAAA0W,qBAAAzV,IACArK,KAAAwf,eAAA,CAAAnV,GAAArK,KAAAoJ,YAAA2W,cAAA1V,IAEArK,KAAAmI,MAAAjK,iBAAgCiV,EAAgBtY,QAAAkX,iBAAA/R,KAAAuf,uBAChDvf,KAAAmI,MAAAjK,iBAAA,UAAA8B,KAAAwf,gBAEA,QAAA3Y,EAAA,EAAmBA,EAAA7G,KAAAmf,SAAA/b,OAA0ByD,IAC7C,GAAA7G,KAAAmf,SAAAtY,GAAAyN,OAAA,CACAtU,KAAA+c,eAAAlW,GACA,OAKAlH,UACAE,MAAAqK,UACAlK,KAAAmI,MAAAM,oBAAmC0K,EAAgBtY,QAAAkX,iBAAA/R,KAAAuf,uBACnDvf,KAAAmI,MAAAM,oBAAA,UAAAzI,KAAAwf,gBACAxf,KAAAmf,SAAAtc,QAAAsR,KAAAjK,WACAlK,KAAAqf,aAAAnV,UAMAvK,uBACA,WAAesf,EACoB,CACnC5E,SAAAnF,GAAAlV,KAAAqf,aAAAhF,SAAAnF,GACAkF,gBAAAhD,GAAApX,KAAAqf,aAAAjF,gBAAAhD,GACAc,kBAAA,IAAAlY,KAAAqf,aAAAnH,oBACA2D,sBAAA,IAAA7b,KAAAqf,aAAAxD,wBACAvJ,eAAA,IAAAtS,KAAAmI,MAAAkM,YACAyH,MAAA,YAAAje,OAAAiK,iBAAA9H,KAAAmI,OAAA4R,iBAAA,aACAgC,aAAAa,GAAA5c,KAAAoJ,YAAA4W,YAAApD,GACAZ,mBAAA,CAAAY,EAAAlY,IAAA1E,KAAAmf,SAAAvC,GAAAtT,SAAA5E,GACAuX,qBAAAW,GAAA5c,KAAAmf,SAAAvC,GAAArT,aACA2S,gBAAAU,GAAA5c,KAAAmf,SAAAvC,GAAAnK,QACA0J,iCAAAS,GAAA5c,KAAAmf,SAAAvC,GAAApI,6BACA4H,wBAAAQ,GAAA5c,KAAAmf,SAAAvC,GAAAnI,oBACA4H,0BAAA,KACA,QAAAxV,EAAA,EAAyBA,EAAA7G,KAAAmf,SAAA/b,OAA0ByD,IACnD,GAAA7G,KAAAmf,SAAAtY,GAAAyN,OACA,OAAAzN,EAGA,UAEAyV,mBAAA,KACA,MAAA2D,EAAAjgB,KAAA4f,kBACAM,EAAAjiB,SAAAiiB,cACA,OAAAD,EAAAhd,QAAAid,IAEA3D,cAAA4D,GAAAngB,KAAAmf,SAAAlc,QAAAkd,GACA3D,iBAAA,IAAAxc,KAAAmf,SAAA/b,OACAqZ,mBAAAG,GAAA5c,KAAAwQ,KAAiDyO,EAAmBpkB,QAAA0f,oBAAA,CAA+BqC,UAAM,KASzGjd,YAAAid,GACA5c,KAAAoJ,YAAA4W,YAAApD,GAOAjd,eAAAid,GACA5c,KAAAoJ,YAAA2T,eAAAH,GAGAjd,kBACA,SAAAmQ,MAAAC,KAAA/P,KAAAmI,MAAA6H,iBAAqDiP,EAAmBpkB,QAAA4f,+CC7KxEhgB,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAwBA,MAAAD,EAAA,CACAU,KAAA,WACA8kB,wBAAA,0BACAC,qBAAA,6BAIAxlB,EAAA,CACAylB,eAAA,mBACAC,mBAAA,gBACAC,cAAA,YACAnV,kBAAA,mECXA,IAAAoV,6BCxBAhmB,EAAAC,EAAAC,EAAA,sBAAA+lB,IAgCA,MAAMA,UAAuBxa,EAAA,EAE7BvG,eAAAwG,GACAtG,SAAAsG,GAGAnG,KAAA2gB,eAEA3gB,KAAA4gB,cAEA5gB,KAAA6gB,uBAEA7gB,KAAA8gB,sBAEA9gB,KAAA+gB,eAEA/gB,KAAAghB,iBAEAhhB,KAAAihB,2BAEAjhB,KAAAkhB,6BAOAvhB,gBAAA2G,GACA,WAAeoa,EAAcpa,GAG7B3G,qBACAK,KAAAmI,MAAAgZ,eAAAnhB,KAAAmI,MAAAgZ,cAAA/Y,UAAAE,SAAgF8Y,EAAA,EAAUnmB,UAC1F+E,KAAA4gB,cAAA5gB,KAAAmI,MAAAgZ,eAGAnhB,KAAAmI,MAAAC,UAAAE,SAAsC8Y,EAAA,EAAUhmB,QAChD4E,KAAAqhB,kBAAA,GAGArhB,KAAA+gB,eAAA,CAAA1W,GAAArK,KAAAoJ,YAAAkY,cAAAjX,IACArK,KAAAghB,iBAAA,CAAA3W,GAAArK,KAAAoJ,YAAAmY,gBAAAlX,IAEArK,KAAAihB,2BAAA,KAAAhjB,SAAA0J,KAAAzJ,iBAAA,QAAA8B,KAAAghB,mBACAhhB,KAAAkhB,6BAAA,KAAAjjB,SAAA0J,KAAAc,oBAAA,QAAAzI,KAAAghB,mBAEAhhB,KAAAmI,MAAAjK,iBAAA,UAAA8B,KAAA+gB,gBACA/gB,KAAAmI,MAAAjK,iBAAgCkjB,EAAA,EAAO5lB,aAAAwE,KAAAihB,4BACvCjhB,KAAAmI,MAAAjK,iBAAgCkjB,EAAA,EAAO7lB,aAAAyE,KAAAkhB,8BAGvCvhB,UACAK,KAAAmI,MAAAM,oBAAA,UAAAzI,KAAA+gB,gBACA/gB,KAAAmI,MAAAM,oBAAmC2Y,EAAA,EAAO5lB,aAAAwE,KAAAihB,4BAC1CjhB,KAAAmI,MAAAM,oBAAmC2Y,EAAA,EAAO7lB,aAAAyE,KAAAkhB,8BAC1CrhB,MAAAqK,UAIAsX,WACA,OAAAxhB,KAAAoJ,YAAAqY,SAIAD,SAAA5Y,GACA,GAAAA,EAAA,CACA,MAAA8Y,EAAA1hB,KAAAmI,MAAA6H,iBAA4DoR,EAAA,EAAO3lB,oBACnEuE,KAAA6gB,uBAAAa,EAAAte,OAAA,EAAAse,EAAA,QACA1hB,KAAA8gB,sBAAAY,EAAAte,OAAA,EACAse,IAAAte,OAAA,QACApD,KAAAoJ,YAAAoY,YAEAxhB,KAAAoJ,YAAAuY,QAQAhiB,kBACA1B,SAAA0J,KAAAC,YAAA5H,KAAAmI,MAAAgZ,cAAAhH,YAAAna,KAAAmI,QACAnI,KAAA4hB,cAAA,GAQAjiB,aAAAkiB,GACA7hB,KAAAoJ,YAAAwY,aAAAC,GAOAliB,4BAAAmiB,GACA9hB,KAAA4gB,cAAAkB,EAOAniB,iBAAAoiB,GACAA,EACA/hB,KAAAmI,MAAAC,UAAAC,IAA+B+Y,EAAA,EAAUhmB,OAEzC4E,KAAAmI,MAAAC,UAAAH,OAAkCmZ,EAAA,EAAUhmB,OAG5C4E,KAAAoJ,YAAAiY,iBAAAU,GAQApiB,oBAAAyE,EAAAC,GACArE,KAAAoJ,YAAA4Y,oBAAA5d,EAAAC,GACArE,KAAA4hB,cAAA,GAOAjiB,gBAAAsiB,GACAjiB,KAAAoJ,YAAA8Y,gBAAAD,GAMAtiB,gBAAAwiB,GACAniB,KAAAoJ,YAAAgZ,gBAAAD,GAIAE,iBACAriB,KAAAoJ,YAAAkZ,aAAAD,GAIA1iB,uBACA,WAAelB,EAAA,EACyBqB,OAAAC,OAAA,CACxChB,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACA+E,SAAA/E,GAAA1H,KAAAmI,MAAAC,UAAAE,SAAAZ,GACA6a,UAAA,MAAAviB,KAAA4gB,cACA4B,YAAA,IAAAxiB,KAAAwQ,KAAqC/R,EAAA,EAAwB5D,QAAAU,aAAA,IAC7DknB,WAAA,IAAAziB,KAAAwQ,KAAoC/R,EAAA,EAAwB5D,QAAAW,aAAA,IAC5DknB,qBAAAhT,GAAA1P,KAAAmI,QAAAuH,GAAA1P,KAAAmI,MAAAG,SAAAoH,GACAiT,MAAA,YAAA7a,iBAAA9H,KAAAmI,OAAA4R,iBAAA,aACA6I,mBAAArF,IACAvd,KAAAmI,MAAAU,SD/JA,SAAAjL,EAAAE,GAAA,GACA,QAAAC,IAAA0iB,GAAA3iB,EAAA,CACA,MACA+kB,EAAA,cADAjlB,EAAAK,SAAAwJ,cAAA,OACAoB,MAAA,8BACA4X,EAAAoC,EAGA,OAAApC,ECwJ8BqC,CAA6BjlB,kBAAS0f,IAGpEvd,KAAA+iB,0BACA/iB,KAAAgjB,gCAgBArjB,0BACA,OACAsjB,UAAA,IAAAhlB,SAAAiiB,gBAAAlgB,KAAAmI,MACA+a,UAAA,KACAljB,KAAA2gB,eAAA1iB,SAAAiiB,eAEAiD,aAAA,KACAnjB,KAAAmI,MAAAG,SAAArK,SAAAiiB,gBACAlgB,KAAA2gB,gBAAA3gB,KAAA2gB,eAAAlO,OACAzS,KAAA2gB,eAAAlO,SAIA2Q,sBAAA,IACApjB,KAAA6gB,wBAAA7gB,KAAA6gB,yBAAA5iB,SAAAiiB,cACAmD,qBAAA,IACArjB,KAAA8gB,uBAAA9gB,KAAA8gB,wBAAA7iB,SAAAiiB,cACAoD,kBAAA,IACAtjB,KAAA6gB,wBAAA7gB,KAAA6gB,uBAAApO,OAAAzS,KAAA6gB,uBAAApO,QACA8Q,iBAAA,IACAvjB,KAAA8gB,uBAAA9gB,KAAA8gB,sBAAArO,OAAAzS,KAAA8gB,sBAAArO,SAaA9S,8BACA,OACA6jB,mBAAA,KACA,CAAgBrjB,MAAAH,KAAAmI,MAAAkM,YAAAjU,OAAAJ,KAAAmI,MAAA+R,eAEhBuJ,oBAAA,IAAAzjB,KAAA4gB,eAAA5gB,KAAA4gB,cAAA7X,wBACA2a,oBAAA,KACA,CAAgBvjB,MAAAtC,OAAA8lB,WAAAvjB,OAAAvC,OAAA+lB,cAEhBC,kBAAA,KACA,CAAgB1jB,MAAAlC,SAAA0J,KAAAmc,YAAA1jB,OAAAnC,SAAA0J,KAAA4I,eAEhBwT,gBAAA,KACA,CAAgB3f,EAAAvG,OAAAmL,YAAA3E,EAAAxG,OAAAoL,cAEhB+a,YAAAC,IACAjkB,KAAAmI,MAAAU,MAAAzH,KAAA,SAAA6iB,IAAA7iB,KAAA,KACApB,KAAAmI,MAAAU,MAAAyM,MAAA,UAAA2O,IAAA3O,MAAA,KACAtV,KAAAmI,MAAAU,MAAAxH,IAAA,QAAA4iB,IAAA5iB,IAAA,KACArB,KAAAmI,MAAAU,MAAAqb,OAAA,WAAAD,IAAAC,OAAA,MAEAC,aAAA/jB,IACAJ,KAAAmI,MAAAU,MAAAub,UAAAhkB,mFC7OA,MAAAikB,EAAA,2CAKA,MAAMC,UAA0B7lB,EAAA,EAEhC7D,wBACA,OAAWwmB,EAAA,EAIXvmB,qBACA,OAAWumB,EAAA,EAQX1iB,4BACA,MAAsC,CACtC6lB,yBAAA,OACAC,8BAAA,OACAC,6BAAA,OACAC,kCAAA,OACAC,qBAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,iBAAA,OACAC,wBAAA,OACAC,eAAA,QAKArlB,YAAAC,GACAC,MAAAC,OAAAC,OAAwBukB,EAAiB5lB,eAAAkB,IAGzCI,KAAAilB,0BAAA,EAGAtlB,UACAK,KAAAilB,2BACAxiB,aAAAzC,KAAAilB,2BAGAjlB,KAAA6B,SAAA+iB,eAOAjlB,cAAA0K,GACA,MAAAzG,IAAWA,EAAAC,WAAawG,EAIxB6a,EAAA,QAAAthB,GAAA,IAAAC,EAFA,UAAAD,GAAA,KAAAC,IACA,UAAAD,GAAA,KAAAC,GAIA7D,KAAAmlB,cAAA9a,GACK6a,GACLllB,KAAA6B,SAAA+iB,eAQAjlB,YAAA0K,GACArK,KAAAmlB,cAAA9a,GAQA1K,cAAA0K,GACA,MAAA+a,EAAAplB,KAAAqlB,aAA8Dhb,EAAA,QAC9D+a,IACAplB,KAAAslB,gBAAAF,GACAplB,KAAAulB,qBAAAlb,IAQA1K,gBAAAylB,GACA,MAAAxI,EAAA5c,KAAA6B,SAAAgjB,gBAAAO,GACAxI,EAAA,IAIA5c,KAAA6B,SAAAmjB,eAAA,CAAkCpI,UAClC5c,KAAA6B,SAAA+iB,eAGA5kB,KAAAilB,0BAAA1gB,WAAA,KACA,MAAAihB,EAAAxlB,KAAAylB,mBAAAL,GAEA,OAAAI,GACAxlB,KAAA0lB,sBAA2D,EAAA9I,IAEpD+I,EAAA,EAAwB7qB,QAAAa,4BAU/BgE,sBAAA6lB,EAAA5I,GAEA,MAAAgJ,EAAA5lB,KAAA6B,SAAAkjB,wBAAAS,GACAI,GAAA,IACA5lB,KAAA6B,SAAA6iB,kCAAAkB,EAAqExE,EAAA,EAAOb,oBAC5EvgB,KAAA6B,SAAA2iB,8BAAAoB,EAAiExE,EAAA,EAAUhB,0BAG3EpgB,KAAA6B,SAAA0iB,yBAAA3H,EAAkDwE,EAAA,EAAUhB,yBAC5DpgB,KAAA6B,SAAA4iB,6BAAA7H,EAAsDwE,EAAA,EAAOb,mBAAA,QAS7D5gB,mBAAAylB,GACA,IAAAS,EAAA7lB,KAAA6B,SAAAijB,iBAAAM,GACAU,EAAA9lB,KAAA6B,SAAA8iB,qBAAAkB,EAA6DzE,EAAA,EAAUf,sBAGvE,MAAAyF,IAAA9lB,KAAA6B,SAAA8iB,qBAAAkB,EAAmEE,EAAA,EAAiBnrB,WAAAU,OACpFuqB,EAAA7lB,KAAA6B,SAAAijB,iBAAAe,GACAC,EAAA9lB,KAAA6B,SAAA8iB,qBAAAkB,EAA2DzE,EAAA,EAAUf,sBAGrE,OAAAyF,EACAD,EAEA,KAUAlmB,aAAA2D,GACA,IAAA0iB,EAAAhmB,KAAA6B,SAAA8iB,qBAAArhB,EAAgEyiB,EAAA,EAAiBnrB,WAAAgQ,iBAEjF,MAAAob,GAAA,CAEA,KADA1iB,EAAAtD,KAAA6B,SAAAijB,iBAAAxhB,IAIA,YAFA0iB,EAAAhmB,KAAA6B,SAAA8iB,qBAAArhB,EAAgEyiB,EAAA,EAAiBnrB,WAAAgQ,iBAMjF,OAAAtH,EASA3D,qBAAA0K,GACA,MACA4b,KAD2C5b,EAAA,OACpB4b,UAAeC,eACtC,IAAA7B,EAAAphB,QAAAgjB,IACA5b,EAAA6S,sCCxNAziB,EAAAC,EAAAC,EAAA,sBAAAwrB,IAiCA,MAAMA,UAAgBjgB,EAAA,EAEtBvG,eAAAwG,GACAtG,SAAAsG,GAEAnG,KAAAomB,aAEApmB,KAAAqmB,MAEArmB,KAAA+gB,eAEA/gB,KAAAuT,aAEAvT,KAAAsmB,qBAOA3mB,gBAAA2G,GACA,WAAe6f,EAAO7f,GAGtB3G,WACA4mB,EAAA,CAAA7W,GAAA,IAAqC8W,EAAA,EAAc9W,IACnD+W,EAAA,CAAA/W,GAAA,IAA8BgX,EAAA,EAAOhX,KACrC1P,KAAAomB,aAAAG,EAAAvmB,KAAAmI,OAEA,MAAAwe,EAAA3mB,KAAAmI,MAAAyH,cAA0CwR,EAAA,EAAOZ,eACjDmG,IACA3mB,KAAAqmB,MAAAI,EAAAE,GACA3mB,KAAAqmB,MAAAO,WAAA,GAIAjnB,qBACAK,KAAAsmB,qBAAA,KAAAtmB,KAAA6mB,sBACA7mB,KAAA+gB,eAAA,CAAA1W,GAAArK,KAAAoJ,YAAAkY,cAAAjX,IACArK,KAAAuT,aAAA,CAAAlJ,GAAArK,KAAAoJ,YAAAyK,YAAAxJ,IAEArK,KAAAomB,aAAArS,OAA6B4R,EAAA,EAAwB9qB,QAAAW,aAAAwE,KAAAsmB,sBACrDtmB,KAAA+T,OAAA,UAAA/T,KAAA+gB,gBACA/gB,KAAA+T,OAAA,QAAA/T,KAAAuT,cAGA5T,UACAK,KAAAqmB,OACArmB,KAAAqmB,MAAAnc,UAGAlK,KAAAomB,aAAAlc,UACAlK,KAAAomB,aAAApS,SAA+B2R,EAAA,EAAwB9qB,QAAAW,aAAAwE,KAAAsmB,sBACvDtmB,KAAAgU,SAAA,UAAAhU,KAAA+gB,gBACA/gB,KAAAgU,SAAA,QAAAhU,KAAAuT,cACA1T,MAAAqK,UAIAsX,WACA,OAAAxhB,KAAAomB,aAAA5E,KAIAA,SAAA5Y,GACA5I,KAAAomB,aAAA5E,KAAA5Y,EAIAge,gBACA,OAAA5mB,KAAAqmB,MAAAO,UAIAA,cAAAhe,GACA5I,KAAAqmB,MAAAO,UAAAhe,EAOAjJ,gBAAAsiB,GACAjiB,KAAAomB,aAAAlE,gBAAAD,GAMAtiB,gBAAAwiB,GACAniB,KAAAomB,aAAAhE,gBAAAD,GASA2E,YACA,OAAA9mB,KAAAqmB,MAAAU,aAQApnB,iBAAAid,GAGA,OAAAA,EAFA5c,KAAA8mB,MAEA1jB,OACApD,KAAA8mB,MAAAlK,GAEA,KAKAyF,iBACAriB,KAAAomB,aAAA/D,YAIA1iB,iBAAAoiB,GACA/hB,KAAAomB,aAAA/E,iBAAAU,GAGApiB,kBACAK,KAAAomB,aAAAY,kBAIArnB,aAAAkiB,GACA7hB,KAAAomB,aAAAxE,aAAAC,GAOAliB,oBAAAyE,EAAAC,GACArE,KAAAomB,aAAApE,oBAAA5d,EAAAC,GAOA1E,iBAAAmiB,GACA9hB,KAAAomB,aAAAxF,cAAAkB,EAGAniB,qBACA,MAAAgnB,EAAA3mB,KAAA8mB,MACAH,EAAAvjB,OAAA,GACAujB,EAAA,GAAAlU,QAKA9S,uBACA,WAAe2kB,EAAiB,CAChCC,yBAAA,CAAA3H,EAAAlV,KACA1H,KAAA8mB,MACAlK,GAAAxU,UAAAC,IAAAX,IAEA8c,8BAAA,CAAA5H,EAAAlV,KACA1H,KAAA8mB,MACAlK,GAAAxU,UAAAH,OAAAP,IAEA+c,6BAAA,CAAA7H,EAAA3I,EAAArL,KACA5I,KAAA8mB,MACAlK,GAAA1I,aAAAD,EAAArL,IAEA8b,kCAAA,CAAA9H,EAAA3I,KACAjU,KAAA8mB,MACAlK,GAAAqK,gBAAAhT,IAEA0Q,qBAAA,CAAA7C,EAAApa,IAAAoa,EAAA1Z,UAAAE,SAAAZ,GACAkd,aAAA,IAAA5kB,KAAAwhB,MAAA,EACAqD,gBAAA/C,GAAA9hB,KAAA8mB,MAAA7jB,QAAA6e,GACAgD,iBAAAhD,KAAAX,cACA4D,wBAAAS,GACAxlB,KAAA8mB,MAAA7jB,QAAAuiB,EAAA5V,kBAAmEwR,EAAA,EAAUhB,4BAE7E4E,eAAA7a,GAAAnK,KAAAwQ,KAA6C4Q,EAAA,EAAOd,eAAA,CACpD1D,MAAAzS,EAAAyS,MACAsK,KAAAlnB,KAAA8mB,MAAA3c,EAAAyS,2CC7NAniB,EAAAC,EAAAC,EAAA,sBAAAwsB,IAAA,IAAAC,EAAA3sB,EAAA,GAAA4sB,GAAA5sB,EAAA,IAAAA,EAAA,IAwDA,MAAA0sB,UAAuCC,EAAA,EAEvCxsB,wBACA,OAAWysB,EAAA,EAIXxsB,qBACA,OAAWwsB,EAAA,EAIXvsB,qBACA,OAAWusB,EAAA,EAIXrsB,oBACA,OAAWqsB,EAAA,EAQX3oB,4BACA,MAA6C,CAC7CK,SAAA,OACAC,YAAA,OACAyN,SAAA,OACA8V,UAAA,OACAC,YAAA,OACAC,WAAA,OACAC,qBAAA,OACAC,MAAA,OACAC,mBAAA,OACAK,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,sBAAA,OACAC,qBAAA,OACAC,kBAAA,OACAC,iBAAA,OACAC,mBAAA,SACAC,oBAAA,SACAC,oBAAA,SACAG,kBAAA,SACAE,gBAAA,SACAC,YAAA,OACAG,aAAA,QAKAxkB,YAAAC,GACAC,MAAAC,OAAAC,OAAAonB,EAAAzoB,eAAAkB,IAGAI,KAAAsnB,SAAA,EAEAtnB,KAAAunB,yBAAA,EAEAvnB,KAAAilB,0BAAA,EAEAjlB,KAAAwnB,oBAAA,EAEAxnB,KAAAynB,YAEAznB,KAAA0nB,cAAyBL,EAAA,EAAM/qB,UAE/B0D,KAAA2nB,cAAA,CAA0BtmB,IAAA,EAAAiU,MAAA,EAAA4O,OAAA,EAAA9iB,KAAA,GAE1BpB,KAAA4nB,UAAA,KAEA5nB,KAAA6nB,YAAA,EAEA7nB,KAAA8nB,iBAAA,EAEA9nB,KAAA+nB,kBAAA,EAEA/nB,KAAAgoB,UAAA,CAAsB5jB,EAAA,EAAAC,EAAA,GAGtB1E,OACA,MAAArE,KAAWA,EAAAD,QAAW8rB,EAAAvsB,WAEtB,IAAAoF,KAAA6B,SAAA4K,SAAAnR,GACA,UAAA2O,SAAyB3O,qCAGzB0E,KAAA6B,SAAA4K,SAAApR,KACA2E,KAAAsnB,SAAA,GAIA3nB,UACA8C,aAAAzC,KAAAunB,0BACA9kB,aAAAzC,KAAAilB,2BAEA5f,qBAAArF,KAAAwnB,qBAMA7nB,gBAAAsiB,GACAjiB,KAAA0nB,cAAAzF,EAMAtiB,gBAAAwiB,GACAniB,KAAA2nB,cAAAtmB,IAAA,iBAAA8gB,EAAA9gB,IAAA8gB,EAAA9gB,IAAA,EACArB,KAAA2nB,cAAArS,MAAA,iBAAA6M,EAAA7M,MAAA6M,EAAA7M,MAAA,EACAtV,KAAA2nB,cAAAzD,OAAA,iBAAA/B,EAAA+B,OAAA/B,EAAA+B,OAAA,EACAlkB,KAAA2nB,cAAAvmB,KAAA,iBAAA+gB,EAAA/gB,KAAA+gB,EAAA/gB,KAAA,EAOAzB,aAAAkiB,GACA7hB,KAAA8nB,gBAAAjG,EAOAliB,iBAAAsoB,GACAjoB,KAAA+nB,iBAAAE,EAQAtoB,oBAAAyE,EAAAC,GACArE,KAAAgoB,UAAA5jB,EAAApE,KAAAkoB,mBAAA9jB,KAAA,EACApE,KAAAgoB,UAAA3jB,EAAArE,KAAAkoB,mBAAA7jB,KAAA,EAIA1E,aAAA0iB,GACAriB,KAAA6nB,WAAAxF,EAOA1iB,gBAAA0K,GACA,MAAAqF,EAAArF,EAAA/G,OAEAtD,KAAA6B,SAAA6gB,qBAAAhT,IAIA1P,KAAA2hB,QAOAhiB,cAAA0K,GACA,MAAAxG,QAAWA,EAAAD,MAAAukB,YAAuB9d,EAGlC6a,EAAA,QAAAthB,GAAA,IAAAC,EADA,WAAAD,GAAA,KAAAC,EAIA7D,KAAA2hB,QACKuD,IACLllB,KAAA6B,SAAAwhB,yBAAA8E,GACAnoB,KAAA6B,SAAAyhB,oBACAjZ,EAAA6S,kBACOld,KAAA6B,SAAAuhB,yBAAA+E,IACPnoB,KAAA6B,SAAA0hB,mBACAlZ,EAAA6S,mBAQAvd,6BACA,IAAAyoB,EAAApoB,KAAA6B,SAAA4hB,sBACA,MAAA4E,EAAAroB,KAAA6B,SAAA6hB,sBACA4E,EAAAtoB,KAAA6B,SAAAgiB,oBACA0E,EAAAvoB,KAAA6B,SAAAkiB,kBAeA,OAbAqE,IACAA,EAAyC,CACzChkB,EAAApE,KAAAgoB,UAAA5jB,EACAC,EAAArE,KAAAgoB,UAAA3jB,EACAhD,IAAArB,KAAAgoB,UAAA3jB,EACA6f,OAAAlkB,KAAAgoB,UAAA3jB,EACAjD,KAAApB,KAAAgoB,UAAA5jB,EACAkR,MAAAtV,KAAAgoB,UAAA5jB,EACAhE,OAAA,EACAD,MAAA,IAIA,CACAkoB,WACAC,iBACAC,eACAC,iBAAA,CACAnnB,IAAA+mB,EAAA/mB,IACAiU,MAAA+S,EAAAloB,MAAAioB,EAAA9S,MACAlU,KAAAgnB,EAAAhnB,KACA8iB,OAAAmE,EAAAjoB,OAAAgoB,EAAAlE,QAEAuE,aAAAL,EAAAhoB,OACAsoB,YAAAN,EAAAjoB,MACAwoB,cAAA3oB,KAAAynB,YAAArnB,OACAwoB,aAAA5oB,KAAAynB,YAAAtnB,OASAR,mBAEA,IAAAsiB,EAAiBoF,EAAA,EAAMnrB,SAEvB,MAAAssB,iBAAWA,EAAAC,eAAAC,cAAAC,gBAAAC,gBAAyE5oB,KAAA4nB,UACpFiB,EAAA3f,QAAAlJ,KAAA0nB,cAAyDL,EAAA,EAASvrB,QAClEgtB,EAAAD,EAAAL,EAAAnnB,IAAAonB,EAAAzoB,KAAA2nB,cAAAzD,OACAsE,EAAAnnB,IAAArB,KAAA2nB,cAAAtmB,IAKA0nB,EAAAJ,GAJAE,EAAAL,EAAAtE,OAAAlkB,KAAA2nB,cAAAzD,OACAsE,EAAAtE,OAAAuE,EAAAzoB,KAAA2nB,cAAAtmB,KAIA0nB,EAAA,GAFAJ,EAAAG,EAEAC,IACA9G,GAAgBoF,EAAA,EAASvrB,QAGzB,MAAA6mB,EAAA3iB,KAAA6B,SAAA8gB,QACAqG,EAAA9f,QAAAlJ,KAAA0nB,cAAmDL,EAAA,EAASprB,UAC5DgtB,EAAA/f,QAAAlJ,KAAA0nB,cAAgEL,EAAA,EAASrrB,OACzEktB,EAAAD,IAAAtG,IACAsG,GAAAD,GAAArG,EAMAwG,EAAAP,GALAM,EAAAV,EAAApnB,KAAAsnB,EAAA1oB,KAAA2nB,cAAArS,MACAkT,EAAApnB,KAAApB,KAAA2nB,cAAAvmB,MAKAgoB,EAAAR,GAJAM,EAAAV,EAAAlT,MAAAtV,KAAA2nB,cAAArS,MACAkT,EAAAlT,MAAAoT,EAAA1oB,KAAA2nB,cAAAvmB,MAWA,OANA+nB,EAAA,GAAAD,GAAAvG,GACAsG,IAAAC,GAAAC,EAAA,GACAC,EAAA,GAAAD,EAAAC,KACAnH,GAAgBoF,EAAA,EAASrrB,OAGI,EAQ7B2D,2BAAAsiB,GACA,MAAAyG,YAAWA,GAAY1oB,KAAA4nB,UAEvByB,EAAAngB,QAAA+Y,EAA4CoF,EAAA,EAASrrB,OACrDitB,EAAA/f,QAAAlJ,KAAA0nB,cAAgEL,EAAA,EAASrrB,OAEzE,GAAAqtB,EAAA,CACA,MAAAC,EAAAL,EAAAP,EAAA1oB,KAAA2nB,cAAAvmB,KAAApB,KAAA2nB,cAAArS,MAKA,OAAAtV,KAAA8nB,iBAAA9nB,KAAA+nB,iBACAuB,GAAAtpB,KAAA4nB,UAAAS,SAAAloB,MAAAH,KAAA4nB,UAAAU,eAAAnoB,OAGAmpB,EAGA,OAAAL,EAAAP,EAAA1oB,KAAA2nB,cAAArS,MAAAtV,KAAA2nB,cAAAvmB,KAQAzB,yBAAAsiB,GACA,MAAAwG,aAAWA,GAAazoB,KAAA4nB,UACxBiB,EAAA3f,QAAA+Y,EAA6CoF,EAAA,EAASvrB,QACtDytB,EAAArgB,QAAAlJ,KAAA0nB,cAA8DL,EAAA,EAASvrB,QACvE,IAAAuI,EAAA,EAOA,OAJAA,EADAwkB,EACAU,EAAAd,EAAAzoB,KAAA2nB,cAAAtmB,KAAArB,KAAA2nB,cAAAzD,OAEAqF,EAAAd,EAAAzoB,KAAA2nB,cAAAzD,OAAAlkB,KAAA2nB,cAAAtmB,IAUA1B,yBAAAsiB,GACA,IAAAmC,EAAA,EACA,MAAAoE,iBAAWA,GAAiBxoB,KAAA4nB,UAC5BiB,EAAA3f,QAAA+Y,EAA6CoF,EAAA,EAASvrB,SACtDF,eAAWA,GAAeurB,EAAArsB,QAe1B,OAZA+tB,GACAzE,EAAAoE,EAAAnnB,IAAArB,KAAA2nB,cAAAtmB,IAAAzF,EACAoE,KAAA0nB,cAAiCL,EAAA,EAASvrB,SAC1CsoB,GAAApkB,KAAA4nB,UAAAa,gBAGArE,EAAAoE,EAAAtE,OAAAlkB,KAAA2nB,cAAAzD,OAAAlkB,KAAA4nB,UAAAa,aAAA7sB,EACAoE,KAAA0nB,cAA+BL,EAAA,EAASvrB,SACxCsoB,GAAApkB,KAAA4nB,UAAAa,eAIArE,EAIAzkB,gBAEAK,KAAA4nB,UAAA5nB,KAAAwpB,6BAEA,MAAAvH,EAAAjiB,KAAAypB,mBACAC,EAAA1pB,KAAA2pB,yBAAA1H,GACA2H,EAAA3H,EAAwCoF,EAAA,EAASvrB,OAAA,eACjD,IAAA+tB,EAAA5H,EAAwCoF,EAAA,EAASrrB,MAAA,eACjD,MAAA8tB,EAAA9pB,KAAA+pB,2BAAA9H,GACA+H,EAAAhqB,KAAAiqB,yBAAAhI,GACA,IAAAgC,EAAA,CACAtkB,CAAAkqB,GAAAC,GAAA,IACAnqB,CAAAiqB,GAAAI,GAAA,KAEA,MAAAtB,YAAWA,EAAAE,gBAA0B5oB,KAAA4nB,UAErCc,EAAAE,EAAqCvB,EAAA,EAAOxrB,qCAC5CguB,EAAA,WAIA7pB,KAAA8nB,iBAAA9nB,KAAA+nB,oBACA9D,EAAAjkB,KAAAkqB,iCAAAjG,IAGA,UAAAxS,KAAAwS,EACAA,EAAAkG,eAAA1Y,IAAA,MAAAwS,EAAAxS,KACAwS,EAAAxS,MAA4B2Y,SAAAnG,EAAAxS,GAAA,SAI5BzR,KAAA6B,SAAA+gB,sBAAwCiH,KAAuBD,KAC/D5pB,KAAA6B,SAAAmiB,YAAAC,GACAjkB,KAAA6B,SAAAsiB,aAAAuF,IAAA,SAGA1pB,KAAA4nB,UAAA,KAoBAjoB,iCAAAskB,GACA,MAAAsE,aAAWA,EAAAC,oBAA+BxoB,KAAA4nB,UAE1C,UAAAnW,KAAAwS,EACAA,EAAAkG,eAAA1Y,KAGA+W,EAAA2B,eAAA1Y,KACAwS,EAAAxS,GAAA2Y,SAAAnG,EAAAxS,GAAA,IAAA+W,EAAA/W,IAKAzR,KAAA+nB,mBACA,QAAAtW,EACAwS,EAAAxS,GAAA2Y,SAAAnG,EAAAxS,GAAA,IAAA8W,EAAAlkB,EACW,WAAAoN,EACXwS,EAAAxS,GAAA2Y,SAAAnG,EAAAxS,GAAA,IAAA8W,EAAAlkB,EACW,SAAAoN,EACXwS,EAAAxS,GAAA2Y,SAAAnG,EAAAxS,GAAA,IAAA8W,EAAAnkB,EACW,UAAAqN,IACXwS,EAAAxS,GAAA2Y,SAAAnG,EAAAxS,GAAA,IAAA8W,EAAAnkB,KAMA,OAAA6f,EAMAtkB,OACAK,KAAA6B,SAAAqhB,YAEAljB,KAAA6nB,YACA7nB,KAAA6B,SAAA9C,SAAAooB,EAAAvsB,WAAAO,gBAGA6E,KAAAwnB,oBAAAjlB,sBAAA,KACAvC,KAAA6B,SAAA9C,SAAAooB,EAAAvsB,WAAAS,MACA2E,KAAAynB,YAAAznB,KAAA6B,SAAA2hB,qBACAxjB,KAAAqqB,gBACArqB,KAAA6nB,WACA7nB,KAAA6B,SAAA4gB,aAEAziB,KAAAunB,yBAAAhjB,WAAA,KACAvE,KAAAunB,yBAAA,EACAvnB,KAAA6B,SAAA7C,YAAAmoB,EAAAvsB,WAAAO,gBACA6E,KAAA6B,SAAA4gB,cACW4E,EAAA,EAAO3rB,4BAGlBsE,KAAAsnB,SAAA,EAMA3nB,QACAK,KAAA6nB,YACA7nB,KAAA6B,SAAA9C,SAAAooB,EAAAvsB,WAAAM,kBAGAqH,sBAAA,KACAvC,KAAA6B,SAAA7C,YAAAmoB,EAAAvsB,WAAAS,MACA2E,KAAA6nB,WACA7nB,KAAA6B,SAAA2gB,cAEAxiB,KAAAilB,0BAAA1gB,WAAA,KACAvE,KAAAilB,0BAAA,EACAjlB,KAAA6B,SAAA7C,YAAAmoB,EAAAvsB,WAAAM,kBACA8E,KAAA6B,SAAA2gB,eACW6E,EAAA,EAAO1rB,6BAIlBqE,KAAAsnB,SAAA,EACAtnB,KAAAsqB,qBAQA3qB,sBACAK,KAAA6B,SAAAohB,aAAAjjB,KAAA6B,SAAA6gB,qBAAAzkB,SAAAiiB,iBACAlgB,KAAA6B,SAAAshB,eAKAxjB,SACA,OAAAK,KAAAsnB,QAUA3nB,mBAAA4qB,GACA,uBAAAA,GAAAC,SAAAD,8CCjde,WC3Ef,MAAA3vB,EAAA,CACAU,KAAA,aACAmvB,YAAA,0BACAC,MAAA,oBACArvB,KAAA,mBACAsvB,QAAA,sBACAC,QAAA,sBACAC,QAAA,uBAIAhwB,EAAA,CACAiwB,qBAAA,0BACAC,eAAA,oBACAC,YAAA,mBACAC,WAAA,oBCRA,MAAMC,UAAuCzsB,EAAA,EAE7C5D,qBACA,OAAWA,EAIXD,wBACA,OAAWA,EAGX8D,4BACA,MAAwC,CACxCK,SAAA,OACAC,YAAA,OACAyN,SAAA,OACA0e,gBAAA,OACA3I,YAAA,OACAC,WAAA,OACAS,UAAA,OACAC,aAAA,OACAiI,0BAAA,OACAC,UAAA,OACAC,aAAA,QAIA3rB,YAAAC,GACAC,MAAAC,OAAAC,OAAwBmrB,EAA8BxsB,eAAAkB,IAGtDI,KAAAurB,gBAAA,EAGAvrB,KAAAwrB,gBAAA,EAGA7rB,UACAK,KAAAurB,iBACAlmB,qBAAArF,KAAAurB,iBAEAvrB,KAAAwrB,iBACA/oB,aAAAzC,KAAAwrB,iBAOA7rB,OACAK,KAAAyhB,UAAAzhB,KAAAyrB,aAAAzrB,KAAA0rB,cAIA1rB,KAAA6B,SAAA9C,SAA2BnE,EAAUS,MACrC2E,KAAA6B,SAAA9C,SAA2BnE,EAAU+vB,SAGrC3qB,KAAA2rB,uBAAA,KACA3rB,KAAA6B,SAAA9C,SAA6BnE,EAAUgwB,WAGvC5qB,KAAA6B,SAAAqhB,aAMAvjB,SACAK,KAAAyhB,UAAAzhB,KAAAyrB,aAAAzrB,KAAA0rB,aAIA1rB,KAAA6B,SAAA9C,SAA2BnE,EAAUiwB,SAOrClrB,UAMAA,UAMAA,SACA,OAAAK,KAAA6B,SAAA4K,SAAkC7R,EAAUS,MAO5CsE,YACA,OAAAK,KAAA6B,SAAA4K,SAAkC7R,EAAUgwB,UAAA5qB,KAAA6B,SAAA4K,SAAoC7R,EAAU+vB,SAO1FhrB,YACA,OAAAK,KAAA6B,SAAA4K,SAAkC7R,EAAUiwB,SAO5ClrB,cAAA0K,GACA,MAAAxG,QAAWA,EAAAD,OAAayG,GAExB,WAAAzG,GAAA,KAAAC,IAEA7D,KAAA2hB,QAQAhiB,oBAAA0K,GACA,MAAAugB,QAAWA,EAAAC,UAAAxvB,OAAAsvB,UAAArvB,QAAyCV,EAGpDyP,EAAA/G,kBAAAsoB,SACA5rB,KAAA6B,SAAAspB,gBAAyE9gB,EAAA,OAAA/O,KAIzE0E,KAAA0rB,aACA1rB,KAAA6B,SAAA7C,YAAA3D,GACA2E,KAAA6B,SAAAshB,eACAnjB,KAAA6rB,SACA7rB,KAAA6B,SAAA2gB,gBAEAxiB,KAAA6B,SAAAupB,4BACAprB,KAAA8rB,SACA9rB,KAAA6B,SAAA4gB,cAGAziB,KAAA6B,SAAA7C,YAAA2rB,GACA3qB,KAAA6B,SAAA7C,YAAA4rB,GACA5qB,KAAA6B,SAAA7C,YAAA6rB,IAQAlrB,uBAAAosB,GACA1mB,qBAAArF,KAAAurB,iBACAvrB,KAAAurB,gBAAAhpB,sBAAA,KACAvC,KAAAurB,gBAAA,EACA9oB,aAAAzC,KAAAwrB,iBACAxrB,KAAAwrB,gBAAAjnB,WAAAwnB,EAAA,MAKe,IAAAC,EAAA,ECjJA,IAAAC,EAzBf,cAAuCD,EAKvCrsB,SACAK,KAAA6B,SAAAwpB,YAOA1rB,SACAK,KAAA6B,SAAAypB,eAMA3rB,mBACAK,KAAA2hB,2CClDAlnB,EAAAC,EAAAC,EAAA,sBAAAuxB,IAoCA,MAAMA,UAAkBC,EAAA,EAIxBxsB,eAAAwG,GACAtG,SAAAsG,GAGAnG,KAAA2gB,eAGA3gB,KAAA+gB,eAGA/gB,KAAAsZ,qBAGAtZ,KAAAosB,kBAGApsB,KAAAqsB,WAGArsB,KAAAssB,OAGAtsB,KAAAusB,kBAGAvsB,KAAAqmB,MAOA1mB,gBAAA2G,GACA,WAAe4lB,EAAS5lB,GAOxBkb,WACA,OAAAxhB,KAAAoJ,YAAAqY,SAOAD,SAAAC,GACAA,EACAzhB,KAAAoJ,YAAAoY,OAEAxhB,KAAAoJ,YAAAuY,QAIAhiB,WACA6sB,EAAuBC,EAAAC,EACvBjG,EAAA,CAAA/W,GAAA,IAA8BiX,EAAA,EAAOjX,KACrC,MAAAid,EAAuC3sB,KAAAmI,MAAAyH,kBAAkCmW,EAAA,EAAiBnrB,WAAAU,QAC1FqxB,IACA3sB,KAAAqmB,MAAAI,EAAAkG,GACA3sB,KAAAqmB,MAAAO,WAAA,GAEA5mB,KAAAosB,kBAAAI,EAGA7sB,qBACA,MAAA+qB,MAAWA,GAASsB,EAA8BpxB,WAElD,GAAAoF,KAAAmI,MAAAC,UAAAE,SAAAoiB,GAAA,CACA,MAAAK,eAAaA,GAAkBiB,EAA8BnxB,QAC7DmF,KAAAssB,OAAwCtsB,KAAAmI,MAAAgZ,cAAAvR,cAAAmb,GACxC/qB,KAAAusB,kBAAA,KAA0EvsB,KAAA,YAAA4sB,oBAC1E5sB,KAAAssB,OAAApuB,iBAAA,QAAA8B,KAAAusB,mBACAvsB,KAAAqsB,WCrFA,SAAAQ,EAAAL,EAA+DC,EAAAC,GAC/D,OAAAF,EAAAK,EAAA,CACAC,yBAAA,EACAC,cAAA,EACAC,mBAAA,EACAC,yBAAA,IDgFwBC,CAA4BltB,KAAAmI,MAAAnI,KAAAosB,mBAGpDpsB,KAAA+gB,eAAA,CAAA1W,GAAArK,KAAAoJ,YAAAkY,cAAAjX,IACArK,KAAAsZ,qBAAA,CAAAjP,GAAArK,KAAAoJ,YAAAoQ,oBAAAnP,IAEArK,KAAAmI,MAAAjK,iBAAA,UAAA8B,KAAA+gB,gBACA/gB,KAAAmI,MAAAjK,iBAAA,gBAAA8B,KAAAsZ,sBAGA3Z,UACAK,KAAAmI,MAAAM,oBAAA,UAAAzI,KAAA+gB,gBACA/gB,KAAAmI,MAAAM,oBAAA,gBAAAzI,KAAAsZ,sBAEAtZ,KAAAqmB,OACArmB,KAAAqmB,MAAAnc,UAGA,MAAAwgB,MAAWA,GAASsB,EAA8BpxB,WAClDoF,KAAAmI,MAAAC,UAAAE,SAAAoiB,KACA1qB,KAAAssB,OAAA7jB,oBAAA,QAAoEzI,KAAA,mBAEpEA,KAAAwhB,MAAA,GAIA7hB,uBAEA,MAAAC,EAAiDE,OAAAC,OAAA,CACjDhB,SAAA2I,GAAA1H,KAAAmI,MAAAC,UAAAC,IAAAX,GACA1I,YAAA0I,GAAA1H,KAAAmI,MAAAC,UAAAH,OAAAP,GACA+E,SAAA/E,GAAA1H,KAAAmI,MAAAC,UAAAE,SAAAZ,GACAyjB,gBAAA,CAAArJ,EAAApa,IAAAoa,EAAA1Z,UAAAE,SAAAZ,GACAwb,UAAA,KACAljB,KAAA2gB,eAAA1iB,SAAAiiB,eAEAiD,aAAA,KACA,MAAAgK,EAAAntB,KAAA2gB,gBAAA3gB,KAAA2gB,eAAAlO,MACAzS,KAAAmI,MAAAG,SAAArK,SAAAiiB,gBAAAiN,GACAntB,KAAA2gB,eAAAlO,SAGA2Y,0BAAA,KACA,MAAAgC,EAAAptB,KAAAmI,MAAAyH,kBAA6DmW,EAAA,EAAiBnrB,WAAAkQ,6BAC9EsiB,GACAA,EAAA3a,SAGA+P,YAAA,IAAAxiB,KAAAwQ,KAAmC3V,EAAOmwB,YAAA,IAAgB,GAC1DvI,WAAA,IAAAziB,KAAAwQ,KAAkC3V,EAAOowB,WAAA,IAAe,GACxDI,UAAA,IAAArrB,KAAAqsB,WAAA/iB,WACAgiB,aAAA,IAAAtrB,KAAAqsB,WAAA9iB,gBAGAkhB,YAAWA,EAAAC,SAAsBsB,EAA8BpxB,WAC/D,GAAAoF,KAAAmI,MAAAC,UAAAE,SAAAmiB,GACA,WAAiBuB,EAA8BpsB,GAC1C,GAAAI,KAAAmI,MAAAC,UAAAE,SAAAoiB,GACL,WAAiBuB,EAAwBrsB,GAEzC,UAAAqK,4EAC8EwgB,SAAmBC,uCEhLjG,IAAAtD,EAAA3sB,EAAA,GAAA4sB,GAAA5sB,EAAA,IAAAA,EAAA,IA2BA,MAAA4pB,EAAA,uCAEA,MAAAgJ,UAAgCjG,EAAA,EAEhCvsB,qBACA,OAAWwsB,EAAA,EAIXzsB,wBACA,OAAWysB,EAAA,EAQX3oB,4BACA,MAAsC,CACtC4uB,iBAAA,OACAC,uBAAA,OACAC,4BAAA,OACAC,+BAAA,OACAC,wBAAA,OACAC,2BAAA,OACAC,iBAAA,OACAC,+BAAA,OACAC,WAAA,OACAC,gBAAA,OACAC,mBAAA,OACAC,yBAAA,OACAC,iCAAA,QAOAvuB,YAAAC,GACAC,MAAAC,OAAAC,OAAAstB,EAAA3uB,eAAAkB,IAEAI,KAAAmuB,YAAA,EAEAnuB,KAAAouB,aAAA,EAEApuB,KAAAquB,wBAAA,EAEAruB,KAAAsuB,gBAAA,EAEAtuB,KAAAuuB,oBAAA,EAOA5uB,aAAAiJ,GACA5I,KAAAmuB,WAAAvlB,EAOAjJ,uBAAAiJ,GACA5I,KAAAouB,YAAAxlB,EAOAjJ,mBAAAiJ,GACA5I,KAAAquB,uBAAAzlB,EAOAjJ,qBAAA6uB,GACAxuB,KAAAuuB,mBAAAC,EAIA7uB,iBAAAid,GACAA,EAAA,GAAAA,GAAA5c,KAAA6B,SAAAyrB,qBAEAttB,KAAA6B,SAAAmsB,mBAAApR,GACA5c,KAAAyuB,8BAAA7R,GACK5c,KAAA6B,SAAAksB,gBAAAnR,GACL5c,KAAA0uB,2BAAA9R,IAEA5c,KAAA2uB,kCAAA/R,GACA5c,KAAA4uB,8BAAAhS,IAGA5c,KAAAsuB,gBAAA,GAAAtuB,KAAAsuB,iBAAA1R,EACA5c,KAAA6B,SAAA2rB,4BAAAxtB,KAAAsuB,eAAA,gBACK,IAAAtuB,KAAAsuB,gBAAA,IAAA1R,GAGL5c,KAAA6B,SAAA2rB,4BAAA,iBAGAxtB,KAAA6B,SAAA2rB,4BAAA5Q,EAAA,cAEA5c,KAAAsuB,eAAA1R,GAOAjd,8BAAAid,GACA,MAAAiS,EAAA7uB,KAAA6B,SAAAosB,yBAAArR,GAAA,eACA5c,KAAA6B,SAAA2rB,4BAAA5Q,EAAqDyK,EAAA,EAAOnc,aAAA2jB,GAO5DlvB,2BAAAid,GACA5c,KAAAsuB,gBAAA,GACAtuB,KAAA6B,SAAA2rB,4BAAAxtB,KAAAsuB,eAAqEjH,EAAA,EAAOnc,aAAA,SAG5ElL,KAAA6B,SAAA2rB,4BAAA5Q,EAAqDyK,EAAA,EAAOnc,aAAA,QAO5DvL,kCAAAid,GACA5c,KAAAsuB,gBAAA,GAAAtuB,KAAAsuB,iBAAA1R,GACA5c,KAAA6B,SAAA2rB,4BAAAxtB,KAAAsuB,eAAqEjH,EAAA,EAAOpc,cAAA,SAG5EjL,KAAA6B,SAAA2rB,4BAAA5Q,EAAqDyK,EAAA,EAAOpc,cAAA,QAO5DtL,8BAAAid,GACA,IAAAkS,EAA4BzH,EAAA,EAAUxc,yBAEtC7K,KAAAuuB,qBACAO,EAA0BzH,EAAA,EAAUvc,2BAGpC9K,KAAAsuB,gBAAA,GACAtuB,KAAA6B,SAAA8rB,2BAAA3tB,KAAAsuB,eAAAQ,GAGA9uB,KAAA6B,SAAA6rB,wBAAA9Q,EAAAkS,GAQAnvB,cAAA0K,EAAA0kB,GACAA,GAAA,GACA/uB,KAAA6B,SAAAgsB,+BAAAkB,EAAA,GASApvB,eAAA0K,EAAA0kB,GACAA,GAAA,GACA/uB,KAAA6B,SAAAgsB,+BAAAkB,GAAA,GAUApvB,cAAA0K,EAAA2kB,EAAAD,GACA,MAAAE,EAAA,cAAA5kB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACAqrB,EAAA,YAAA7kB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACAsrB,EAAA,eAAA9kB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACAurB,EAAA,cAAA/kB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACAwrB,EAAA,SAAAhlB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACAyrB,EAAA,QAAAjlB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACA0rB,EAAA,UAAAllB,EAAAzG,KAAA,KAAAyG,EAAAxG,QACA2rB,EAAA,UAAAnlB,EAAAzG,KAAA,KAAAyG,EAAAxG,QAEA,IAAA4rB,EAAAzvB,KAAA6B,SAAA0rB,yBACA,UAAAkC,IACAA,EAAAV,GACA,GAOA,GAAA/uB,KAAAouB,aAAAgB,IAAApvB,KAAAouB,aAAAe,EACAnvB,KAAAulB,qBAAAlb,GACArK,KAAA0vB,iBAAAD,QACK,GAAAzvB,KAAAouB,aAAAc,IAAAlvB,KAAAouB,aAAAa,EACLjvB,KAAAulB,qBAAAlb,GACArK,KAAA2vB,iBAAAF,QACK,GAAAJ,EACLrvB,KAAAulB,qBAAAlb,GACArK,KAAAsjB,yBACK,GAAAgM,EACLtvB,KAAAulB,qBAAAlb,GACArK,KAAAujB,wBACK,IAAAgM,GAAAC,IACLR,EAAA,CACAhvB,KAAAquB,wBAEAruB,KAAAulB,qBAAAlb,GAGA,MAAAulB,EAAA5vB,KAAA6vB,2BAAAd,GACAa,IACA5vB,KAAA8vB,8BAAAf,GACA/uB,KAAAulB,qBAAAlb,KAGArK,KAAAquB,wBAAAuB,IACA5vB,KAAA+vB,iBAAAN,GAIAzvB,KAAA6B,SAAAisB,WAAA2B,IAUA9vB,YAAAid,EAAAoT,IACA,IAAApT,IAEAoT,GACAhwB,KAAA8vB,8BAAAlT,IAGA5c,KAAAquB,wBAAAruB,KAAA6vB,2BAAAjT,KACA5c,KAAA+vB,iBAAAnT,IAUAjd,qBAAA0K,GACA,MAAA4b,KAAuB5b,EAAA/G,OAAA2iB,UAAmBC,eAC1C,IAAA7B,EAAAphB,QAAAgjB,IACA5b,EAAA6S,iBAQAvd,iBAAAid,GAEA,IAAAgB,EAAAhB,EAAA,EACA,GAAAgB,GAFA5d,KAAA6B,SAAAyrB,mBAEA,CACA,IAAAttB,KAAAmuB,WAIA,OAHAvQ,EAAA,EAMA5d,KAAA6B,SAAA+rB,iBAAAhQ,GAOAje,iBAAAid,GACA,IAAAqT,EAAArT,EAAA,EACA,GAAAqT,EAAA,GACA,IAAAjwB,KAAAmuB,WAIA,OAHA8B,EAAAjwB,KAAA6B,SAAAyrB,mBAAA,EAMAttB,KAAA6B,SAAA+rB,iBAAAqC,GAGAtwB,oBACAK,KAAA6B,SAAAyrB,mBAAA,GACAttB,KAAA6B,SAAA+rB,iBAAA,GAIAjuB,mBACA,MAAAuwB,EAAAlwB,KAAA6B,SAAAyrB,mBAAA,EACA4C,GAAA,GACAlwB,KAAA6B,SAAA+rB,iBAAAsC,GASAvwB,8BAAAid,GACA,IAAA5c,KAAA6vB,2BAAAjT,GAAA,OAEA,IAAAuT,GAAA,EACAnwB,KAAA6B,SAAAmsB,mBAAApR,KACAuT,GAAAnwB,KAAA6B,SAAAosB,yBAAArR,IAGA5c,KAAA6B,SAAAqsB,iCAAAtR,EAAAuT,GAOAxwB,2BAAAid,GACA,OAAA5c,KAAA6B,SAAAmsB,mBAAApR,IAAA5c,KAAA6B,SAAAksB,gBAAAnR,IAIejiB,EAAA,4BCvXf,IAAAy1B,EAAe31B,EAAQ,IACvB41B,EAAY51B,EAAQ,IAEpB61B,EAAA,KA+QA,SAAAC,EAAAC,GACA,OAAAjsB,WAAAisB,EAAA,GAGAC,EAAAC,QAjRA,SAAA5O,EAAA6O,GACA,IAAAC,EAAA3yB,SACA4yB,EACA,iBAAA/O,EAAA8O,EAAAhhB,cAAAkS,KAEAgP,EAAAT,EACA,CACApD,yBAAA,EACAD,mBAAA,GAEA2D,GAGAxrB,EAAA,CACA4rB,kBAAA,KACAC,iBAAA,KACAC,4BAAA,KACAC,wBAAA,KACA5c,QAAA,EACA6c,QAAA,GAGAC,EAAA,CACA9nB,SAQA,SAAA+nB,GACA,IAAAlsB,EAAAmP,OAAA,CAEAgd,IAEAnsB,EAAAmP,QAAA,EACAnP,EAAAgsB,QAAA,EACAhsB,EAAA8rB,4BAAAL,EAAA1Q,cAEA,IAAAqR,EACAF,KAAAE,WACAF,EAAAE,WACAT,EAAAS,WAMA,OALAA,GACAA,IAGAC,IACAJ,IAzBA7nB,aACAkoB,MAuDA,YACAtsB,EAAAgsB,QAAAhsB,EAAAmP,SACAnP,EAAAgsB,QAAA,EACAO,MAzDAC,QA4DA,WACAxsB,EAAAgsB,QAAAhsB,EAAAmP,SACAnP,EAAAgsB,QAAA,EACAK,OA5DA,OAAAJ,EAuBA,SAAA7nB,EAAAqoB,GACA,GAAAzsB,EAAAmP,OAAA,CAEAod,IACAvsB,EAAAmP,QAAA,EACAnP,EAAAgsB,QAAA,EAEA,IAAAU,EACAD,QAAA7zB,IAAA6zB,EAAAC,aACAD,EAAAC,aACAf,EAAAe,aAeA,OAdAA,GACAA,KAIAD,QAAA7zB,IAAA6zB,EAAAE,YACAF,EAAAE,YACAhB,EAAA7D,0BAEAsD,EAAA,WACAwB,EAAA5sB,EAAA8rB,+BAIAG,GAeA,SAAAI,IACA,GAAArsB,EAAAmP,OAqBA,OAlBAgc,GACAA,EAAAmB,QAEAnB,EAAAc,EAEAE,IAIAf,EAAA,WACAwB,EAAAC,OAEApB,EAAA1yB,iBAAA,UAAA+zB,GAAA,GACArB,EAAA1yB,iBAAA,YAAAg0B,GAAA,GACAtB,EAAA1yB,iBAAA,aAAAg0B,GAAA,GACAtB,EAAA1yB,iBAAA,QAAAi0B,GAAA,GACAvB,EAAA1yB,iBAAA,UAAAk0B,GAAA,GAEAhB,EAGA,SAAAM,IACA,GAAAvsB,EAAAmP,QAAAgc,IAAAc,EAUA,OARAR,EAAAnoB,oBAAA,UAAAwpB,GAAA,GACArB,EAAAnoB,oBAAA,YAAAypB,GAAA,GACAtB,EAAAnoB,oBAAA,aAAAypB,GAAA,GACAtB,EAAAnoB,oBAAA,QAAA0pB,GAAA,GACAvB,EAAAnoB,oBAAA,UAAA2pB,GAAA,GAEA9B,EAAA,KAEAc,EAGA,SAAAiB,EAAAC,GACA,IAAAC,EAAAzB,EAAAwB,GACA9qB,EAAA+qB,EACA,IAAAA,EACA,YAEA,oBAAAA,KACA/qB,EAAAopB,EAAAhhB,cAAA2iB,IAEA,UAAAtoB,MAAA,IAAAqoB,EAAA,6BAGA,sBAAAC,KACA/qB,EAAA+qB,KAEA,UAAAtoB,MAAA,IAAAqoB,EAAA,2BAGA,OAAA9qB,EAGA,SAAAwqB,IACA,IAAAxqB,EASA,KAPAA,EADA,OAAA6qB,EAAA,gBACAA,EAAA,gBACKxB,EAAAvoB,SAAAsoB,EAAA1Q,eACL0Q,EAAA1Q,cAEA/a,EAAA4rB,mBAAAsB,EAAA,kBAIA,UAAApoB,MACA,sEAIA,OAAAzC,EAKA,SAAA0qB,EAAA9zB,GACAyyB,EAAAvoB,SAAAlK,EAAAkF,UACAwtB,EAAAhE,wBACAvjB,EAAA,CACAuoB,aAAA1B,EAAAoC,YAAAp0B,EAAAkF,UAGAlF,EAAA8e,kBAKA,SAAA+U,EAAA7zB,GAEAyyB,EAAAvoB,SAAAlK,EAAAkF,SAAAlF,EAAAkF,kBAAAmvB,WAGAr0B,EAAAs0B,2BACAX,EAAA5sB,EAAA+rB,yBAAAc,MAGA,SAAAI,EAAAh0B,GACA,QAAA0yB,EAAA9D,mBAkEA,SAAA5uB,GACA,iBAAAA,EAAAwF,KAAA,QAAAxF,EAAAwF,KAAA,KAAAxF,EAAAyF,QAnEA8uB,CAAAv0B,GAGA,OAFAA,EAAA8e,sBACA3T,KAoEA,SAAAnL,GACA,cAAAA,EAAAwF,KAAA,IAAAxF,EAAAyF,SAlEA+uB,CAAAx0B,IAUA,SAAAA,GAEA,GADAkzB,IACAlzB,EAAA+pB,UAAA/pB,EAAAkF,SAAA6B,EAAA4rB,kBAGA,OAFA3yB,EAAA8e,sBACA6U,EAAA5sB,EAAA6rB,kBAGA5yB,EAAA+pB,UAAA/pB,EAAAkF,SAAA6B,EAAA6rB,mBACA5yB,EAAA8e,iBACA6U,EAAA5sB,EAAA4rB,oBAlBA8B,CAAAz0B,GAuBA,SAAA+zB,EAAA/zB,GACA0yB,EAAAhE,yBACA+D,EAAAvoB,SAAAlK,EAAAkF,UACAlF,EAAA8e,iBACA9e,EAAAs0B,4BAGA,SAAApB,IACA,IAAAwB,EAAA1C,EAAAS,GACA1rB,EAAA4rB,kBAAA+B,EAAA,IAAAd,IACA7sB,EAAA6rB,iBACA8B,IAAA1vB,OAAA,IAAA4uB,IAGA,SAAAD,EAAAvqB,GACAA,IAAAopB,EAAA1Q,gBACA1Y,KAAAiL,OAKAjL,EAAAiL,QACAtN,EAAA+rB,wBAAA1pB,EAOA,SAAAA,GACA,OACAA,EAAAye,SACA,UAAAze,EAAAye,QAAAC,eACA,mBAAA1e,EAAAurB,OAVAC,CAAAxrB,IACAA,EAAAurB,UAPAhB,EAAAC,+DCjMA,SAAAiB,EAAAnR,EAAApI,GAIA,OAHAoI,EAAAmR,SACAnR,EAAAoR,uBACApR,EAAAqR,mBACApjB,KAAA+R,EAAApI,cCzDAjf,EAAAC,EAAAC,EAAA,sBAAAy4B,IAgCA,MAAMA,UAAgBltB,EAAA,EAEtBvG,eAAAwG,GACAtG,SAAAsG,GAEAnG,KAAA+gB,eAEA/gB,KAAAuT,aAEAvT,KAAAqzB,sBAEArzB,KAAAszB,uBAOA3zB,gBAAA2G,GACA,WAAe8sB,EAAO9sB,GAGtB3G,UACAK,KAAAmI,MAAAM,oBAAA,UAAAzI,KAAA+gB,gBACA/gB,KAAAmI,MAAAM,oBAAA,QAAAzI,KAAAuT,cACAvT,KAAAmI,MAAAM,oBAAA,UAAAzI,KAAAqzB,uBACArzB,KAAAmI,MAAAM,oBAAA,WAAAzI,KAAAszB,wBAGA3zB,qBACAK,KAAAuT,aAAAvT,KAAAuzB,kBAAAzf,KAAA9T,MACAA,KAAA+gB,eAAA/gB,KAAAwzB,oBAAA1f,KAAA9T,MACAA,KAAAqzB,sBAAArzB,KAAAyzB,oBAAA3f,KAAA9T,MACAA,KAAAszB,uBAAAtzB,KAAA0zB,qBAAA5f,KAAA9T,MACAA,KAAAmI,MAAAjK,iBAAA,UAAA8B,KAAA+gB,gBACA/gB,KAAAmI,MAAAjK,iBAAA,UAAA8B,KAAAqzB,uBACArzB,KAAAmI,MAAAjK,iBAAA,WAAA8B,KAAAszB,wBACAtzB,KAAAmI,MAAAjK,iBAAA,QAAA8B,KAAAuT,cACAvT,KAAAkB,SACAlB,KAAA2zB,qBAGAh0B,SACA,MAAAi0B,EAAA5zB,KAAAmI,MAAA0rB,aAA8CzS,EAAA,EAAOrW,kBACrD/K,KAAA8zB,SAAAF,IAAkCxS,EAAA,EAAOpW,4BAGzC,GAAA8E,MAAAC,KAAA/P,KAAAmI,MAAA6H,iBAAA,mCACAnN,QAAAkxB,IACAA,EAAA7f,aAAA,iBAIA,GAAApE,MAAAC,KAAA/P,KAAAmI,MAAA6H,iBAA8CoR,EAAA,EAAO5V,2BACrD3I,QAAAkxB,KAAA7f,aAAA,gBASAvU,kBAAA0K,GACA,IAAA2pB,EAA6C3pB,EAAA,OAC7CuS,GAAA,EAGA,MAAAoX,EAAA5rB,UAAAE,SAA2C8Y,EAAA,EAAUxW,mBACrDopB,EAAA5rB,UAAAE,SAAuC8Y,EAAA,EAAU9lB,OACjD04B,IAAA7S,cAQA,OAJA6S,EAAA5rB,UAAAE,SAAuC8Y,EAAA,EAAUxW,mBACjDgS,EAAA5c,KAAA+mB,aAAA9jB,QAAA+wB,IAGApX,EAQAjd,oBAAA0K,GACA,MAAAuS,EAAA5c,KAAAi0B,kBAAA5pB,GACArK,KAAAoJ,YAAA8qB,cAAA7pB,EAAAuS,GAQAjd,qBAAA0K,GACA,MAAAuS,EAAA5c,KAAAi0B,kBAAA5pB,GACArK,KAAAoJ,YAAA+qB,eAAA9pB,EAAAuS,GASAjd,oBAAA0K,GACA,MAAAuS,EAAA5c,KAAAi0B,kBAAA5pB,GAEAuS,GAAA,GACA5c,KAAAoJ,YAAAkY,cAAAjX,IAAA/G,OAAA8E,UAAAE,SAAwE8Y,EAAA,EAAUxW,iBAAAgS,GASlFjd,kBAAA0K,GACA,MAAAuS,EAAA5c,KAAAi0B,kBAAA5pB,GAGA2lB,GAA4BiD,EAA4B5oB,EAAA,OAAkB+W,EAAA,EAAO9V,yBACjFtL,KAAAoJ,YAAAyK,YAAA+I,EAAAoT,GAGArwB,qBAEA,MAAAy0B,EAAAp0B,KAAAmI,MAAAyH,kBAA4DwR,EAAA,EAAUtW,wCAC3DsW,EAAA,EAAUvW,sCACXuW,EAAA,EAAOjW,+BAEjBipB,IACAA,EAAAhsB,UAAAE,SAAgD8Y,EAAA,EAAUtW,4BAC1D9K,KAAAoJ,YAAAirB,sBAAA,GAGAr0B,KAAAs0B,iBAAA,EAGAt0B,KAAA4lB,cAAA5lB,KAAA+mB,aAAA9jB,QAAAmxB,IAKAN,aAAAlrB,GACA5I,KAAAoJ,YAAAmrB,uBAAA3rB,GAIAme,mBACA,SAAAjX,MAAAC,KAAA/P,KAAAmI,MAAA6H,iBAAqDoR,EAAA,EAAO3V,yBAI5Dmb,cAAAhe,GACA5I,KAAAoJ,YAAAorB,aAAA5rB,GAIA0rB,oBAAAG,GACAz0B,KAAAoJ,YAAAsrB,mBAAAD,GAIA7O,kBAAAhJ,GACA5c,KAAAoJ,YAAA2mB,iBAAAnT,GAIAjd,uBACA,WAAelB,EAAA,EAA6CqB,OAAAC,OAAA,CAC5DutB,iBAAA,IAAAttB,KAAA+mB,aAAA3jB,OACAmqB,uBAAA,IAAAvtB,KAAA+mB,aAAA9jB,QAAAhF,SAAAiiB,eACAsN,4BAAA,CAAA5Q,EAAA3I,EAAArL,KACA,MAAAkZ,EAAA9hB,KAAA+mB,aAAAnK,GACAkF,GACAA,EAAA5N,aAAAD,EAAArL,IAGA6kB,+BAAA,CAAA7Q,EAAA3I,KACA,MAAA6N,EAAA9hB,KAAA+mB,aAAAnK,GACAkF,GACAA,EAAAmF,gBAAAhT,IAGAyZ,wBAAA,CAAA9Q,EAAAlV,KACA,MAAAoa,EAAA9hB,KAAA+mB,aAAAnK,GACAkF,GACAA,EAAA1Z,UAAAC,IAAAX,IAGAimB,2BAAA,CAAA/Q,EAAAlV,KACA,MAAAoa,EAAA9hB,KAAA+mB,aAAAnK,GACAkF,GACAA,EAAA1Z,UAAAH,OAAAP,IAGAkmB,iBAAAhR,IACA,MAAAkF,EAAA9hB,KAAA+mB,aAAAnK,GACAkF,GACAA,EAAArP,SAGAob,+BAAA,CAAAkB,EAAA4F,KACA,MAAA7S,EAAA9hB,KAAA+mB,aAAAgI,GACA,GAAAjf,MAAAC,KAAA+R,EAAA9R,iBAAwEoR,EAAA,EAAO7V,oCAC/E1I,QAAAkxB,KAAA7f,aAAA,WAAAygB,KAEA7G,WAAAlR,IACA,MAAAwI,EAAAplB,KAAA+mB,aAAAnK,GACAwI,KAAAwP,MACAxP,EAAAyP,SAGA7G,mBAAApR,IAEA,QADA5c,KAAA+mB,aAAAnK,GACAhN,cAAwCwR,EAAA,EAAO/V,oBAE/C0iB,gBAAAnR,IAEA,QADA5c,KAAA+mB,aAAAnK,GACAhN,cAAwCwR,EAAA,EAAOhW,iBAE/C6iB,yBAAArR,IAGA,OAFA5c,KAAA+mB,aAAAnK,GACAhN,cAAgDwR,EAAA,EAAO/V,mBACvDypB,SAEA5G,iCAAA,CAAAtR,EAAAuT,KACA,MACA4E,EADA/0B,KAAA+mB,aAAAnK,GACAhN,cAAgDwR,EAAA,EAAO9V,yBACvDypB,EAAAD,QAAA3E,EAEA,MAAArsB,EAAA7F,SAAAwM,YAAA,SACA3G,EAAAkxB,UAAA,gBACAD,EAAApqB,cAAA7G,uGC7QA,IAAAmxB,EAAA,CACA,QACA,SACA,WACA,UACA,SACA,aACA,kBACA,kBACA,oDAEAC,EAAAD,EAAAE,KAAA,KAEAlC,EAAA,oBAAArH,QACA,aACAA,QAAA3kB,UAAAgsB,SAAArH,QAAA3kB,UAAAksB,mBAAAvH,QAAA3kB,UAAAisB,sBAEA,SAAA9C,EAAA1gB,EAAA0lB,GACAA,KAAA,GAEA,IAcAvuB,EAAAwuB,EAAAC,EAbAC,EAAA,GACAC,EAAA,GAEAC,EAAA,IAAAC,EAJAhmB,EAAAimB,eAAAjmB,GAKAkmB,EAAAlmB,EAAAM,iBAAAklB,GAUA,IARAE,EAAAS,kBACA5C,EAAAljB,KAAAL,EAAAwlB,KACAU,EAAAE,MAAA7uB,UAAA6I,MAAAimB,MAAAH,IACAI,QAAAtmB,GAKA7I,EAAA,EAAaA,EAAA+uB,EAAAxyB,OAAuByD,IAGpCovB,EAFAZ,EAAAO,EAAA/uB,GAEA4uB,KAGA,KADAH,EAAAY,EAAAb,IAEAE,EAAA/xB,KAAA6xB,GAEAG,EAAAhyB,KAAA,CACA2yB,cAAAtvB,EACAuvB,SAAAd,EACA9tB,KAAA6tB,KAUA,OALAG,EACAa,KAAAC,GACArmB,IAAA,SAAAyc,GAAsB,OAAAA,EAAAllB,OACtB+uB,OAAAhB,GAQA,SAAAU,EAAAzuB,EAAAiuB,GACA,SACAe,EAAAhvB,EAAAiuB,IAsEA,SAAAjuB,GACA,OALA,SAAAA,GACA,OAAAivB,EAAAjvB,IAAA,UAAAA,EAAA1E,KAIA4zB,CAAAlvB,KAWA,SAAAA,GACA,IAAAA,EAAAmvB,KAAA,SAGA,IACA7B,EAbA,SAAA8B,GACA,QAAA/vB,EAAA,EAAiBA,EAAA+vB,EAAAxzB,OAAkByD,IACnC,GAAA+vB,EAAA/vB,GAAAiuB,QACA,OAAA8B,EAAA/vB,GAUAgwB,CADArvB,EAAAmuB,cAAA3lB,iBAAA,6BAAAxI,EAAAmvB,KAAA,OAEA,OAAA7B,OAAAttB,EAjBAsvB,CAAAtvB,GAtEAuvB,CAAAvvB,IACA0uB,EAAA1uB,GAAA,GAaA,SAAAgvB,EAAAhvB,EAAAiuB,GAEA,OADAA,KAAA,IAAAC,EAAAluB,EAAAmuB,eAAAnuB,KAEAA,EAAApB,UA4CA,SAAAoB,GACA,OAAAivB,EAAAjvB,IAAA,WAAAA,EAAA1E,KA5CAk0B,CAAAxvB,IACAiuB,EAAAwB,cAAAzvB,IAzBA4oB,EAAA8G,WAcA,SAAA1vB,EAAAiuB,GACA,IAAAjuB,EAAA,UAAAyC,MAAA,oBACA,WAAAgpB,EAAAljB,KAAAvI,EAAA0tB,IACAe,EAAAzuB,EAAAiuB,IAhBArF,EAAAoC,YAgCA,SAAAhrB,EAAAiuB,GACA,IAAAjuB,EAAA,UAAAyC,MAAA,oBACA,WAAAgpB,EAAAljB,KAAAvI,EAAA2vB,IACAX,EAAAhvB,EAAAiuB,IAJA,IAAA0B,EAAAlC,EAAAsB,OAAA,UAAApB,KAAA,KAOA,SAAAe,EAAA1uB,GACA,IAAA4vB,EAAAhN,SAAA5iB,EAAAqsB,aAAA,gBACA,OAAAwD,MAAAD,GAkBA,SAAA5vB,GACA,eAAAA,EAAA8vB,gBAhBAC,CAAA/vB,GAAA,EACAA,EAAA4uB,SAJAgB,EAOA,SAAAd,EAAA5J,EAAA8K,GACA,OAAA9K,EAAA0J,WAAAoB,EAAApB,SAAA1J,EAAAyJ,cAAAqB,EAAArB,cAAAzJ,EAAA0J,SAAAoB,EAAApB,SAcA,SAAAK,EAAAjvB,GACA,gBAAAA,EAAAye,QAkCA,SAAAyP,EAAA+B,GACAz3B,KAAA4wB,IAAA6G,EAIAz3B,KAAA03B,MAAA,GAKAhC,EAAAzuB,UAAA0wB,eAAA,SAAAnwB,EAAAowB,GACA,GAAApwB,IAAAxH,KAAA4wB,IAAAloB,gBAAA,SAGA,IAAAmvB,EA3DA,SAAAlR,EAAAmR,GACA,QAAAjxB,EAAA,EAAAzD,EAAAujB,EAAAvjB,OAAuCyD,EAAAzD,EAAYyD,IACnD,GAAAixB,EAAAnR,EAAA9f,IAAA,OAAA8f,EAAA9f,GAyDAkxB,CAAA/3B,KAAA03B,MAAA,SAAAxQ,GACA,OAAAA,IAAA1f,IAEA,GAAAqwB,EAAA,OAAAA,EAAA,GAIA,IAAAG,GAAA,EAUA,MARA,UAJAJ,KAAA53B,KAAA4wB,IAAAqH,YAAAnwB,iBAAAN,IAIA0wB,QACAF,GAAA,EACKxwB,EAAA2wB,aACLH,EAAAh4B,KAAA23B,eAAAnwB,EAAA2wB,aAGAn4B,KAAA03B,MAAAl0B,KAAA,CAAAgE,EAAAwwB,IAEAA,GAGAtC,EAAAzuB,UAAAgwB,cAAA,SAAAzvB,GACA,GAAAA,IAAAxH,KAAA4wB,IAAAloB,gBAAA,SACA,IAAAb,EAAA7H,KAAA4wB,IAAAqH,YAAAnwB,iBAAAN,GACA,QAAAxH,KAAA23B,eAAAnwB,EAAAK,IACA,WAAAA,EAAAuwB,YAGA3H,EAAAC,QAAAN,iBCvMAK,EAAAC,QAIA,WAGA,IAFA,IAAAptB,EAAA,GAEAuD,EAAA,EAAmBA,EAAAwxB,UAAAj1B,OAAsByD,IAAA,CACzC,IAAAyxB,EAAAD,UAAAxxB,GAEA,QAAAjD,KAAA00B,EACAnO,EAAApa,KAAAuoB,EAAA10B,KACAN,EAAAM,GAAA00B,EAAA10B,IAKA,OAAAN,GAfA,IAAA6mB,EAAArqB,OAAAmH,UAAAkjB","file":"vendors~about~apply~forum~home~roster~system.js","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface',\n};\n\n/** @enum {string} */\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled=\"true\"]), input:not(:disabled), ' +\n  'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Total duration of menu-surface open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu-surface close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n\n    this.scrollHandler_ = () => {};\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  initScrollHandler() {\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroyScrollHandler() {\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from '../constants';\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarFoundation from '../foundation';\n\n/**\n * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}\n * @final\n */\nclass MDCFixedTopAppBarFoundation extends MDCTopAppBarFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /** State variable for the previous scroll iteration top app bar state */\n    this.wasScrolled_ = false;\n\n    this.scrollHandler_ = () => this.fixedScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  /**\n   * Scroll handler for applying/removing the modifier class\n   * on the fixed top app bar.\n   */\n  fixedScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.wasScrolled_) {\n        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = false;\n      }\n    } else {\n      if (!this.wasScrolled_) {\n        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = true;\n      }\n    }\n  }\n}\n\nexport default MDCFixedTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {numbers} from '../constants';\n\nconst INITIAL_VALUE = 0;\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}\n * @final\n */\nclass MDCTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /**\n     * Used for diffs of current scroll position vs previous scroll position\n     * @private {number}\n     */\n    this.lastScrollPosition_ = this.adapter_.getViewportScrollY();\n\n    /**\n     * Used to verify when the top app bar is completely showing or completely hidden\n     * @private {number}\n     */\n    this.topAppBarHeight_ = this.adapter_.getTopAppBarHeight();\n\n    /**\n     * wasDocked_ is used to indicate if the top app bar was docked in the previous\n     * scroll handler iteration.\n     * @private {boolean}\n     */\n    this.wasDocked_ = true;\n\n    /**\n     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully\n     * shown position.\n     * @private {boolean}\n     */\n    this.isDockedShowing_ = true;\n\n    /**\n     * Variable for current scroll position of the top app bar\n     * @private {number}\n     */\n    this.currentAppBarOffsetTop_ = 0;\n\n    /**\n     * Used to prevent the top app bar from being scrolled out of view during resize events\n     * @private {boolean} */\n    this.isCurrentlyBeingResized_ = false;\n\n    /**\n     * The timeout that's used to throttle the resize events\n     * @private {number}\n     */\n    this.resizeThrottleId_ = INITIAL_VALUE;\n\n    /**\n     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize\n     * @private {number}\n     */\n    this.resizeDebounceId_ = INITIAL_VALUE;\n\n    this.scrollHandler_ = () => this.topAppBarScrollHandler_();\n    this.resizeHandler_ = () => this.topAppBarResizeHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.setStyle('top', '');\n  }\n\n  /**\n   * Function to determine if the DOM needs to update.\n   * @return {boolean}\n   * @private\n   */\n  checkForUpdate_() {\n    const offscreenBoundaryTop = -this.topAppBarHeight_;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked_ = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked_) {\n        this.wasDocked_ = true;\n        return true;\n      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing_ = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  /**\n   * Function to move the top app bar if needed.\n   * @private\n   */\n  moveTopAppBar_() {\n    if (this.checkForUpdate_()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop_;\n      if (Math.abs(offset) >= this.topAppBarHeight_) {\n        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.adapter_.setStyle('top', offset + 'px');\n    }\n  }\n\n  /**\n   * Scroll handler for the default scroll behavior of the top app bar.\n   * @private\n   */\n  topAppBarScrollHandler_() {\n    const currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition_;\n    this.lastScrollPosition_ = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized_) {\n      this.currentAppBarOffsetTop_ -= diff;\n\n      if (this.currentAppBarOffsetTop_ > 0) {\n        this.currentAppBarOffsetTop_ = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {\n        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;\n      }\n\n      this.moveTopAppBar_();\n    }\n  }\n\n  /**\n   * Top app bar resize handler that throttle/debounce functions that execute updates.\n   * @private\n   */\n  topAppBarResizeHandler_() {\n    // Throttle resize events 10 p/s\n    if (!this.resizeThrottleId_) {\n      this.resizeThrottleId_ = setTimeout(() => {\n        this.resizeThrottleId_ = INITIAL_VALUE;\n        this.throttledResizeHandler_();\n      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    }\n\n    this.isCurrentlyBeingResized_ = true;\n\n    if (this.resizeDebounceId_) {\n      clearTimeout(this.resizeDebounceId_);\n    }\n\n    this.resizeDebounceId_ = setTimeout(() => {\n      this.topAppBarScrollHandler_();\n      this.isCurrentlyBeingResized_ = false;\n      this.resizeDebounceId_ = INITIAL_VALUE;\n    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n  }\n\n  /**\n   * Throttled function that updates the top app bar scrolled values if the\n   * top app bar height changes.\n   * @private\n   */\n  throttledResizeHandler_() {\n    const currentHeight = this.adapter_.getTopAppBarHeight();\n    if (this.topAppBarHeight_ !== currentHeight) {\n      this.wasDocked_ = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;\n      this.topAppBarHeight_ = currentHeight;\n    }\n    this.topAppBarScrollHandler_();\n  }\n}\n\nexport default MDCTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCComponent from '@material/base/component';\nimport {MDCRipple} from '@material/ripple/index';\nimport {cssClasses, strings} from './constants';\nimport MDCTopAppBarBaseFoundation from './foundation';\nimport MDCFixedTopAppBarFoundation from './fixed/foundation';\nimport MDCShortTopAppBarFoundation from './short/foundation';\nimport MDCTopAppBarFoundation from './standard/foundation';\n\n/**\n * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}\n * @final\n */\nclass MDCTopAppBar extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @private {?Element} */\n    this.navIcon_;\n    /** @type {?Array<MDCRipple>} */\n    this.iconRipples_;\n    /** @type {Object} */\n    this.scrollTarget_;\n  }\n\n  initialize(\n    rippleFactory = (el) => MDCRipple.attachTo(el)) {\n    this.navIcon_ = this.root_.querySelector(strings.NAVIGATION_ICON_SELECTOR);\n\n    // Get all icons in the toolbar and instantiate the ripples\n    const icons = [].slice.call(this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR));\n    if (this.navIcon_) {\n      icons.push(this.navIcon_);\n    }\n\n    this.iconRipples_ = icons.map((icon) => {\n      const ripple = rippleFactory(icon);\n      ripple.unbounded = true;\n      return ripple;\n    });\n\n    this.scrollTarget_ = window;\n  }\n\n  destroy() {\n    this.iconRipples_.forEach((iconRipple) => iconRipple.destroy());\n    super.destroy();\n  }\n\n  setScrollTarget(target) {\n    this.foundation_.destroyScrollHandler();\n    this.scrollTarget_ = target;\n    this.foundation_.initScrollHandler();\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTopAppBar}\n   */\n  static attachTo(root) {\n    return new MDCTopAppBar(root);\n  }\n\n  /**\n   * @return {!MDCTopAppBarBaseFoundation}\n   */\n  getDefaultFoundation() {\n    /** @type {!MDCTopAppBarAdapter} */\n    const adapter = /** @type {!MDCTopAppBarAdapter} */ (Object.assign({\n      hasClass: (className) => this.root_.classList.contains(className),\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setStyle: (property, value) => this.root_.style.setProperty(property, value),\n      getTopAppBarHeight: () => this.root_.clientHeight,\n      registerNavigationIconInteractionHandler: (evtType, handler) => {\n        if (this.navIcon_) {\n          this.navIcon_.addEventListener(evtType, handler);\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (evtType, handler) => {\n        if (this.navIcon_) {\n          this.navIcon_.removeEventListener(evtType, handler);\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.emit(strings.NAVIGATION_EVENT, {});\n      },\n      registerScrollHandler: (handler) => this.scrollTarget_.addEventListener('scroll', handler),\n      deregisterScrollHandler: (handler) => this.scrollTarget_.removeEventListener('scroll', handler),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      getViewportScrollY: () =>\n        this.scrollTarget_[this.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'],\n      getTotalActionItems: () =>\n        this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length,\n    })\n    );\n\n    /** @type {!MDCTopAppBarBaseFoundation} */\n    let foundation;\n    if (this.root_.classList.contains(cssClasses.SHORT_CLASS)) {\n      foundation = new MDCShortTopAppBarFoundation(adapter);\n    } else if (this.root_.classList.contains(cssClasses.FIXED_CLASS)) {\n      foundation = new MDCFixedTopAppBarFoundation(adapter);\n    } else {\n      foundation = new MDCTopAppBarFoundation(adapter);\n    }\n\n    return foundation;\n  }\n}\n\nexport {MDCTopAppBar, MDCTopAppBarBaseFoundation,\n  MDCTopAppBarFoundation, MDCFixedTopAppBarFoundation,\n  MDCShortTopAppBarFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Tab Indicator.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab Indicator into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabIndicatorAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the client rect of the content element.\n   * @return {!ClientRect}\n   */\n  computeContentClientRect() {}\n\n  /**\n   * Sets a style property of the content element to the passed value\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setContentStyleProperty(propName, value) {}\n}\n\nexport default MDCTabIndicatorAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab-indicator--active',\n  FADE: 'mdc-tab-indicator--fade',\n  NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\n\n/** @enum {string} */\nconst strings = {\n  CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTabIndicatorAdapter from './adapter';\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}\n * @abstract\n */\nclass MDCTabIndicatorFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabIndicatorAdapter for typing information\n   * @return {!MDCTabIndicatorAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabIndicatorAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      computeContentClientRect: () => {},\n      setContentStyleProperty: () => {},\n    });\n  }\n\n  /** @param {!MDCTabIndicatorAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabIndicatorFoundation.defaultAdapter, adapter));\n  }\n\n  /** @return {!ClientRect} */\n  computeContentClientRect() {\n    return this.adapter_.computeContentClientRect();\n  }\n\n  /**\n   * Activates the indicator\n   * @param {!ClientRect=} previousIndicatorClientRect\n   * @abstract\n   */\n  activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars\n\n  /** @abstract */\n  deactivate() {}\n}\n\nexport default MDCTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCSlidingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  /** @param {!ClientRect=} previousIndicatorClientRect */\n  activate(previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    }\n\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = this.computeContentClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    this.computeContentClientRect();\n\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCSlidingTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCFadingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  activate() {\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCFadingTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCTabIndicatorAdapter from './adapter';\nimport MDCTabIndicatorFoundation from './foundation';\n\nimport MDCSlidingTabIndicatorFoundation from './sliding-foundation';\nimport MDCFadingTabIndicatorFoundation from './fading-foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabIndicatorFoundation>}\n * @final\n */\nclass MDCTabIndicator extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabIndicator}\n   */\n  static attachTo(root) {\n    return new MDCTabIndicator(root);\n  }\n\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @type {?Element} */\n    this.content_;\n  }\n\n  initialize() {\n    this.content_ = this.root_.querySelector(MDCTabIndicatorFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  /**\n   * @return {!ClientRect}\n   */\n  computeContentClientRect() {\n    return this.foundation_.computeContentClientRect();\n  }\n\n  /**\n   * @return {!MDCTabIndicatorFoundation}\n   */\n  getDefaultFoundation() {\n    const adapter = /** @type {!MDCTabIndicatorAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      computeContentClientRect: () => this.content_.getBoundingClientRect(),\n      setContentStyleProperty: (prop, value) => this.content_.style.setProperty(prop, value),\n    }));\n\n    if (this.root_.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {\n      return new MDCFadingTabIndicatorFoundation(adapter);\n    }\n\n    // Default to the sliding indicator\n    return new MDCSlidingTabIndicatorFoundation(adapter);\n  }\n\n  /**\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.foundation_.activate(previousIndicatorClientRect);\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n}\n\nexport {MDCTabIndicator, MDCTabIndicatorFoundation, MDCSlidingTabIndicatorFoundation, MDCFadingTabIndicatorFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_SELECTED: 'aria-selected',\n  RIPPLE_SELECTOR: '.mdc-tab__ripple',\n  CONTENT_SELECTOR: '.mdc-tab__content',\n  TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n  TABINDEX: 'tabIndex',\n  INTERACTED_EVENT: 'MDCTab:interacted',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabAdapter>}\n * @final\n */\nclass MDCTabFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabAdapter for typing information\n   * @return {!MDCTabAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      activateIndicator: () => {},\n      deactivateIndicator: () => {},\n      notifyInteracted: () => {},\n      getOffsetLeft: () => {},\n      getOffsetWidth: () => {},\n      getContentOffsetLeft: () => {},\n      getContentOffsetWidth: () => {},\n      focus: () => {},\n    });\n  }\n\n  /** @param {!MDCTabAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.focusOnActivate_ = true;\n  }\n\n  /**\n   * Handles the \"click\" event\n   */\n  handleClick() {\n    // It's up to the parent component to keep track of the active Tab and\n    // ensure we don't activate a Tab that's already active.\n    this.adapter_.notifyInteracted();\n  }\n\n  /**\n   * Returns the Tab's active state\n   * @return {boolean}\n   */\n  isActive() {\n    return this.adapter_.hasClass(cssClasses.ACTIVE);\n  }\n\n  /**\n   * Sets whether the tab should focus itself when activated\n   * @param {boolean} focusOnActivate\n   */\n  setFocusOnActivate(focusOnActivate) {\n    this.focusOnActivate_ = focusOnActivate;\n  }\n\n  /**\n   * Activates the Tab\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.adapter_.addClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'true');\n    this.adapter_.setAttr(strings.TABINDEX, '0');\n    this.adapter_.activateIndicator(previousIndicatorClientRect);\n    if (this.focusOnActivate_) {\n      this.adapter_.focus();\n    }\n  }\n\n  /**\n   * Deactivates the Tab\n   */\n  deactivate() {\n    // Early exit\n    if (!this.isActive()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'false');\n    this.adapter_.setAttr(strings.TABINDEX, '-1');\n    this.adapter_.deactivateIndicator();\n  }\n\n  /**\n   * Returns the dimensions of the Tab\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    const rootWidth = this.adapter_.getOffsetWidth();\n    const rootLeft = this.adapter_.getOffsetLeft();\n    const contentWidth = this.adapter_.getContentOffsetWidth();\n    const contentLeft = this.adapter_.getContentOffsetLeft();\n\n    return {\n      rootLeft,\n      rootRight: rootLeft + rootWidth,\n      contentLeft: rootLeft + contentLeft,\n      contentRight: rootLeft + contentLeft + contentWidth,\n    };\n  }\n}\n\nexport default MDCTabFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\n/* eslint-disable no-unused-vars */\nimport {MDCRipple, MDCRippleFoundation, RippleCapableSurface} from '@material/ripple/index';\nimport {MDCTabIndicator, MDCTabIndicatorFoundation} from '@material/tab-indicator/index';\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport MDCTabFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabFoundation>}\n * @final\n */\nclass MDCTab extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @private {?MDCRipple} */\n    this.ripple_;\n    /** @private {?MDCTabIndicator} */\n    this.tabIndicator_;\n    /** @private {?Element} */\n    this.content_;\n\n    /** @private {?Function} */\n    this.handleClick_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTab}\n   */\n  static attachTo(root) {\n    return new MDCTab(root);\n  }\n\n  initialize(\n    rippleFactory = (el, foundation) => new MDCRipple(el, foundation),\n    tabIndicatorFactory = (el) => new MDCTabIndicator(el)) {\n    const rippleSurface = this.root_.querySelector(MDCTabFoundation.strings.RIPPLE_SELECTOR);\n    const rippleAdapter = Object.assign(MDCRipple.createAdapter(/** @type {!RippleCapableSurface} */ (this)), {\n      addClass: (className) => rippleSurface.classList.add(className),\n      removeClass: (className) => rippleSurface.classList.remove(className),\n      updateCssVariable: (varName, value) => rippleSurface.style.setProperty(varName, value),\n    });\n    const rippleFoundation = new MDCRippleFoundation(rippleAdapter);\n    this.ripple_ = rippleFactory(this.root_, rippleFoundation);\n\n    const tabIndicatorElement = this.root_.querySelector(MDCTabFoundation.strings.TAB_INDICATOR_SELECTOR);\n    this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);\n\n    this.content_ = this.root_.querySelector(MDCTabFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);\n    this.listen('click', this.handleClick_);\n  }\n\n  destroy() {\n    this.unlisten('click', /** @type {!Function} */ (this.handleClick_));\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /**\n   * @return {!MDCTabFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTabFoundation(\n      /** @type {!MDCTabAdapter} */ ({\n        setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        activateIndicator: (previousIndicatorClientRect) => this.tabIndicator_.activate(previousIndicatorClientRect),\n        deactivateIndicator: () => this.tabIndicator_.deactivate(),\n        notifyInteracted: () => this.emit(MDCTabFoundation.strings.INTERACTED_EVENT, {tab: this}, true /* bubble */),\n        getOffsetLeft: () => this.root_.offsetLeft,\n        getOffsetWidth: () => this.root_.offsetWidth,\n        getContentOffsetLeft: () => this.content_.offsetLeft,\n        getContentOffsetWidth: () => this.content_.offsetWidth,\n        focus: () => this.root_.focus(),\n      }));\n  }\n\n  /**\n   * Getter for the active state of the tab\n   * @return {boolean}\n   */\n  get active() {\n    return this.foundation_.isActive();\n  }\n\n  set focusOnActivate(focusOnActivate) {\n    this.foundation_.setFocusOnActivate(focusOnActivate);\n  }\n\n  /**\n   * Activates the tab\n   * @param {!ClientRect=} computeIndicatorClientRect\n   */\n  activate(computeIndicatorClientRect) {\n    this.foundation_.activate(computeIndicatorClientRect);\n  }\n\n  /**\n   * Deactivates the tab\n   */\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  /**\n   * Returns the indicator's client rect\n   * @return {!ClientRect}\n   */\n  computeIndicatorClientRect() {\n    return this.tabIndicator_.computeContentClientRect();\n  }\n\n  /**\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    return this.foundation_.computeDimensions();\n  }\n\n  /**\n   * Focuses the tab\n   */\n  focus() {\n    this.root_.focus();\n  }\n}\n\nexport {MDCTab, MDCTabFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport {MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends {MDCComponent<!MDCTabScrollerFoundation>}\n * @final\n */\nclass MDCTabScroller extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabScroller}\n   */\n  static attachTo(root) {\n    return new MDCTabScroller(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {?Element} */\n    this.content_;\n\n    /** @private {?Element} */\n    this.area_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleInteraction_;\n\n    /** @private {?function(!Event): undefined} */\n    this.handleTransitionEnd_;\n  }\n\n  initialize() {\n    this.area_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.AREA_SELECTOR);\n    this.content_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.CONTENT_SELECTOR);\n  }\n\n  initialSyncWithDOM() {\n    this.handleInteraction_ = () => this.foundation_.handleInteraction();\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.area_.addEventListener('wheel', this.handleInteraction_);\n    this.area_.addEventListener('touchstart', this.handleInteraction_);\n    this.area_.addEventListener('pointerdown', this.handleInteraction_);\n    this.area_.addEventListener('mousedown', this.handleInteraction_);\n    this.area_.addEventListener('keydown', this.handleInteraction_);\n    this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.area_.removeEventListener('wheel', this.handleInteraction_);\n    this.area_.removeEventListener('touchstart', this.handleInteraction_);\n    this.area_.removeEventListener('pointerdown', this.handleInteraction_);\n    this.area_.removeEventListener('mousedown', this.handleInteraction_);\n    this.area_.removeEventListener('keydown', this.handleInteraction_);\n    this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  /**\n   * @return {!MDCTabScrollerFoundation}\n   */\n  getDefaultFoundation() {\n    const adapter = /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n        return evtTarget[MATCHES](selector);\n      },\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      addScrollAreaClass: (className) => this.area_.classList.add(className),\n      setScrollAreaStyleProperty: (prop, value) => this.area_.style.setProperty(prop, value),\n      setScrollContentStyleProperty: (prop, value) => this.content_.style.setProperty(prop, value),\n      getScrollContentStyleValue: (propName) => window.getComputedStyle(this.content_).getPropertyValue(propName),\n      setScrollAreaScrollLeft: (scrollX) => this.area_.scrollLeft = scrollX,\n      getScrollAreaScrollLeft: () => this.area_.scrollLeft,\n      getScrollContentOffsetWidth: () => this.content_.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.area_.offsetWidth,\n      computeScrollAreaClientRect: () => this.area_.getBoundingClientRect(),\n      computeScrollContentClientRect: () => this.content_.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () => util.computeHorizontalScrollbarHeight(document),\n    });\n\n    return new MDCTabScrollerFoundation(adapter);\n  }\n\n  /**\n   * Returns the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    return this.foundation_.getScrollPosition();\n  }\n\n  /**\n   * Returns the width of the scroll content\n   * @return {number}\n   */\n  getScrollContentWidth() {\n    return this.content_.offsetWidth;\n  }\n\n  /**\n   * Increments the scroll value by the given amount\n   * @param {number} scrollXIncrement The pixel value by which to increment the scroll value\n   */\n  incrementScroll(scrollXIncrement) {\n    this.foundation_.incrementScroll(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given pixel position\n   * @param {number} scrollX The pixel value to scroll to\n   */\n  scrollTo(scrollX) {\n    this.foundation_.scrollTo(scrollX);\n  }\n}\n\nexport {MDCTabScroller, MDCTabScrollerFoundation, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n  TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n  TAB_SELECTOR: '.mdc-tab',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  END_KEY: 'End',\n  HOME_KEY: 'Home',\n  ENTER_KEY: 'Enter',\n  SPACE_KEY: 'Space',\n};\n\n/** @enum {number} */\nconst numbers = {\n  EXTRA_SCROLL_AMOUNT: 20,\n  ARROW_LEFT_KEYCODE: 37,\n  ARROW_RIGHT_KEYCODE: 39,\n  END_KEYCODE: 35,\n  HOME_KEYCODE: 36,\n  ENTER_KEYCODE: 13,\n  SPACE_KEYCODE: 32,\n};\n\nexport {\n  numbers,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\nimport {strings, numbers} from './constants';\nimport MDCTabBarAdapter from './adapter';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @type {Set<string>}\n */\nconst ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\n\n/**\n * @type {Map<number, string>}\n */\nconst KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\n\n/**\n * @extends {MDCFoundation<!MDCTabBarAdapter>}\n * @final\n */\nclass MDCTabBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @see MDCTabBarAdapter for typing information\n   * @return {!MDCTabBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabBarAdapter} */ ({\n      scrollTo: () => {},\n      incrementScroll: () => {},\n      getScrollPosition: () => {},\n      getScrollContentWidth: () => {},\n      getOffsetWidth: () => {},\n      isRTL: () => {},\n      setActiveTab: () => {},\n      activateTabAtIndex: () => {},\n      deactivateTabAtIndex: () => {},\n      focusTabAtIndex: () => {},\n      getTabIndicatorClientRectAtIndex: () => {},\n      getTabDimensionsAtIndex: () => {},\n      getPreviousActiveTabIndex: () => {},\n      getFocusedTabIndex: () => {},\n      getIndexOfTab: () => {},\n      getTabListLength: () => {},\n      notifyTabActivated: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTabBarAdapter} adapter\n   * */\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.useAutomaticActivation_ = false;\n  }\n\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   * @param {boolean} useAutomaticActivation\n   */\n  setUseAutomaticActivation(useAutomaticActivation) {\n    this.useAutomaticActivation_ = useAutomaticActivation;\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index\n   */\n  activateTab(index) {\n    const previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n      return;\n    }\n\n    this.adapter_.deactivateTabAtIndex(previousActiveIndex);\n    this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));\n    this.scrollIntoView(index);\n\n    this.adapter_.notifyTabActivated(index);\n  }\n\n  /**\n   * Handles the keydown event\n   * @param {!Event} evt\n   */\n  handleKeyDown(evt) {\n    // Get the key from the event\n    const key = this.getKeyFromEvent_(evt);\n\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey_(key)) {\n      evt.preventDefault();\n    }\n\n    if (this.useAutomaticActivation_) {\n      if (this.isActivationKey_(key)) {\n        return;\n      }\n\n      const index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);\n      this.adapter_.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      const focusedTabIndex = this.adapter_.getFocusedTabIndex();\n      if (this.isActivationKey_(key)) {\n        this.adapter_.setActiveTab(focusedTabIndex);\n      } else {\n        const index = this.determineTargetFromKey_(focusedTabIndex, key);\n        this.adapter_.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  }\n\n  /**\n   * Handles the MDCTab:interacted event\n   * @param {!Event} evt\n   */\n  handleTabInteraction(evt) {\n    this.adapter_.setActiveTab(this.adapter_.getIndexOfTab(evt.detail.tab));\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index The tab index to make visible\n   */\n  scrollIntoView(index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange_(index)) {\n      return;\n    }\n\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      return this.adapter_.scrollTo(0);\n    }\n\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter_.getTabListLength() - 1) {\n      return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());\n    }\n\n    if (this.isRTL_()) {\n      return this.scrollIntoViewRTL_(index);\n    }\n\n    this.scrollIntoView_(index);\n  }\n\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param {number} origin The original index from which to determine the destination\n   * @param {string} key The name of the key\n   * @return {number}\n   * @private\n   */\n  determineTargetFromKey_(origin, key) {\n    const isRTL = this.isRTL_();\n    const maxIndex = this.adapter_.getTabListLength() - 1;\n    const shouldGoToEnd = key === strings.END_KEY;\n    const shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    const shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    let index = origin;\n\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    const relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    const leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n\n    return Math.max(rightIncrement, 0);\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @param {number} scrollContentWidth The width of the scroll content\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    const relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    const leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n\n    return Math.min(rightIncrement, 0);\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    const relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    const relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    const relativeRootDelta = relativeRootLeft + relativeRootRight;\n    const leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    const rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @param {number} scrollContentWidth The width of the scroller content\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    const rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    const rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    const rootDelta = rootLeft + rootRight;\n    const leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    const rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Returns the key associated with a keydown event\n   * @param {!Event} evt The keydown event\n   * @return {string}\n   * @private\n   */\n  getKeyFromEvent_(evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n\n    return KEYCODE_MAP.get(evt.keyCode);\n  }\n\n  isActivationKey_(key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  }\n\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param {number} index The index to test\n   * @private\n   */\n  indexIsInRange_(index) {\n    return index >= 0 && index < this.adapter_.getTabListLength();\n  }\n\n  /**\n   * Returns the view's RTL property\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.isRTL();\n  }\n\n  /**\n   * Scrolls the tab at the given index into view for left-to-right useragents\n   * @param {number} index The index of the tab to scroll into view\n   * @private\n   */\n  scrollIntoView_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param {number} index The tab index to make visible\n   * @private\n   */\n  scrollIntoViewRTL_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const scrollWidth = this.adapter_.getScrollContentWidth();\n    const nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(\n      index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n}\n\nexport default MDCTabBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport {MDCTab, MDCTabFoundation} from '@material/tab/index';\nimport {MDCTabScroller} from '@material/tab-scroller/index';\n\nimport MDCTabBarAdapter from './adapter';\nimport MDCTabBarFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTabBarFoundation>}\n * @final\n */\nclass MDCTabBar extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Array<!MDCTab>} */\n    this.tabList_;\n\n    /** @type {(function(!Element): !MDCTab)} */\n    this.tabFactory_;\n\n    /** @private {?MDCTabScroller} */\n    this.tabScroller_;\n\n    /** @type {(function(!Element): !MDCTabScroller)} */\n    this.tabScrollerFactory_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleTabInteraction_;\n\n    /** @private {?function(?Event): undefined} */\n    this.handleKeyDown_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTabBar}\n   */\n  static attachTo(root) {\n    return new MDCTabBar(root);\n  }\n\n  set focusOnActivate(focusOnActivate) {\n    this.tabList_.forEach((tab) => tab.focusOnActivate = focusOnActivate);\n  }\n\n  set useAutomaticActivation(useAutomaticActivation) {\n    this.foundation_.setUseAutomaticActivation(useAutomaticActivation);\n  }\n\n  /**\n   * @param {(function(!Element): !MDCTab)=} tabFactory A function which creates a new MDCTab\n   * @param {(function(!Element): !MDCTabScroller)=} tabScrollerFactory A function which creates a new MDCTabScroller\n   */\n  initialize(\n    tabFactory = (el) => new MDCTab(el),\n    tabScrollerFactory = (el) => new MDCTabScroller(el)) {\n    this.tabFactory_ = tabFactory;\n    this.tabScrollerFactory_ = tabScrollerFactory;\n\n    this.tabList_ = this.getTabElements_().map((el) => this.tabFactory_(el));\n\n    const tabScrollerElement = this.root_.querySelector(MDCTabBarFoundation.strings.TAB_SCROLLER_SELECTOR);\n    if (tabScrollerElement) {\n      this.tabScroller_ = this.tabScrollerFactory_(tabScrollerElement);\n    }\n  }\n\n  initialSyncWithDOM() {\n    this.handleTabInteraction_ = (evt) => this.foundation_.handleTabInteraction(evt);\n    this.handleKeyDown_ = (evt) => this.foundation_.handleKeyDown(evt);\n\n    this.root_.addEventListener(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.root_.addEventListener('keydown', this.handleKeyDown_);\n\n    for (let i = 0; i < this.tabList_.length; i++) {\n      if (this.tabList_[i].active) {\n        this.scrollIntoView(i);\n        break;\n      }\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.root_.removeEventListener(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.root_.removeEventListener('keydown', this.handleKeyDown_);\n    this.tabList_.forEach((tab) => tab.destroy());\n    this.tabScroller_.destroy();\n  }\n\n  /**\n   * @return {!MDCTabBarFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTabBarFoundation(\n      /** @type {!MDCTabBarAdapter} */ ({\n        scrollTo: (scrollX) => this.tabScroller_.scrollTo(scrollX),\n        incrementScroll: (scrollXIncrement) => this.tabScroller_.incrementScroll(scrollXIncrement),\n        getScrollPosition: () => this.tabScroller_.getScrollPosition(),\n        getScrollContentWidth: () => this.tabScroller_.getScrollContentWidth(),\n        getOffsetWidth: () => this.root_.offsetWidth,\n        isRTL: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n        setActiveTab: (index) => this.foundation_.activateTab(index),\n        activateTabAtIndex: (index, clientRect) => this.tabList_[index].activate(clientRect),\n        deactivateTabAtIndex: (index) => this.tabList_[index].deactivate(),\n        focusTabAtIndex: (index) => this.tabList_[index].focus(),\n        getTabIndicatorClientRectAtIndex: (index) => this.tabList_[index].computeIndicatorClientRect(),\n        getTabDimensionsAtIndex: (index) => this.tabList_[index].computeDimensions(),\n        getPreviousActiveTabIndex: () => {\n          for (let i = 0; i < this.tabList_.length; i++) {\n            if (this.tabList_[i].active) {\n              return i;\n            }\n          }\n          return -1;\n        },\n        getFocusedTabIndex: () => {\n          const tabElements = this.getTabElements_();\n          const activeElement = document.activeElement;\n          return tabElements.indexOf(activeElement);\n        },\n        getIndexOfTab: (tabToFind) => this.tabList_.indexOf(tabToFind),\n        getTabListLength: () => this.tabList_.length,\n        notifyTabActivated: (index) => this.emit(MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT, {index}, true),\n      })\n    );\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index The index of the tab\n   */\n  activateTab(index) {\n    this.foundation_.activateTab(index);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index THe index of the tab\n   */\n  scrollIntoView(index) {\n    this.foundation_.scrollIntoView(index);\n  }\n\n  getTabElements_() {\n    return [].slice.call(this.root_.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR));\n  }\n}\n\nexport {MDCTabBar, MDCTabBarFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',\n  MENU_SELECTION_GROUP: 'mdc-menu__selection-group',\n};\n\n/** @enum {string} */\nconst strings = {\n  SELECTED_EVENT: 'MDCMenu:selected',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n  LIST_SELECTOR: '.mdc-list',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\nexport {getTransformPropertyName};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport * as util from './util';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from './foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {Corner, CornerBit, strings, cssClasses} from './constants';\n\n/**\n * @extends MDCComponent<!MDCMenuSurfaceFoundation>\n */\nclass MDCMenuSurface extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n    /** @private {!Element} */\n    this.anchorElement;\n    /** @private {Element} */\n    this.firstFocusableElement_;\n    /** @private {Element} */\n    this.lastFocusableElement_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleBodyClick_;\n    /** @private {!Function} */\n    this.registerBodyClickListener_;\n    /** @private {!Function} */\n    this.deregisterBodyClickListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCMenuSurface}\n   */\n  static attachTo(root) {\n    return new MDCMenuSurface(root);\n  }\n\n  initialSyncWithDOM() {\n    if (this.root_.parentElement && this.root_.parentElement.classList.contains(cssClasses.ANCHOR)) {\n      this.anchorElement = this.root_.parentElement;\n    }\n\n    if (this.root_.classList.contains(cssClasses.FIXED)) {\n      this.setFixedPosition(true);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleBodyClick_ = (evt) => this.foundation_.handleBodyClick(evt);\n\n    this.registerBodyClickListener_ = () => document.body.addEventListener('click', this.handleBodyClick_);\n    this.deregisterBodyClickListener_ = () => document.body.removeEventListener('click', this.handleBodyClick_);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.addEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener(strings.OPENED_EVENT, this.registerBodyClickListener_);\n    this.root_.removeEventListener(strings.CLOSED_EVENT, this.deregisterBodyClickListener_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    if (value) {\n      const focusableElements = this.root_.querySelectorAll(strings.FOCUSABLE_ELEMENTS);\n      this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;\n      this.lastFocusableElement_ = focusableElements.length > 0 ?\n        focusableElements[focusableElements.length - 1] : null;\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  /**\n   * Removes the menu-surface from it's current location and appends it to the\n   * body to overcome any overflow:hidden issues.\n   */\n  hoistMenuToBody() {\n    document.body.appendChild(this.root_.parentElement.removeChild(this.root_));\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * Sets the foundation to use page offsets for an positioning when the menu\n   * is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.foundation_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!Element} element\n   */\n  setMenuSurfaceAnchorElement(element) {\n    this.anchorElement = element;\n  }\n\n  /**\n   * Sets the menu-surface to position: fixed.\n   * @param {boolean} isFixed\n   */\n  setFixedPosition(isFixed) {\n    if (isFixed) {\n      this.root_.classList.add(cssClasses.FIXED);\n    } else {\n      this.root_.classList.remove(cssClasses.FIXED);\n    }\n\n    this.foundation_.setFixedPosition(isFixed);\n  }\n\n  /**\n   * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.foundation_.setAbsolutePosition(x, y);\n    this.setIsHoisted(true);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.foundation_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.foundation_.setAnchorMargin(margin);\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.foundation_.setQuickOpen(quickOpen);\n  }\n\n  /** @return {!MDCMenuSurfaceFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuSurfaceFoundation(\n      /** @type {!MDCMenuSurfaceAdapter} */ (Object.assign({\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        hasAnchor: () => !!this.anchorElement,\n        notifyClose: () => this.emit(MDCMenuSurfaceFoundation.strings.CLOSED_EVENT, {}),\n        notifyOpen: () => this.emit(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, {}),\n        isElementInContainer: (el) => this.root_ === el || this.root_.contains(el),\n        isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n        setTransformOrigin: (origin) => {\n          this.root_.style[`${util.getTransformPropertyName(window)}-origin`] = origin;\n        },\n      },\n      this.getFocusAdapterMethods_(),\n      this.getDimensionAdapterMethods_())\n      ));\n  }\n\n  /**\n   * @return {!{\n   * isFocused: function(): boolean,\n   * saveFocus: function(),\n   * restoreFocus: function(),\n   * isFirstElementFocused: function(): boolean,\n   * isLastElementFocused: function(): boolean,\n   * focusFirstElement: function(),\n   * focusLastElement: function(),\n   * }}\n   * @private\n   */\n  getFocusAdapterMethods_() {\n    return {\n      isFocused: () => document.activeElement === this.root_,\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this.root_.contains(document.activeElement)) {\n          if (this.previousFocus_ && this.previousFocus_.focus) {\n            this.previousFocus_.focus();\n          }\n        }\n      },\n      isFirstElementFocused: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_ === document.activeElement,\n      isLastElementFocused: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_ === document.activeElement,\n      focusFirstElement: () =>\n        this.firstFocusableElement_ && this.firstFocusableElement_.focus && this.firstFocusableElement_.focus(),\n      focusLastElement: () =>\n        this.lastFocusableElement_ && this.lastFocusableElement_.focus && this.lastFocusableElement_.focus(),\n    };\n  }\n\n  /**\n   * @return {!{\n   * getInnerDimensions: function(),\n   * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),\n   * getWindowDimensions: function(),\n   * setPosition: function(*),\n   * setMaxHeight: function(string)}}\n   * @private\n   */\n  getDimensionAdapterMethods_() {\n    return {\n      getInnerDimensions: () => {\n        return {width: this.root_.offsetWidth, height: this.root_.offsetHeight};\n      },\n      getAnchorDimensions: () => this.anchorElement && this.anchorElement.getBoundingClientRect(),\n      getWindowDimensions: () => {\n        return {width: window.innerWidth, height: window.innerHeight};\n      },\n      getBodyDimensions: () => {\n        return {width: document.body.clientWidth, height: document.body.clientHeight};\n      },\n      getWindowScroll: () => {\n        return {x: window.pageXOffset, y: window.pageYOffset};\n      },\n      setPosition: (position) => {\n        this.root_.style.left = 'left' in position ? position.left : null;\n        this.root_.style.right = 'right' in position ? position.right : null;\n        this.root_.style.top = 'top' in position ? position.top : null;\n        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;\n      },\n      setMaxHeight: (height) => {\n        this.root_.style.maxHeight = height;\n      },\n    };\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, MDCMenuSurface, AnchorMargin, Corner, CornerBit, util};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuSurfaceFoundation} from '@material/menu-surface/foundation';\nimport MDCListFoundation from '@material/list/foundation';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClassToElementAtIndex: () => {},\n      removeClassFromElementAtIndex: () => {},\n      addAttributeToElementAtIndex: () => {},\n      removeAttributeFromElementAtIndex: () => {},\n      elementContainsClass: () => {},\n      closeSurface: () => {},\n      getElementIndex: () => {},\n      getParentElement: () => {},\n      getSelectedElementIndex: () => {},\n      notifySelected: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @type {number} */\n    this.closeAnimationEndTimerId_ = 0;\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter_.closeSurface();\n  }\n\n  /**\n   * Handler function for the keydown events.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {key, keyCode} = evt;\n\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isSpace || isEnter) {\n      this.handleAction_(evt);\n    } else if (isTab) {\n      this.adapter_.closeSurface();\n    }\n  }\n\n  /**\n   * Handler function for the click events.\n   * @param {!Event} evt\n   */\n  handleClick(evt) {\n    this.handleAction_(evt);\n  }\n\n  /**\n   * Combined action handling for click/keypress events.\n   * @param {!Event} evt\n   * @private\n   */\n  handleAction_(evt) {\n    const listItem = this.getListItem_(/** @type {HTMLElement} */ (evt.target));\n    if (listItem) {\n      this.handleSelection(listItem);\n      this.preventDefaultEvent_(evt);\n    }\n  }\n\n  /**\n   * Handler for a selected list item.\n   * @param {?HTMLElement} listItem\n   */\n  handleSelection(listItem) {\n    const index = this.adapter_.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter_.notifySelected({index});\n    this.adapter_.closeSurface();\n\n    // Wait for the menu to close before adding/removing classes that affect styles.\n    this.closeAnimationEndTimerId_ = setTimeout(() => {\n      const selectionGroup = this.getSelectionGroup_(listItem);\n\n      if (selectionGroup !== null) {\n        this.handleSelectionGroup_(/** @type {!HTMLElement} */ (selectionGroup), index);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /**\n   * Handles toggling the selected classes in a selection group when a\n   * selection is made.\n   * @param {!HTMLElement} selectionGroup\n   * @param {number} index The selected index value\n   * @private\n   */\n  handleSelectionGroup_(selectionGroup, index) {\n    // De-select the previous selection in this group.\n    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);\n    if (selectedIndex >= 0) {\n      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, strings.ARIA_SELECTED_ATTR);\n      this.adapter_.removeClassFromElementAtIndex(selectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n    // Select the new list item in this group.\n    this.adapter_.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter_.addAttributeToElementAtIndex(index, strings.ARIA_SELECTED_ATTR, 'true');\n  }\n\n  /**\n   * Returns the parent selection group of an element if one exists.\n   * @param listItem\n   * @return {?HTMLElement} parent selection group element or null.\n   * @private\n   */\n  getSelectionGroup_(listItem) {\n    let parent = this.adapter_.getParentElement(listItem);\n    let isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n\n    // Iterate through ancestors until we find the group or get to the list.\n    while (!isGroup && !this.adapter_.elementContainsClass(parent, MDCListFoundation.cssClasses.ROOT)) {\n      parent = this.adapter_.getParentElement(parent);\n      isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n    }\n\n    if (isGroup) {\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Find the first ancestor with the mdc-list-item class.\n   * @param {?HTMLElement} target\n   * @return {?HTMLElement}\n   * @private\n   */\n  getListItem_(target) {\n    let isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n\n    while (!isListItem) {\n      target = this.adapter_.getParentElement(target);\n      if (target) {\n        isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n      } else { // target has no parent element.\n        return null;\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {!Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const target = /** @type {!HTMLElement} */ (evt.target);\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n}\n\nexport {MDCMenuFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {MDCMenuFoundation} from './foundation';\nimport {strings, cssClasses} from './constants';\nimport {MDCMenuSurface, Corner} from '@material/menu-surface/index';\nimport {MDCMenuSurfaceFoundation, AnchorMargin} from '@material/menu-surface/foundation';\nimport {MDCList} from '@material/list/index';\n\n/**\n * @extends MDCComponent<!MDCMenuFoundation>\n */\nclass MDCMenu extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!MDCMenuSurface} */\n    this.menuSurface_;\n    /** @private {!MDCList} */\n    this.list_;\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.afterOpenedCallback_;\n  }\n\n  /**\n   * @param {!HTMLElement} root\n   * @return {!MDCMenu}\n   */\n  static attachTo(root) {\n    return new MDCMenu(root);\n  }\n\n  initialize(\n    menuSurfaceFactory = (el) => new MDCMenuSurface(el),\n    listFactory = (el) => new MDCList(el)) {\n    this.menuSurface_ = menuSurfaceFactory(this.root_);\n\n    const list = this.root_.querySelector(strings.LIST_SELECTOR);\n    if (list) {\n      this.list_ = listFactory(list);\n      this.list_.wrapFocus = true;\n    }\n  }\n\n  initialSyncWithDOM() {\n    this.afterOpenedCallback_ = () => this.handleAfterOpened_();\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleClick_ = (evt) => this.foundation_.handleClick(evt);\n\n    this.menuSurface_.listen(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.listen('keydown', this.handleKeydown_);\n    this.listen('click', this.handleClick_);\n  }\n\n  destroy() {\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    this.menuSurface_.destroy();\n    this.menuSurface_.unlisten(MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);\n    this.unlisten('keydown', this.handleKeydown_);\n    this.unlisten('click', this.handleClick_);\n    super.destroy();\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.menuSurface_.open;\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    this.menuSurface_.open = value;\n  }\n\n  /** @return {boolean} */\n  get wrapFocus() {\n    return this.list_.wrapFocus;\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.list_.wrapFocus = value;\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left\n   *     menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.menuSurface_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {!AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.menuSurface_.setAnchorMargin(margin);\n  }\n\n  /**\n   * Return the items within the menu. Note that this only contains the set of elements within\n   * the items container that are proper list items, and not supplemental / presentational DOM\n   * elements.\n   * @return {!Array<!HTMLElement>}\n   */\n  get items() {\n    return this.list_.listElements;\n  }\n\n  /**\n   * Return the item within the menu at the index specified.\n   * @param {number} index\n   * @return {?HTMLElement}\n   */\n  getOptionByIndex(index) {\n    const items = this.items;\n\n    if (index < items.length) {\n      return this.items[index];\n    } else {\n      return null;\n    }\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.menuSurface_.quickOpen = quickOpen;\n  }\n\n  /** @param {boolean} isFixed */\n  setFixedPosition(isFixed) {\n    this.menuSurface_.setFixedPosition(isFixed);\n  }\n\n  hoistMenuToBody() {\n    this.menuSurface_.hoistMenuToBody();\n  }\n\n  /** @param {boolean} isHoisted */\n  setIsHoisted(isHoisted) {\n    this.menuSurface_.setIsHoisted(isHoisted);\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.menuSurface_.setAbsolutePosition(x, y);\n  }\n\n  /**\n   * Sets the element that the menu-surface is anchored to.\n   * @param {!HTMLElement} element\n   */\n  setAnchorElement(element) {\n    this.menuSurface_.anchorElement = element;\n  }\n\n  handleAfterOpened_() {\n    const list = this.items;\n    if (list.length > 0) {\n      list[0].focus();\n    }\n  }\n\n  /** @return {!MDCMenuFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuFoundation({\n      addClassToElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.add(className);\n      },\n      removeClassFromElementAtIndex: (index, className) => {\n        const list = this.items;\n        list[index].classList.remove(className);\n      },\n      addAttributeToElementAtIndex: (index, attr, value) => {\n        const list = this.items;\n        list[index].setAttribute(attr, value);\n      },\n      removeAttributeFromElementAtIndex: (index, attr) => {\n        const list = this.items;\n        list[index].removeAttribute(attr);\n      },\n      elementContainsClass: (element, className) => element.classList.contains(className),\n      closeSurface: () => this.open = false,\n      getElementIndex: (element) => this.items.indexOf(element),\n      getParentElement: (element) => element.parentElement,\n      getSelectedElementIndex: (selectionGroup) => {\n        return this.items.indexOf(selectionGroup.querySelector(`.${cssClasses.MENU_SELECTED_LIST_ITEM}`));\n      },\n      notifySelected: (evtData) => this.emit(strings.SELECTED_EVENT, {\n        index: evtData.index,\n        item: this.items[evtData.index],\n      }),\n    });\n  }\n}\n\nexport {MDCMenuFoundation, MDCMenu, AnchorMargin, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   surfaceHeight: number,\n *   surfaceWidth: number,\n *   bodyDimensions,\n *   windowScroll,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}\n */\nclass MDCMenuSurfaceFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuSurfaceAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuSurfaceAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasAnchor: () => false,\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      isElementInContainer: () => false,\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      isFocused: () => false,\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFirstElementFocused: () => {},\n      isLastElementFocused: () => {},\n      focusFirstElement: () => {},\n      focusLastElement: () => {},\n      getInnerDimensions: () => ({}),\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getBodyDimensions: () => ({}),\n      getWindowScroll: () => ({}),\n      setPosition: () => {},\n      setMaxHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuSurfaceAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {!Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {!AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n    /** @private {boolean} */\n    this.hoistedElement_ = false;\n    /** @private {boolean} */\n    this.isFixedPosition_ = false;\n    /** @private {!{x: number, y: number}} */\n    this.position_ = {x: 0, y: 0};\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuSurfaceFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin set of margin values from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /**\n   * Used to indicate if the menu-surface is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.hoistedElement_ = isHoisted;\n  }\n\n  /**\n   * Used to set the menu-surface calculations based on a fixed position menu.\n   * @param {boolean} isFixedPosition\n   */\n  setFixedPosition(isFixedPosition) {\n    this.isFixedPosition_ = isFixedPosition;\n  }\n\n  /**\n   * Sets the menu-surface position on the page.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;\n    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * Handle clicks and close if not within menu-surface element.\n   * @param {!Event} evt\n   */\n  handleBodyClick(evt) {\n    const el = evt.target;\n\n    if (this.adapter_.isElementInContainer(el)) {\n      return;\n    }\n\n    this.close();\n  };\n\n  /**\n   * Handle keys that close the surface.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key, shiftKey} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) {\n      this.close();\n    } else if (isTab) {\n      if (this.adapter_.isLastElementFocused() && !shiftKey) {\n        this.adapter_.focusFirstElement();\n        evt.preventDefault();\n      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {\n        this.adapter_.focusLastElement();\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.\n   */\n  getAutoLayoutMeasurements_() {\n    let anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n    const bodyDimensions = this.adapter_.getBodyDimensions();\n    const windowScroll = this.adapter_.getWindowScroll();\n\n    if (!anchorRect) {\n      anchorRect = /** @type {ClientRect} */ ({\n        x: this.position_.x,\n        y: this.position_.y,\n        top: this.position_.y,\n        bottom: this.position_.y,\n        left: this.position_.x,\n        right: this.position_.x,\n        height: 0,\n        width: 0,\n      });\n    }\n\n    return {\n      viewport,\n      bodyDimensions,\n      windowScroll,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      surfaceHeight: this.dimensions_.height,\n      surfaceWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu surface.\n   * @return {!Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, surfaceHeight, surfaceWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = surfaceHeight - availableTop;\n    const bottomOverflow = surfaceHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = surfaceWidth - availableLeft;\n    const rightOverflow = surfaceWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return /** @type {Corner} */ (corner);\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    // isRightAligned corresponds to using the 'right' property on the surface.\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n\n      // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so\n      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,\n      // the right property is correct.\n      if (this.hoistedElement_ || this.isFixedPosition_) {\n        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);\n      }\n\n      return rightOffset;\n    }\n\n    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {anchorHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n    }\n    return y;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuSurfaceMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuSurfaceFoundation.numbers;\n\n    // When maximum height is not specified, it is handled from css.\n    if (isBottomAligned) {\n      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;\n      if (!(this.anchorCorner_ & CornerBit.BOTTOM)) {\n        maxHeight += this.measures_.anchorHeight;\n      }\n    } else {\n      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;\n      if (this.anchorCorner_ & CornerBit.BOTTOM) {\n        maxHeight -= this.measures_.anchorHeight;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);\n    const verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    let position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset : '0',\n    };\n    const {anchorWidth, surfaceWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.\n    if (anchorWidth / surfaceWidth > numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element\n    if (this.hoistedElement_ || this.isFixedPosition_) {\n      position = this.adjustPositionForHoistedElement_(position);\n    }\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop) && position[prop] !== '0') {\n        position[prop] = `${parseInt(position[prop], 10)}px`;\n      }\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Calculates the offsets for positioning the menu-surface when the menu-surface has been\n   * hoisted to the body.\n   * @param {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @return {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @private\n   */\n  adjustPositionForHoistedElement_(position) {\n    const {windowScroll, viewportDistance} = this.measures_;\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop)) {\n        // Hoisted surfaces need to have the anchor elements location on the page added to the\n        // position properties for proper alignment on the body.\n        if (viewportDistance.hasOwnProperty(prop)) {\n          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];\n        }\n\n        // Surfaces that are absolutely positioned need to have additional calculations for scroll\n        // and bottom positioning.\n        if (!this.isFixedPosition_) {\n          if (prop === 'top') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.y;\n          } else if (prop === 'bottom') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.y;\n          } else if (prop === 'left') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.x;\n          } else if (prop === 'right') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.x;\n          }\n        }\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Open the menu surface.\n   */\n  open() {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      if (this.quickOpen_) {\n        this.adapter_.notifyOpen();\n      } else {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n          this.adapter_.notifyOpen();\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu surface.\n   */\n  close() {\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      if (this.quickOpen_) {\n        this.adapter_.notifyClose();\n      } else {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n          this.adapter_.notifyClose();\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n\n    this.isOpen_ = false;\n    this.maybeRestoreFocus_();\n  }\n\n  /**\n   * The last focused element when the menu surface was opened should regain focus, if the user is\n   * focused on or within the menu surface when it is closed.\n   * @private\n   */\n  maybeRestoreFocus_() {\n    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {\n      this.adapter_.restoreFocus();\n    }\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * isFinite that doesn't force conversion to number type.\n   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.\n   * @param {number} num\n   * @return {boolean}\n   * @private\n   */\n  typeCheckisFinite_(num) {\n    return typeof num === 'number' && isFinite(num);\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, AnchorMargin};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Drawer\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Drawer into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCDrawerAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * @param {!Element} element target element to verify class name\n   * @param {string} className class name\n   */\n  elementHasClass(element, className) {}\n\n  /**\n   * Saves the focus of currently active element.\n   */\n  saveFocus() {}\n\n  /**\n   * Restores focus to element previously saved with 'saveFocus'.\n   */\n  restoreFocus() {}\n\n  /**\n   * Focuses the active / selected navigation item.\n   */\n  focusActiveNavigationItem() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:closed\" denoting the drawer has closed.\n   */\n  notifyClose() {}\n\n  /**\n   * Emits a custom event \"MDCDrawer:opened\" denoting the drawer has opened.\n   */\n  notifyOpen() {}\n\n  /**\n   * Traps focus on root element and focuses the active navigation element.\n   */\n  trapFocus() {}\n\n  /**\n   * Releases focus trap from root element which was set by `trapFocus`\n   * and restores focus to where it was prior to calling `trapFocus`.\n   */\n  releaseFocus() {}\n}\n\nexport default MDCDrawerAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-drawer',\n  DISMISSIBLE: 'mdc-drawer--dismissible',\n  MODAL: 'mdc-drawer--modal',\n  OPEN: 'mdc-drawer--open',\n  ANIMATE: 'mdc-drawer--animate',\n  OPENING: 'mdc-drawer--opening',\n  CLOSING: 'mdc-drawer--closing',\n};\n\n/** @enum {string} */\nconst strings = {\n  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n  SCRIM_SELECTOR: '.mdc-drawer-scrim',\n  CLOSE_EVENT: 'MDCDrawer:closed',\n  OPEN_EVENT: 'MDCDrawer:opened',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from '../constants';\n\n/**\n * @extends {MDCFoundation<!MDCDrawerAdapter>}\n */\nclass MDCDismissibleDrawerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get defaultAdapter() {\n    return /** @type {!MDCDrawerAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      elementHasClass: (/* element: !Element, className: string */) => {},\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      focusActiveNavigationItem: () => {},\n      trapFocus: () => {},\n      releaseFocus: () => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDismissibleDrawerFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n  }\n\n  destroy() {\n    if (this.animationFrame_) {\n      cancelAnimationFrame(this.animationFrame_);\n    }\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n    }\n  }\n\n  /**\n   * Function to open the drawer.\n   */\n  open() {\n    if (this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.OPEN);\n    this.adapter_.addClass(cssClasses.ANIMATE);\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(cssClasses.OPENING);\n    });\n\n    this.adapter_.saveFocus();\n  }\n\n  /**\n   * Function to close the drawer.\n   */\n  close() {\n    if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Extension point for when drawer finishes open animation.\n   * @protected\n   */\n  opened() {}\n\n  /**\n   * Extension point for when drawer finishes close animation.\n   * @protected\n   */\n  closed() {}\n\n  /**\n   * Returns true if drawer is in open state.\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.adapter_.hasClass(cssClasses.OPEN);\n  }\n\n  /**\n   * Returns true if drawer is animating open.\n   * @return {boolean}\n   */\n  isOpening() {\n    return this.adapter_.hasClass(cssClasses.OPENING) || this.adapter_.hasClass(cssClasses.ANIMATE);\n  }\n\n  /**\n   * Returns true if drawer is animating closed.\n   * @return {boolean}\n   */\n  isClosing() {\n    return this.adapter_.hasClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Keydown handler to close drawer when key is escape.\n   * @param evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    if (isEscape) {\n      this.close();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    const {OPENING, CLOSING, OPEN, ANIMATE, ROOT} = cssClasses;\n\n    // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n    const isElement = evt.target instanceof Element;\n    if (!isElement || !this.adapter_.elementHasClass(/** @type {!Element} */ (evt.target), ROOT)) {\n      return;\n    }\n\n    if (this.isClosing()) {\n      this.adapter_.removeClass(OPEN);\n      this.adapter_.restoreFocus();\n      this.closed();\n      this.adapter_.notifyClose();\n    } else {\n      this.adapter_.focusActiveNavigationItem();\n      this.opened();\n      this.adapter_.notifyOpen();\n    }\n\n    this.adapter_.removeClass(ANIMATE);\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCDismissibleDrawerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCDismissibleDrawerFoundation from '../dismissible/foundation';\n\n/**\n * @extends {MDCDismissibleDrawerFoundation}\n */\nclass MDCModalDrawerFoundation extends MDCDismissibleDrawerFoundation {\n  /**\n   * Called when drawer finishes open animation.\n   * @override\n   */\n  opened() {\n    this.adapter_.trapFocus();\n  }\n\n  /**\n   * Called when drawer finishes close animation.\n   * @override\n   */\n  closed() {\n    this.adapter_.releaseFocus();\n  }\n\n  /**\n   * Handles click event on scrim.\n   */\n  handleScrimClick() {\n    this.close();\n  }\n}\n\nexport default MDCModalDrawerFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport {MDCComponent} from '@material/base/index';\nimport MDCDismissibleDrawerFoundation from './dismissible/foundation';\nimport MDCModalDrawerFoundation from './modal/foundation';\nimport MDCDrawerAdapter from './adapter';\nimport {MDCList} from '@material/list/index';\nimport MDCListFoundation from '@material/list/foundation';\nimport {strings} from './constants';\nimport * as util from './util';\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}\n * @final\n */\nclass MDCDrawer extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!Element} */\n    this.previousFocus_;\n\n    /** @private {!Function} */\n    this.handleKeydown_;\n\n    /** @private {!Function} */\n    this.handleTransitionEnd_;\n\n    /** @private {!Function} */\n    this.focusTrapFactory_;\n\n    /** @private {!FocusTrapInstance} */\n    this.focusTrap_;\n\n    /** @private {?Element} */\n    this.scrim_;\n\n    /** @private {?Function} */\n    this.handleScrimClick_;\n\n    /** @private {?MDCList} */\n    this.list_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCDrawer}\n   */\n  static attachTo(root) {\n    return new MDCDrawer(root);\n  }\n\n  /**\n   * Returns true if drawer is in the open position.\n   * @return {boolean}\n   */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /**\n   * Toggles the drawer open and closed.\n   * @param {boolean} isOpen\n   */\n  set open(isOpen) {\n    if (isOpen) {\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  initialize(\n    focusTrapFactory = createFocusTrap,\n    listFactory = (el) => new MDCList(el)) {\n    const listEl = /** @type {!Element} */ (this.root_.querySelector(`.${MDCListFoundation.cssClasses.ROOT}`));\n    if (listEl) {\n      this.list_ = listFactory(listEl);\n      this.list_.wrapFocus = true;\n    }\n    this.focusTrapFactory_ = focusTrapFactory;\n  }\n\n  initialSyncWithDOM() {\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n\n    if (this.root_.classList.contains(MODAL)) {\n      const {SCRIM_SELECTOR} = MDCDismissibleDrawerFoundation.strings;\n      this.scrim_ = /** @type {!Element} */ (this.root_.parentElement.querySelector(SCRIM_SELECTOR));\n      this.handleScrimClick_ = () => /** @type {!MDCModalDrawerFoundation} */ (this.foundation_).handleScrimClick();\n      this.scrim_.addEventListener('click', this.handleScrimClick_);\n      this.focusTrap_ = util.createFocusTrapInstance(this.root_, this.focusTrapFactory_);\n    }\n\n    this.handleKeydown_ = (evt) => this.foundation_.handleKeydown(evt);\n    this.handleTransitionEnd_ = (evt) => this.foundation_.handleTransitionEnd(evt);\n\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);\n\n    if (this.list_) {\n      this.list_.destroy();\n    }\n\n    const {MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(MODAL)) {\n      this.scrim_.removeEventListener('click', /** @type {!Function} */ (this.handleScrimClick_));\n      // Ensure drawer is closed to hide scrim and release focus\n      this.open = false;\n    }\n  }\n\n  getDefaultFoundation() {\n    /** @type {!MDCDrawerAdapter} */\n    const adapter = /** @type {!MDCDrawerAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      elementHasClass: (element, className) => element.classList.contains(className),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        const previousFocus = this.previousFocus_ && this.previousFocus_.focus;\n        if (this.root_.contains(document.activeElement) && previousFocus) {\n          this.previousFocus_.focus();\n        }\n      },\n      focusActiveNavigationItem: () => {\n        const activeNavItemEl = this.root_.querySelector(`.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}`);\n        if (activeNavItemEl) {\n          activeNavItemEl.focus();\n        }\n      },\n      notifyClose: () => this.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */),\n      notifyOpen: () => this.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */),\n      trapFocus: () => this.focusTrap_.activate(),\n      releaseFocus: () => this.focusTrap_.deactivate(),\n    }));\n\n    const {DISMISSIBLE, MODAL} = MDCDismissibleDrawerFoundation.cssClasses;\n    if (this.root_.classList.contains(DISMISSIBLE)) {\n      return new MDCDismissibleDrawerFoundation(adapter);\n    } else if (this.root_.classList.contains(MODAL)) {\n      return new MDCModalDrawerFoundation(adapter);\n    } else {\n      throw new Error(\n        `MDCDrawer: Failed to instantiate component. Supported variants are ${DISMISSIBLE} and ${MODAL}.`);\n    }\n  }\n}\n\nexport {MDCDrawer, MDCDismissibleDrawerFoundation, MDCModalDrawerFoundation, util};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @param {!Element} surfaceEl\n * @param {!Function} focusTrapFactory\n * @return {!FocusTrapInstance}\n */\nfunction createFocusTrapInstance(surfaceEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    clickOutsideDeactivates: true,\n    initialFocus: false, // Navigation drawer handles focusing on active nav item.\n    escapeDeactivates: false, // Navigation drawer handles ESC.\n    returnFocusOnDeactivate: false, // Navigation drawer handles restore focus.\n  });\n}\n\nexport {createFocusTrapInstance};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      followHref: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** {boolean} */\n    this.wrapFocus_ = false;\n    /** {boolean} */\n    this.isVertical_ = true;\n    /** {boolean} */\n    this.isSingleSelectionList_ = false;\n    /** {number} */\n    this.selectedIndex_ = -1;\n    /** {boolean} */\n    this.useActivatedClass_ = false;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @param {number} index */\n  setSelectedIndex(index) {\n    if (index < 0 || index >= this.adapter_.getListItemCount()) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(index)) {\n      this.setAriaAttributesForCheckbox_(index);\n    } else if (this.adapter_.hasRadioAtIndex(index)) {\n      this.setAriaAttributesForRadio_(index);\n    } else {\n      this.setAriaAttributesForSingleSelect_(index);\n      this.setClassNamesForSingleSelect_(index);\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);\n    } else if (this.selectedIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setAriaAttributesForCheckbox_(index) {\n    const ariaAttributeValue = this.adapter_.isCheckboxCheckedAtIndex(index) ? 'true' : 'false';\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, ariaAttributeValue);\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setAriaAttributesForRadio_(index) {\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n  }\n\n  /**\n  * @param {number} index\n  * @private\n  */\n  setAriaAttributesForSingleSelect_(index) {\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setClassNamesForSingleSelect_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        if (this.isSingleSelectionList_) {\n          // Check if the space key was pressed on the list item or a child element.\n          this.preventDefaultEvent_(evt);\n        }\n\n        const hasCheckboxOrRadio = this.hasCheckboxOrRadioAtIndex_(listItemIndex);\n        if (hasCheckboxOrRadio) {\n          this.toggleCheckboxOrRadioAtIndex_(listItemIndex);\n          this.preventDefaultEvent_(evt);\n        }\n\n        if (this.isSingleSelectionList_ || hasCheckboxOrRadio) {\n          this.setSelectedIndex(currentIndex);\n        }\n\n        // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n        this.adapter_.followHref(currentIndex);\n      }\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (toggleCheckbox) {\n      this.toggleCheckboxOrRadioAtIndex_(index);\n    }\n\n    if (this.isSingleSelectionList_ || this.hasCheckboxOrRadioAtIndex_(index)) {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n  }\n\n  focusFirstElement() {\n    if (this.adapter_.getListItemCount() > 0) {\n      this.adapter_.focusItemAtIndex(0);\n    }\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    if (lastIndex >= 0) {\n      this.adapter_.focusItemAtIndex(lastIndex);\n    }\n  }\n\n  /**\n   * Toggles checkbox or radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  toggleCheckboxOrRadioAtIndex_(index) {\n    if (!this.hasCheckboxOrRadioAtIndex_(index)) return;\n\n    let isChecked = true;\n    if (this.adapter_.hasCheckboxAtIndex(index)) {\n      isChecked = !this.adapter_.isCheckboxCheckedAtIndex(index);\n    }\n\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean} Return true if list item contains checkbox or radio input at given index.\n   */\n  hasCheckboxOrRadioAtIndex_(index) {\n    return this.adapter_.hasCheckboxAtIndex(index) || this.adapter_.hasRadioAtIndex(index);\n  }\n}\n\nexport default MDCListFoundation;\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active || listeningFocusTrap !== trap) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCListFoundation from './foundation';\nimport MDCListAdapter from './adapter';\nimport {matches} from '@material/dom/ponyfill';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends MDCComponent<!MDCListFoundation>\n */\nclass MDCList extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Function} */\n    this.handleKeydown_;\n    /** @private {!Function} */\n    this.handleClick_;\n    /** @private {!Function} */\n    this.focusInEventListener_;\n    /** @private {!Function} */\n    this.focusOutEventListener_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCList}\n   */\n  static attachTo(root) {\n    return new MDCList(root);\n  }\n\n  destroy() {\n    this.root_.removeEventListener('keydown', this.handleKeydown_);\n    this.root_.removeEventListener('click', this.handleClick_);\n    this.root_.removeEventListener('focusin', this.focusInEventListener_);\n    this.root_.removeEventListener('focusout', this.focusOutEventListener_);\n  }\n\n  initialSyncWithDOM() {\n    this.handleClick_ = this.handleClickEvent_.bind(this);\n    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n    this.root_.addEventListener('keydown', this.handleKeydown_);\n    this.root_.addEventListener('focusin', this.focusInEventListener_);\n    this.root_.addEventListener('focusout', this.focusOutEventListener_);\n    this.root_.addEventListener('click', this.handleClick_);\n    this.layout();\n    this.initializeListType();\n  }\n\n  layout() {\n    const direction = this.root_.getAttribute(strings.ARIA_ORIENTATION);\n    this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n\n    // List items need to have at least tabindex=-1 to be focusable.\n    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))\n      .forEach((ele) => {\n        ele.setAttribute('tabindex', -1);\n      });\n\n    // Child button/a elements are not tabbable until the list item is focused.\n    [].slice.call(this.root_.querySelectorAll(strings.FOCUSABLE_CHILD_ELEMENTS))\n      .forEach((ele) => ele.setAttribute('tabindex', -1));\n  }\n\n  /**\n   * Used to figure out which list item this event is targetting. Or returns -1 if\n   * there is no list item\n   * @param {Event} evt\n   * @private\n   */\n  getListItemIndex_(evt) {\n    let eventTarget = /** @type {HTMLElement} */ (evt.target);\n    let index = -1;\n\n    // Find the first ancestor that is a list item or the list.\n    while (!eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)\n    && !eventTarget.classList.contains(cssClasses.ROOT)) {\n      eventTarget = eventTarget.parentElement;\n    }\n\n    // Get the index of the element if it is a list item.\n    if (eventTarget.classList.contains(cssClasses.LIST_ITEM_CLASS)) {\n      index = this.listElements.indexOf(eventTarget);\n    }\n\n    return index;\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusInEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusIn(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleFocusOutEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n    this.foundation_.handleFocusOut(evt, index);\n  }\n\n  /**\n   * Used to figure out which element was focused when keydown event occurred before sending the event to the\n   * foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleKeydownEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    if (index >= 0) {\n      this.foundation_.handleKeydown(evt, evt.target.classList.contains(cssClasses.LIST_ITEM_CLASS), index);\n    }\n  }\n\n  /**\n   * Used to figure out which element was clicked before sending the event to the foundation.\n   * @param {Event} evt\n   * @private\n   */\n  handleClickEvent_(evt) {\n    const index = this.getListItemIndex_(evt);\n\n    // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n    const toggleCheckbox = !matches(/** @type {!Element} */ (evt.target), strings.CHECKBOX_RADIO_SELECTOR);\n    this.foundation_.handleClick(index, toggleCheckbox);\n  }\n\n  initializeListType() {\n    // Pre-selected list item in single selected list or checked list item if list with radio input.\n    const preselectedElement = this.root_.querySelector(`.${cssClasses.LIST_ITEM_ACTIVATED_CLASS},\n        .${cssClasses.LIST_ITEM_SELECTED_CLASS},\n        ${strings.ARIA_CHECKED_RADIO_SELECTOR}`);\n\n    if (preselectedElement) {\n      if (preselectedElement.classList.contains(cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n        this.foundation_.setUseActivatedClass(true);\n      }\n\n      this.singleSelection = true;\n\n      // Automatically set selected index if single select list type or list with radio inputs.\n      this.selectedIndex = this.listElements.indexOf(preselectedElement);\n    }\n  }\n\n  /** @param {boolean} value */\n  set vertical(value) {\n    this.foundation_.setVerticalOrientation(value);\n  }\n\n  /** @return Array<!Element>*/\n  get listElements() {\n    return [].slice.call(this.root_.querySelectorAll(strings.ENABLED_ITEMS_SELECTOR));\n  }\n\n  /** @param {boolean} value */\n  set wrapFocus(value) {\n    this.foundation_.setWrapFocus(value);\n  }\n\n  /** @param {boolean} isSingleSelectionList */\n  set singleSelection(isSingleSelectionList) {\n    this.foundation_.setSingleSelection(isSingleSelectionList);\n  }\n\n  /** @param {number} index */\n  set selectedIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {!MDCListFoundation} */\n  getDefaultFoundation() {\n    return new MDCListFoundation(/** @type {!MDCListAdapter} */ (Object.assign({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.setAttribute(attr, value);\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.removeAttribute(attr);\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.add(className);\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.classList.remove(className);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.listElements[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex];\n        const listItemChildren = [].slice.call(element.querySelectorAll(strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n        listItemChildren.forEach((ele) => ele.setAttribute('tabindex', tabIndexValue));\n      },\n      followHref: (index) => {\n        const listItem = this.listElements[index];\n        if (listItem && listItem.href) {\n          listItem.click();\n        }\n      },\n      hasCheckboxAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n      },\n      hasRadioAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        return !!listItem.querySelector(strings.RADIO_SELECTOR);\n      },\n      isCheckboxCheckedAtIndex: (index) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n        return toggleEl.checked;\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index];\n        const toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n        toggleEl.checked = isChecked;\n\n        const event = document.createEvent('Event');\n        event.initEvent('change', true, true);\n        toggleEl.dispatchEvent(event);\n      },\n    })));\n  }\n}\n\nexport {MDCList, MDCListFoundation};\n","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node === this.doc.documentElement) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"sourceRoot":""}